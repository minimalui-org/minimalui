{"version":3,"sources":["src/screens/AppBarScreen.tsx","src/components/Code.tsx","src/components/Monospace.tsx","src/components/SyntaxHighlighter.tsx","src/screens/AvatarScreen.tsx","src/screens/ButtonScreen.tsx","src/screens/CardScreen.tsx","src/screens/DemoScreen.tsx","src/screens/GetStartedScreen.tsx","src/screens/InputScreen.tsx","src/screens/LayoutScreen.tsx","src/screens/ModalScreen.tsx","src/screens/ResponsiveScreen.tsx","src/screens/SwitchScreen.tsx","src/screens/ThemingScreen.tsx","src/screens/TypographyScreen.tsx","src/screens/UtilitiesScreen.tsx","src/Navigator.tsx","App.tsx"],"names":["AppBarScreen","style","width","spacing","Code","children","theme","useTheme","textStyle","backgroundColor","palette","background","paper","fontFamily","fontSize","padding","Monospace","SyntaxHighlighter","props","stylesheet","CodeTag","View","customStyle","PreTag","renderer","params","hljs","renderNode","nodes","key","className","reduce","acc","node","index","push","properties","value","Text","color","map","c","rows","type","lightStyle","darkStyle","AvatarScreen","source","uri","language","ButtonScreen","colors","variant","onPress","CardScreen","Title","title","DemoScreen","GetStartedScreen","InputScreen","LayoutScreen","ModalScreen","useState","open","setOpen","onClose","visible","ResponsiveScreen","SwitchScreen","React","state","setState","onValueChange","href","ThemingScreen","TypographyScreen","UtilitiesScreen","RootStack","createDrawerNavigator","linking","enabled","prefixes","Drawer","DrawerContentScrollView","DrawerItemList","Navigator","darkMode","setDarkMode","useDimensions","isReady","setIsReady","initialState","setInitialState","useEffect","a","async","AsyncStorage","getItem","savedStateString","undefined","JSON","parse","restoreState","navigationTheme","dark","default","border","card","notification","secondary","primary","text","isLargeScreen","NavigationContainer","onStateChange","setItem","stringify","drawerContent","drawerStyle","borderRightColor","borderRightWidth","drawerType","screenOptions","header","scene","descriptor","navigation","options","name","route","flexDirection","alignItems","toggleDrawer","Feather","flex","size","headerShown","Screen","component","Screens","App","createTheme","useFonts","NotoSansRegular","NotoSans_400Regular","NotoSansBold","NotoSans_700Bold","Inconsolata","Inconsolata_500Medium"],"mappings":"6PAGaA,EAAwC,WACnD,OACE,gBAAC,aAAD,CAAYC,MAAO,CAAEC,MAAO,SAC1B,gBAAC,YAAD,CAAWC,QAAS,GAClB,gBAAC,SAAD,SCJKC,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxCC,EAAQC,qBAERC,EAAY,CAChBC,gBAAiBH,EAAMI,QAAQC,WAAWC,MAC1CC,WAAY,cACZC,SAAU,GACVC,QAAST,EAAMH,QAAQ,KAGzB,OAAO,gBAAC,OAAD,CAAMF,MAAOO,GAAYH,ICVrBW,EAAqC,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SAKnD,OAAO,gBAAC,OAAD,CAAMJ,MAJK,CAChBY,WAAY,gBAGkBR,I,4ECkBrBY,EAAqE,SAChFC,GAEA,IAEIC,EAFEb,EAAQC,qBAsDd,OACE,gBAAC,IAAD,OACMW,EADN,CAEEE,QAASC,IACTC,YAAa,CACXP,QAAS,GAEXQ,OAAQF,IACRG,SAtBmB,SAACC,GAEtB,OADAN,EAAaM,EAAON,WAElB,gBAACE,EAAA,EAAD,CACEpB,MAAO,CACLkB,EAAWO,KACX,CAAEjB,gBAAiBH,EAAMI,QAAQC,WAAWC,MAAOG,QAAS,MA1CjD,SAAbY,EAAcC,GAAD,IAAgBC,EAAhB,uDAAsB,IAAKC,EAA3B,uDAAiD,GAAjD,OACjBF,EAAMG,QAA0B,SAACC,EAAKC,EAAMC,GACtB,IAAD,EAAfD,EAAK5B,UACP2B,EAAIG,KAAJ,MAAAH,EAAG,IACEL,EACDM,EAAK5B,SACFwB,EAFQ,IAEDK,EAFC,SAGXD,EAAKG,iBAHM,EAGX,EAAiBN,aA0BvB,OArBIG,EAAKI,OACPL,EAAIG,KACF,gBAACG,EAAA,EAAD,CAEET,IAAQA,EAAL,IAAYK,EACfjC,MAAK,CACH,CACEsC,MAAOpB,EAAWO,KAAKa,QAFtB,WAIAT,EAAUU,KAAI,SAACC,GAAD,OAAOtB,EAAWsB,OAJhC,CAKH,CACE3B,SAAU,GACVD,WAAY,kBAIfoB,EAAKI,QAKLL,IACN,IAWEL,CAAWF,EAAOiB,QAcrBzC,MAA8B,UAAvBK,EAAMI,QAAQiC,KAAmBC,IAAaC,QCxF9CC,EAAwC,WACnD,OACE,gBAAC,aAAD,CAAY7C,MAAO,CAAEC,MAAO,SAC1B,gBAAC,YAAD,CAAWC,QAAS,GAClB,gBAAC,SAAD,CAAQ4C,OAAQ,CAAEC,IAAK,+BACvB,gBAAC,SAAD,MACA,gBAAC,EAAD,CAAmBC,SAAS,cAA5B,gMCPKC,EAAwC,WACnD,IACMC,EAAS,CACb,UACA,UACA,YACA,QACA,OACA,UACA,WAGF,OACE,gBAAC,aAAD,CAAYlD,MAAO,CAAEC,MAAO,SAC1B,gBAAC,YAAD,CAAWC,QAAS,GAbP,CAAC,OAAQ,YAAa,WAAY,YAcnCqC,KAAI,SAACY,GAAD,OACZD,EAAOX,KAAI,SAACD,GAAD,OACT,gBAAC,YAAD,CAAWV,IAAQuB,EAAL,IAAgBb,GAC5B,gBAAC,SAAD,CAAQA,MAAOA,EAAOc,QAAS,kBAAM,MAAMD,QAASA,GAC9CA,EADN,IACiBb,aCnBlBe,EAAsC,WACjD,OACE,gBAAC,aAAD,CAAYrD,MAAO,CAAEC,MAAO,SAC1B,gBAAC,YAAD,CAAWC,QAAS,GAClB,gBAAC,OAAD,KACE,gBAAC,OAAKoD,MAAN,CAAYC,MAAM,cCEfC,EAAsC,WACjD,OACE,gBAAC,aAAD,CAAYxD,MAAO,CAAEC,MAAO,SAC1B,gBAAC,YAAD,CAAWC,QAAS,GAClB,gBAAC,WAAD,aACA,gBAAC,SAAD,CAAQA,QAAS,IACjB,gBAAC,QAAD,YACA,gBAAC,SAAD,MACA,gBAAC,YAAD,+IAIA,gBAAC,SAAD,MAEA,gBAAC,SAAD,CAAQA,QAAS,IAEjB,gBAAC,QAAD,gBACA,gBAAC,SAAD,MACA,gBAAC,YAAD,cACA,gBAAC,SAAD,SClBKuD,EAA4C,WACvD,OACE,gBAAC,aAAD,CAAYzD,MAAO,CAAEC,MAAO,SAC1B,gBAAC,YAAD,CAAWC,QAAS,GAClB,gBAAC,WAAD,oBACA,gBAAC,SAAD,CAAQA,QAAS,IACjB,gBAAC,QAAD,uCACA,gBAAC,SAAD,MACA,gBAAC,YAAD,6NAMA,gBAAC,SAAD,MACA,gBAAC,YAAD,uPAMA,gBAAC,SAAD,MACA,gBAAC,YAAD,+KAMA,gBAAC,SAAD,CAAQA,QAAS,IAEjB,gBAAC,QAAD,qBACA,gBAAC,SAAD,MACA,gBAAC,YAAD,0DACA,gBAAC,SAAD,MACA,gBAAC,EAAD,CAAmB8C,SAAS,QAA5B,4BAGA,gBAAC,SAAD,MACA,gBAAC,YAAD,WACA,gBAAC,SAAD,MACA,gBAAC,EAAD,CAAmBA,SAAS,QAA5B,sCAIA,gBAAC,SAAD,CAAQ9C,QAAS,IAEjB,gBAAC,QAAD,cACA,gBAAC,SAAD,MACA,gBAAC,YAAD,wDACmD,IACjD,gBAAC,EAAD,wBAFF,yRAQA,gBAAC,SAAD,MACA,gBAAC,EAAD,CAAmB8C,SAAS,cAA5B,+XAiBA,gBAAC,SAAD,MACA,gBAAC,YAAD,wMCnFKU,EAAuC,WAClD,OACE,gBAAC,aAAD,CAAY1D,MAAO,CAAEC,MAAO,SAC1B,gBAAC,YAAD,CAAWC,QAAS,GAClB,gBAAC,QAAD,SCJKyD,EAAwC,WACnD,OACE,gBAAC,aAAD,CAAY3D,MAAO,CAAEC,MAAO,SAC1B,gBAAC,YAAD,CAAWC,QAAS,GAClB,gBAAC,SAAD,CAAQ4C,OAAQ,CAAEC,IAAK,kCCGlBa,EAAuC,WAAO,IAAD,EAChCC,oBAAkB,GADc,WACjDC,EADiD,KAC3CC,EAD2C,KAMxD,OACE,kBAAC,aAAD,CAAY/D,MAAO,CAAEC,MAAO,SAC1B,kBAAC,YAAD,CAAWC,QAAS,GAClB,kBAAC,SAAD,CAAQkD,QANK,kBAAMW,GAAQ,KAM3B,QACA,kBAAC,QAAD,CAAOC,QANO,kBAAMD,GAAQ,IAMCE,QAASH,GACpC,kBAAC,QAAD,cACA,kBAAC,YAAD,yBCnBGI,EAA4C,WACvD,OACE,gBAAC,aAAD,CAAYlE,MAAO,CAAEC,MAAO,SAC1B,gBAAC,YAAD,KACE,gBAAC,SAAD,CAAQ6C,OAAQ,CAAEC,IAAK,kCCUlBoB,EAAwC,WAAO,IAAD,EAC/BC,YAAe,GADgB,WAClDC,EADkD,KAC3CC,EAD2C,KAGzD,OACE,gBAAC,aAAD,CAAYtE,MAAO,CAAEC,MAAO,SAC1B,gBAAC,YAAD,CAAWC,QAAS,GAClB,gBAAC,WAAD,eACA,gBAAC,SAAD,CAAQA,QAAS,IACjB,gBAAC,QAAD,gBACA,gBAAC,SAAD,MACA,gBAAC,SAAD,CAAQqE,cAAe,kBAAMD,GAAUD,IAAQjC,MAAOiC,IACtD,gBAAC,SAAD,MACA,gBAAC,EAAD,CAAmBrB,SAAS,cAA5B,kQAYA,gBAAC,SAAD,CAAQ9C,QAAS,IACjB,gBAAC,QAAD,cACA,gBAAC,SAAD,MACA,gBAAC,QAAD,KACE,gBAAC,MAAD,KACE,gBAAC,OAAD,KACE,gBAAC,aAAD,cAEF,gBAAC,OAAD,KACE,gBAAC,aAAD,cAEF,gBAAC,OAAD,KACE,gBAAC,aAAD,iBAEF,gBAAC,OAAD,KACE,gBAAC,aAAD,sBAGJ,gBAAC,MAAD,KACE,gBAAC,OAAD,KACE,gBAAC,EAAD,0BAEF,gBAAC,OAAD,KACE,gBAAC,YAAD,CAAWoC,MAAM,aAAjB,WAEF,gBAAC,OAAD,MACA,gBAAC,OAAD,KACE,gBAAC,YAAD,0EAEO,gBAAC,EAAD,mBAFP,yBAON,gBAAC,SAAD,MACA,gBAAC,YAAD,uEAEE,gBAAC,OAAD,CAAMkC,KAAK,uCAAX,UAFF,MAIA,gBAAC,SAAD,SCrEKC,EAAyC,WACpD,OACE,gBAAC,aAAD,CAAYzE,MAAO,CAAEC,MAAO,SAC1B,gBAAC,YAAD,CAAWC,QAAS,GAClB,gBAAC,WAAD,gBACA,gBAAC,SAAD,CAAQA,QAAS,IACjB,gBAAC,QAAD,0CACA,gBAAC,SAAD,MACA,gBAAC,YAAD,2JAKA,gBAAC,SAAD,MACA,gBAAC,EAAD,CAAmB8C,SAAS,cAA5B,8PAaA,gBAAC,SAAD,MACA,gBAAC,YAAD,oNAKA,gBAAC,SAAD,MACA,gBAAC,EAAD,CAAmBA,SAAS,cAA5B,4aAqBA,gBAAC,SAAD,CAAQ9C,QAAS,IAEjB,gBAAC,QAAD,kBACA,gBAAC,SAAD,MACA,gBAAC,YAAD,sMAKA,gBAAC,SAAD,MACA,gBAAC,EAAD,CAAmB8C,SAAS,cAA5B,gYAoBA,gBAAC,SAAD,CAAQ9C,QAAS,IAEjB,gBAAC,QAAD,4CACA,gBAAC,SAAD,MACA,gBAAC,YAAD,mLAKA,gBAAC,SAAD,MACA,gBAAC,EAAD,CAAmB8C,SAAS,cAA5B,2TAcA,gBAAC,SAAD,CAAQ9C,QAAS,IAEjB,gBAAC,QAAD,mDACA,gBAAC,SAAD,MACA,gBAAC,YAAD,6XAQA,gBAAC,SAAD,MACA,gBAAC,EAAD,CAAmB8C,SAAS,cAA5B,oUC1HK0B,EAA4C,WAYvD,OACE,gBAAC,aAAD,CAAY1E,MAAO,CAAEC,MAAO,SAC1B,gBAAC,YAAD,CAAWC,QAAS,GAClB,gBAAC,WAAD,iBACA,gBAAC,QAAD,cACA,gBAAC,aAAD,mBACA,gBAAC,YAAD,kBACA,gBAAC,UAAD,mBC3BKyE,EAA2C,WACtD,OACE,gBAAC,aAAD,CAAY3E,MAAO,CAAEC,MAAO,SAC1B,gBAAC,YAAD,CAAWC,QAAS,GAClB,gBAAC,SAAD,CAAQ4C,OAAQ,CAAEC,IAAK,kCCezB6B,EAAYC,cAEZC,EAAU,CAAEC,SAAS,EAAMC,SAAU,CAAC,uBAEtCC,EAA+D,SACnEhE,GAEA,OACE,kBAACiE,EAAA,EAA4BjE,EAC3B,kBAACkE,EAAA,EAAmBlE,KAkJXmE,EAxImD,SAAC,GAG5D,IAFLC,EAEI,EAFJA,SACAC,EACI,EADJA,YAEQ5C,EAAS6C,0BAAT7C,KADJ,EAE0BmB,oBAAS,GAFnC,WAEG2B,EAFH,KAEYC,EAFZ,OAGoC5B,qBAHpC,WAGG6B,EAHH,KAGiBC,EAHjB,KAIEtF,EAAQC,qBAwBd,GAtBAsF,qBAAU,WAiBHJ,GAhBgB,qBAAAK,EAAAC,OAAA,2EAAAD,EAAA,MAGcE,IAAaC,QAAQ,qBAHnC,OAGXC,EAHW,YAQHC,KAJR7B,EAAQ4B,EACVE,KAAKC,MAAMH,QACXC,IAGFP,EAAgBtB,GATD,uBAYjBoB,GAAW,GAZM,8EAiBnBY,KAED,CAACb,KAECA,EACH,OAAO,KAGT,IAAMc,EAAkB,CACtBC,KAAMlB,EACNnC,OAAQ,CACNxC,WAAYL,EAAMI,QAAQC,WAAW8F,QACrCC,OAAQ,cACRC,KAAMrG,EAAMI,QAAQC,WAAWC,MAC/BgG,aAActG,EAAMI,QAAQmG,UAC5BC,QAASxG,EAAMI,QAAQoG,QACvBC,KAAMzG,EAAMI,QAAQqG,KAAKD,UAIvBE,EAAyB,OAATrE,GAA0B,OAATA,EAEvC,OACE,kBAACsE,EAAA,EAAD,CACEtB,aAAcA,EACdZ,QAASA,EACTmC,cAAe,SAAC5C,GAAD,OACb0B,IAAamB,QAAQ,mBAAoBf,KAAKgB,UAAU9C,KAE1DhE,MAAOiG,GAEP,kBAAC1B,EAAUQ,UAAX,CACEgC,cAAe,SAACnG,GAAD,OAAW,kBAAC,EAAWA,IACtCoG,YAAa,CACX7G,gBAAiBH,EAAMI,QAAQC,WAAW8F,QAC1Cc,iBAAkBjH,EAAMI,QAAQC,WAAWC,MAC3C4G,iBAAkB,EAClBtH,MAAO,KAETuH,WAAYT,EAAgB,YAAc,QAC1CU,cAAe,CACbC,OAAQ,oBACNC,MADM,IAEJC,WACEC,EAHE,EAGFA,WACWtE,EAJT,EAIFuE,QAAWvE,MAEJwE,EANL,EAMJC,MAASD,KANL,OASN,kBAAC,YAAD,CAAW/H,MAAO,CAAEiI,cAAe,MAAOC,WAAY,WACpD,kBAAC,aAAD,CAAY9E,QAAUyE,EAAmBM,cACvC,kBAACC,EAAA,EAAD,CAASL,KAAK,UAEhB,kBAAC,SAAD,MACA,kBAAC,QAAD,CAAO/H,MAAO,CAAEqI,KAAM,IAAM9E,GAASwE,GACrC,kBAACK,EAAA,EAAD,CACE9F,MAAOjC,EAAMI,QAAQqG,KAAKD,QAC1BkB,KAAK,MACLO,KAAM,KAER,kBAAC,SAAD,MACA,kBAAC,SAAD,CACE/D,cAAe,kBAAMe,GAAaD,IAClCjD,MAAOiD,IAET,kBAAC,SAAD,MACA,kBAAC+C,EAAA,EAAD,CACE9F,MAAOjC,EAAMI,QAAQqG,KAAKD,QAC1BkB,KAAK,OACLO,KAAM,OAIZC,aAAa,IAGf,kBAAC3D,EAAU4D,OAAX,CACEC,UAAWC,EACXX,KAAK,gBAEP,kBAACnD,EAAU4D,OAAX,CAAkBC,UAAWC,EAAuBX,KAAK,YACzD,kBAACnD,EAAU4D,OAAX,CAAkBC,UAAWC,EAAoBX,KAAK,SACtD,kBAACnD,EAAU4D,OAAX,CAAkBC,UAAWC,EAAsBX,KAAK,WACxD,kBAACnD,EAAU4D,OAAX,CAAkBC,UAAWC,EAAsBX,KAAK,WACxD,kBAACnD,EAAU4D,OAAX,CAAkBC,UAAWC,EAAsBX,KAAK,WACxD,kBAACnD,EAAU4D,OAAX,CAAkBC,UAAWC,EAAoBX,KAAK,SACtD,kBAACnD,EAAU4D,OAAX,CAAkBC,UAAWC,EAAsBX,KAAK,WACxD,kBAACnD,EAAU4D,OAAX,CAAkBC,UAAWC,EAAqBX,KAAK,UACvD,kBAACnD,EAAU4D,OAAX,CAAkBC,UAAWC,EAAqBX,KAAK,UACvD,kBAACnD,EAAU4D,OAAX,CACEC,UAAWC,EACXX,KAAK,eAGP,kBAACnD,EAAU4D,OAAX,CAAkBC,UAAWC,EAAsBX,KAAK,WACxD,kBAACnD,EAAU4D,OAAX,CACEC,UAAWC,EACXX,KAAK,eAEP,kBAACnD,EAAU4D,OAAX,CACEC,UAAWC,EACXX,KAAK,iBC7JA,SAASY,IAA2B,IAAD,EAChB9E,oBAAkB,GADF,WACzCwB,EADyC,KAC/BC,EAD+B,KAG1CjF,EAAQuI,sBAAY,CACxBnI,QAAS,CAAEiC,KAAM2C,EAAW,OAAS,WAJS,EAO/BwD,YAAS,CACxBC,gBAAiBC,IACjBC,aAAcC,IACdC,YAAaC,MAGf,OAbgD,YAkB9C,kBAAC,kBAAD,CAAiB9I,MAAOA,GACtB,kBAAC,EAAD,CAAWgF,SAAUA,EAAUC,YAAaA,KALvC,O","file":"static/js/app.81ba3a49.chunk.js","sourcesContent":["import { AppBar, Container, ScrollView } from \"@minimalui/core\";\nimport * as React from \"react\";\n\nexport const AppBarScreen: React.FunctionComponent = () => {\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container spacing={8}>\n        <AppBar />\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default AppBarScreen;\n","import { Text, useTheme } from \"@minimalui/core\";\nimport * as React from \"react\";\n\nexport const Code: React.FunctionComponent = ({ children }) => {\n  const theme = useTheme();\n\n  const textStyle = {\n    backgroundColor: theme.palette.background.paper,\n    fontFamily: \"Inconsolata\",\n    fontSize: 14,\n    padding: theme.spacing(0.5),\n  };\n\n  return <Text style={textStyle}>{children}</Text>;\n};\n\nexport default Code;\n","import { Text } from \"@minimalui/core\";\nimport * as React from \"react\";\n\nexport const Monospace: React.FunctionComponent = ({ children }) => {\n  const textStyle = {\n    fontFamily: \"Inconsolata\",\n  };\n\n  return <Text style={textStyle}>{children}</Text>;\n};\n\nexport default Monospace;\n","import { useTheme } from \"@minimalui/core\";\nimport * as React from \"react\";\nimport { Text, TextStyle, View } from \"react-native\";\nimport Highlighter, { SyntaxHighlighterProps } from \"react-syntax-highlighter\";\nimport {\n  tomorrow as lightStyle,\n  tomorrowNight as darkStyle,\n} from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\ntype Node = {\n  children?: Node[];\n  properties?: {\n    className: string[];\n  };\n  tagName?: string;\n  type: string;\n  value?: string;\n};\n\ntype StyleSheet = { [key: string]: TextStyle };\n\ntype RendererParams = {\n  rows: Node[];\n  stylesheet: StyleSheet;\n};\n\nexport const SyntaxHighlighter: React.FunctionComponent<SyntaxHighlighterProps> = (\n  props\n) => {\n  const theme = useTheme();\n\n  let stylesheet: StyleSheet;\n\n  const renderNode = (nodes: Node[], key = \"0\", className: string[] = []) =>\n    nodes.reduce<React.ReactNode[]>((acc, node, index) => {\n      if (node.children) {\n        acc.push(\n          ...renderNode(\n            node.children,\n            `${key}.${index}`,\n            node.properties?.className\n          )\n        );\n      }\n\n      if (node.value) {\n        acc.push(\n          <Text\n            // eslint-disable-next-line react/no-array-index-key\n            key={`${key}.${index}`}\n            style={[\n              {\n                color: stylesheet.hljs.color,\n              },\n              ...className.map((c) => stylesheet[c]),\n              {\n                fontSize: 14,\n                fontFamily: \"Inconsolata\",\n              },\n            ]}\n          >\n            {node.value}\n          </Text>\n        );\n      }\n\n      return acc;\n    }, []);\n\n  const nativeRenderer = (params: RendererParams) => {\n    stylesheet = params.stylesheet;\n    return (\n      <View\n        style={[\n          stylesheet.hljs,\n          { backgroundColor: theme.palette.background.paper, padding: 16 },\n        ]}\n      >\n        {renderNode(params.rows)}\n      </View>\n    );\n  };\n\n  return (\n    <Highlighter\n      {...props}\n      CodeTag={View}\n      customStyle={{\n        padding: 0,\n      }}\n      PreTag={View}\n      renderer={nativeRenderer}\n      style={theme.palette.type === \"light\" ? lightStyle : darkStyle}\n    />\n  );\n};\n\nexport default SyntaxHighlighter;\n","import { Avatar, Container, ScrollView, Spacer } from \"@minimalui/core\";\nimport { SyntaxHighlighter } from \"components\";\nimport * as React from \"react\";\n\nexport const AvatarScreen: React.FunctionComponent = () => {\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container spacing={8}>\n        <Avatar source={{ uri: \"https://i.pravatar.cc/300\" }} />\n        <Spacer />\n        <SyntaxHighlighter language=\"typescript\">\n          {`import * as React from 'react';\nimport { Avatar } from '@minimalui/core';\n\nexport default () => {\n  return (\n    <Avatar source={{ uri: \"https://i.pravatar.cc/300\" }} />\n  );\n}`}\n        </SyntaxHighlighter>\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default AvatarScreen;\n","import { Button, Container, ScrollView } from \"@minimalui/core\";\nimport * as React from \"react\";\n\nexport const ButtonScreen: React.FunctionComponent = () => {\n  const variants = [\"text\", \"contained\", \"outlined\", \"gradient\"] as const;\n  const colors = [\n    \"default\",\n    \"primary\",\n    \"secondary\",\n    \"error\",\n    \"info\",\n    \"success\",\n    \"warning\",\n  ] as const;\n\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container spacing={8}>\n        {variants.map((variant) =>\n          colors.map((color) => (\n            <Container key={`${variant} ${color}`}>\n              <Button color={color} onPress={() => null} variant={variant}>\n                {`${variant} ${color}`}\n              </Button>\n            </Container>\n          ))\n        )}\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default ButtonScreen;\n","import { Card, Container, ScrollView } from \"@minimalui/core\";\nimport * as React from \"react\";\n\nexport const CardScreen: React.FunctionComponent = () => {\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container spacing={8}>\n        <Card>\n          <Card.Title title=\"Hello\" />\n        </Card>\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default CardScreen;\n","import {\n  Container,\n  Headline,\n  Paragraph,\n  ScrollView,\n  Spacer,\n  Title,\n} from \"@minimalui/core\";\nimport * as React from \"react\";\n\nexport const DemoScreen: React.FunctionComponent = () => {\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container spacing={8}>\n        <Headline>Demo</Headline>\n        <Spacer spacing={4} />\n        <Title>Web</Title>\n        <Spacer />\n        <Paragraph>\n          This documentation site was made with Minimal UI. All the components\n          you see in the doc are real components exported from the library.\n        </Paragraph>\n        <Spacer />\n\n        <Spacer spacing={8} />\n\n        <Title>Android</Title>\n        <Spacer />\n        <Paragraph>Soon.</Paragraph>\n        <Spacer />\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default DemoScreen;\n","import {\n  Container,\n  Headline,\n  Paragraph,\n  ScrollView,\n  Spacer,\n  Title,\n} from \"@minimalui/core\";\nimport { Code, SyntaxHighlighter } from \"components\";\nimport * as React from \"react\";\n\nexport const GetStartedScreen: React.FunctionComponent = () => {\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container spacing={8}>\n        <Headline>Get Started</Headline>\n        <Spacer spacing={4} />\n        <Title>Why should you try Minimal UI?</Title>\n        <Spacer />\n        <Paragraph>\n          Don't reinvent the wheel. Create beautiful React Native apps by using\n          Minimal UI, a set of reusable components for all your basic needs.\n          Extends the existing ones, create your own theme and build new modern\n          apps.\n        </Paragraph>\n        <Spacer />\n        <Paragraph>\n          Minimal UI is ready to use for React Native on Android, iOS and Web.\n          We believe in the \"code once, deploy everywhere\" philosophy so all of\n          our components are cross-platforms and we have dedicated components\n          for screen size responsiveness.\n        </Paragraph>\n        <Spacer />\n        <Paragraph>\n          The library is written in Typescript and will work with both\n          Javascript and Typescript projects. All the type definitions are\n          exported directly from the main library.\n        </Paragraph>\n\n        <Spacer spacing={8} />\n\n        <Title>Installation</Title>\n        <Spacer />\n        <Paragraph>Open a terminal in your project's folder and run:</Paragraph>\n        <Spacer />\n        <SyntaxHighlighter language=\"bash\">\n          yarn add @minimalui/core\n        </SyntaxHighlighter>\n        <Spacer />\n        <Paragraph>or</Paragraph>\n        <Spacer />\n        <SyntaxHighlighter language=\"bash\">\n          npm install --save @minimalui/core\n        </SyntaxHighlighter>\n\n        <Spacer spacing={8} />\n\n        <Title>Usage</Title>\n        <Spacer />\n        <Paragraph>\n          Wrap your root component in MinimalProvider from{\" \"}\n          <Code>@minimalui/core</Code>. If you have a vanilla React Native\n          project, it's a good idea to add it in the component which is passed\n          to AppRegistry.registerComponent. This will usually be in the index.js\n          file. If you have an Expo project, you can do this inside the exported\n          component in the App.js file.\n        </Paragraph>\n        <Spacer />\n        <SyntaxHighlighter language=\"typescript\">\n          {`import * as React from 'react';\nimport { AppRegistry } from 'react-native';\nimport { MinimalProvider } from '@minimalui/core';\nimport { name as appName } from './app.json';\nimport App from './src/App';\n\nexport default function Main() {\n  return (\n    <MinimalProvider>\n      <App />\n    </MinimalProvider>\n  );\n}\n\nAppRegistry.registerComponent(appName, () => Main);`}\n        </SyntaxHighlighter>\n        <Spacer />\n        <Paragraph>\n          MinimalProvider will provides your App with context values to manage\n          theming, responsiveness, scrolling. It also acts as a portal for\n          components that need to be rendered at the root level.\n        </Paragraph>\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default GetStartedScreen;\n","import { Container, Input, ScrollView } from \"@minimalui/core\";\nimport * as React from \"react\";\n\nexport const InputScreen: React.FunctionComponent = () => {\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container spacing={8}>\n        <Input />\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default InputScreen;\n","import { Avatar, Container, ScrollView } from \"@minimalui/core\";\nimport * as React from \"react\";\n\nexport const LayoutScreen: React.FunctionComponent = () => {\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container spacing={8}>\n        <Avatar source={{ uri: \"https://i.pravatar.cc/300\" }} />\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default LayoutScreen;\n","import {\n  Button,\n  Container,\n  Modal,\n  Paragraph,\n  ScrollView,\n  Title,\n} from \"@minimalui/core\";\nimport React, { useState } from \"react\";\n\nexport const ModalScreen: React.FunctionComponent = () => {\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container spacing={8}>\n        <Button onPress={handleOpen}>Open</Button>\n        <Modal onClose={handleClose} visible={open}>\n          <Title>Hello</Title>\n          <Paragraph>I am a modal</Paragraph>\n        </Modal>\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default ModalScreen;\n","import { Avatar, Container, ScrollView } from \"@minimalui/core\";\nimport * as React from \"react\";\n\nexport const ResponsiveScreen: React.FunctionComponent = () => {\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container>\n        <Avatar source={{ uri: \"https://i.pravatar.cc/300\" }} />\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default ResponsiveScreen;\n","import {\n  Cell,\n  Container,\n  Headline,\n  Link,\n  Paragraph,\n  Row,\n  ScrollView,\n  Spacer,\n  Subheading,\n  Switch,\n  Table,\n  Title,\n} from \"@minimalui/core\";\nimport { Code, Monospace, SyntaxHighlighter } from \"components\";\nimport * as React from \"react\";\n\nexport const SwitchScreen: React.FunctionComponent = () => {\n  const [state, setState] = React.useState(false);\n\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container spacing={8}>\n        <Headline>Switch</Headline>\n        <Spacer spacing={4} />\n        <Title>Example</Title>\n        <Spacer />\n        <Switch onValueChange={() => setState(!state)} value={state} />\n        <Spacer />\n        <SyntaxHighlighter language=\"typescript\">\n          {`import * as React from 'react';\nimport { Switch } from '@minimalui/core';\n\nexport default () => {\n    const [state, setState] = React.useState(false);\n\n    return (\n        <Switch value={state} onValueChange={() => setState(!state)} />\n    );\n}`}\n        </SyntaxHighlighter>\n        <Spacer spacing={8} />\n        <Title>Props</Title>\n        <Spacer />\n        <Table>\n          <Row>\n            <Cell>\n              <Subheading>Name</Subheading>\n            </Cell>\n            <Cell>\n              <Subheading>Type</Subheading>\n            </Cell>\n            <Cell>\n              <Subheading>Default</Subheading>\n            </Cell>\n            <Cell>\n              <Subheading>Description</Subheading>\n            </Cell>\n          </Row>\n          <Row>\n            <Cell>\n              <Monospace>activeThumbColor</Monospace>\n            </Cell>\n            <Cell>\n              <Paragraph color=\"secondary\">string</Paragraph>\n            </Cell>\n            <Cell />\n            <Cell>\n              <Paragraph>\n                Color of the switch when it's on (only for Android and Web).\n                Like <Code>thumbColor</Code> but when it's on.\n              </Paragraph>\n            </Cell>\n          </Row>\n        </Table>\n        <Spacer />\n        <Paragraph>\n          Any other props supplied will be provided to the root element (\n          <Link href=\"https://reactnative.dev/docs/switch\">Switch</Link>).\n        </Paragraph>\n        <Spacer />\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default SwitchScreen;\n","import {\n  Container,\n  Headline,\n  Paragraph,\n  ScrollView,\n  Spacer,\n  Title,\n} from \"@minimalui/core\";\nimport { SyntaxHighlighter } from \"components\";\nimport * as React from \"react\";\n\nexport const ThemingScreen: React.FunctionComponent = () => {\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container spacing={8}>\n        <Headline>Theming</Headline>\n        <Spacer spacing={4} />\n        <Title>Applying a theme to the whole app</Title>\n        <Spacer />\n        <Paragraph>\n          To support custom themes, paper exports a Provider component. You need\n          to wrap your root component with the provider to be able to support\n          themes:\n        </Paragraph>\n        <Spacer />\n        <SyntaxHighlighter language=\"typescript\">\n          {`import * as React from 'react';\nimport { MinimalProvider } from '@minimalui/core';\nimport App from './src/App';\n\nexport default function Main() {\n    return (\n        <MinimalProvider>\n            <App />\n        </MinimalProvider>\n    );\n}`}\n        </SyntaxHighlighter>\n        <Spacer />\n        <Paragraph>\n          If no prop is specified, this will apply the default theme to the\n          components (see section below). You can also provide a theme prop with\n          a partial theme object that will be merged with the default theme:\n        </Paragraph>\n        <Spacer />\n        <SyntaxHighlighter language=\"typescript\">\n          {`import * as React from 'react';\nimport { createTheme, MinimalProvider } from '@minimalui/core';\nimport App from './src/App';\n\nexport default function Main() {\n    const theme = createTheme({\n        palette: {\n            primary: \"#757ce8\",\n            secondary: \"#3f50b5\",\n        }\n    });\n\n    return (\n        <MinimalProvider theme={theme}>\n            <App />\n        </MinimalProvider>\n    );\n}`}\n        </SyntaxHighlighter>\n\n        <Spacer spacing={8} />\n\n        <Title>Dark Mode</Title>\n        <Spacer />\n        <Paragraph>\n          Dark Mode is supported out of the box. Simply pass the value \"dark\" in\n          your createTheme call. You can see a real life example with the switch\n          button on the top right corner of this website.\n        </Paragraph>\n        <Spacer />\n        <SyntaxHighlighter language=\"typescript\">\n          {`import * as React from 'react';\nimport { createTheme, MinimalProvider } from '@minimalui/core';\nimport App from './src/App';\n\nexport default function Main() {\n    const theme = createTheme({\n        palette: {\n            type: \"dark\"\n        }\n    });\n\n    return (\n        <MinimalProvider theme={theme}>\n            <App />\n        </MinimalProvider>\n    );\n}`}\n        </SyntaxHighlighter>\n\n        <Spacer spacing={8} />\n\n        <Title>Access the theme in your components</Title>\n        <Spacer />\n        <Paragraph>\n          To access the theme in your own components, you can use the useTheme\n          hook exported from the library. This hook must be used in a component\n          wrapper inside MinimalProvider.\n        </Paragraph>\n        <Spacer />\n        <SyntaxHighlighter language=\"typescript\">\n          {`import * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from '@minimalui/core';\n\nexport default function ThemedComponent() {\n    const theme = useTheme();\n\n    return (\n        <View style={{ backgroundColor: theme.palette.primary, height: 50, width: 50 }} />\n    );\n}`}\n        </SyntaxHighlighter>\n\n        <Spacer spacing={8} />\n\n        <Title>Overriding the default style of components</Title>\n        <Spacer />\n        <Paragraph>\n          To override the default style of the exported components (for example\n          remove the shadow / elevation from the Card component), you can use\n          the \"override\" parameter of a theme. Use the component name as a key\n          and add your style props. For certain components, you can have\n          multiple keys for sub-components. Refer to their respective\n          documentation page to learn more about it.\n        </Paragraph>\n        <Spacer />\n        <SyntaxHighlighter language=\"typescript\">\n          {`import { createTheme, Theme } from '@minimalui/core';\nconst defaultTheme = createTheme();\n\nconst theme: Theme = {\n    override: {\n        Card: {\n            ...defaultTheme.elevation(0),\n            borderWidth: 1,\n            borderColor: #EEEEEE,\n        }\n    }\n};\n\nexport default createTheme(theme);`}\n        </SyntaxHighlighter>\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default ThemingScreen;\n","import {\n  Caption,\n  Container,\n  Headline,\n  Paragraph,\n  ScrollView,\n  Subheading,\n  Title,\n} from \"@minimalui/core\";\nimport * as React from \"react\";\n\nexport const TypographyScreen: React.FunctionComponent = () => {\n  const variants = [\"text\", \"contained\", \"outlined\", \"gradient\"] as const;\n  const colors = [\n    \"default\",\n    \"primary\",\n    \"secondary\",\n    \"error\",\n    \"info\",\n    \"success\",\n    \"warning\",\n  ] as const;\n\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container spacing={8}>\n        <Headline>Headline</Headline>\n        <Title>Title</Title>\n        <Subheading>Subheading</Subheading>\n        <Paragraph>Paragraph</Paragraph>\n        <Caption>Caption</Caption>\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default TypographyScreen;\n","import { Avatar, Container, ScrollView } from \"@minimalui/core\";\nimport * as React from \"react\";\n\nexport const UtilitiesScreen: React.FunctionComponent = () => {\n  return (\n    <ScrollView style={{ width: \"100%\" }}>\n      <Container spacing={8}>\n        <Avatar source={{ uri: \"https://i.pravatar.cc/300\" }} />\n      </Container>\n    </ScrollView>\n  );\n};\n\nexport default UtilitiesScreen;\n","import { Feather } from \"@expo/vector-icons\";\nimport {\n  Container,\n  IconButton,\n  Spacer,\n  Switch,\n  Title,\n  useDimensions,\n  useTheme,\n} from \"@minimalui/core\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport {\n  createDrawerNavigator,\n  DrawerContentComponentProps,\n  DrawerContentScrollView,\n  DrawerItemList,\n} from \"@react-navigation/drawer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport React, { useEffect, useState } from \"react\";\n\nimport * as Screens from \"./screens\";\n\nconst RootStack = createDrawerNavigator();\n\nconst linking = { enabled: true, prefixes: [\"https://google.com\"] };\n\nconst Drawer: React.FunctionComponent<DrawerContentComponentProps> = (\n  props\n) => {\n  return (\n    <DrawerContentScrollView {...props}>\n      <DrawerItemList {...props} />\n    </DrawerContentScrollView>\n  );\n};\n\ntype NavigatorProps = {\n  darkMode: boolean;\n  setDarkMode: (darkMode: boolean) => void;\n};\n\nexport const Navigator: React.FunctionComponent<NavigatorProps> = ({\n  darkMode,\n  setDarkMode,\n}) => {\n  const { type } = useDimensions();\n  const [isReady, setIsReady] = useState(true);\n  const [initialState, setInitialState] = useState();\n  const theme = useTheme();\n\n  useEffect(() => {\n    const restoreState = async () => {\n      try {\n        // Only restore state if there's no deep link and we're not on web\n        const savedStateString = await AsyncStorage.getItem(\"NAVIGATION_STATE\");\n        const state = savedStateString\n          ? JSON.parse(savedStateString)\n          : undefined;\n\n        if (state !== undefined) {\n          setInitialState(state);\n        }\n      } finally {\n        setIsReady(true);\n      }\n    };\n\n    if (!isReady) {\n      restoreState();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    return null;\n  }\n\n  const navigationTheme = {\n    dark: darkMode,\n    colors: {\n      background: theme.palette.background.default,\n      border: \"transparent\",\n      card: theme.palette.background.paper,\n      notification: theme.palette.secondary,\n      primary: theme.palette.primary,\n      text: theme.palette.text.primary,\n    },\n  };\n\n  const isLargeScreen = type === \"lg\" || type === \"xl\";\n\n  return (\n    <NavigationContainer\n      initialState={initialState}\n      linking={linking}\n      onStateChange={(state) =>\n        AsyncStorage.setItem(\"NAVIGATION_STATE\", JSON.stringify(state))\n      }\n      theme={navigationTheme}\n    >\n      <RootStack.Navigator\n        drawerContent={(props) => <Drawer {...props} />}\n        drawerStyle={{\n          backgroundColor: theme.palette.background.default,\n          borderRightColor: theme.palette.background.paper,\n          borderRightWidth: 1,\n          width: 240,\n        }}\n        drawerType={isLargeScreen ? \"permanent\" : \"slide\"}\n        screenOptions={{\n          header: ({\n            scene: {\n              descriptor: {\n                navigation,\n                options: { title },\n              },\n              route: { name },\n            },\n          }) => (\n            <Container style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <IconButton onPress={(navigation as any).toggleDrawer}>\n                <Feather name=\"menu\" />\n              </IconButton>\n              <Spacer />\n              <Title style={{ flex: 1 }}>{title || name}</Title>\n              <Feather\n                color={theme.palette.text.primary}\n                name=\"sun\"\n                size={18}\n              />\n              <Spacer />\n              <Switch\n                onValueChange={() => setDarkMode(!darkMode)}\n                value={darkMode}\n              />\n              <Spacer />\n              <Feather\n                color={theme.palette.text.primary}\n                name=\"moon\"\n                size={18}\n              />\n            </Container>\n          ),\n          headerShown: true,\n        }}\n      >\n        <RootStack.Screen\n          component={Screens.GetStartedScreen}\n          name=\"Get Started\"\n        />\n        <RootStack.Screen component={Screens.ThemingScreen} name=\"Theming\" />\n        <RootStack.Screen component={Screens.DemoScreen} name=\"Demo\" />\n        <RootStack.Screen component={Screens.AppBarScreen} name=\"AppBar\" />\n        <RootStack.Screen component={Screens.AvatarScreen} name=\"Avatar\" />\n        <RootStack.Screen component={Screens.ButtonScreen} name=\"Button\" />\n        <RootStack.Screen component={Screens.CardScreen} name=\"Card\" />\n        <RootStack.Screen component={Screens.LayoutScreen} name=\"Layout\" />\n        <RootStack.Screen component={Screens.InputScreen} name=\"Input\" />\n        <RootStack.Screen component={Screens.ModalScreen} name=\"Modal\" />\n        <RootStack.Screen\n          component={Screens.ResponsiveScreen}\n          name=\"Responsive\"\n        />\n\n        <RootStack.Screen component={Screens.SwitchScreen} name=\"Switch\" />\n        <RootStack.Screen\n          component={Screens.TypographyScreen}\n          name=\"Typography\"\n        />\n        <RootStack.Screen\n          component={Screens.UtilitiesScreen}\n          name=\"Utilities\"\n        />\n      </RootStack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default Navigator;\n","/* eslint-disable sort-keys  */\n/* eslint-disable camelcase */\nimport { Inconsolata_500Medium } from \"@expo-google-fonts/inconsolata\";\nimport {\n  NotoSans_400Regular,\n  NotoSans_700Bold,\n  useFonts,\n} from \"@expo-google-fonts/noto-sans\";\nimport { createTheme, MinimalProvider } from \"@minimalui/core\";\nimport React, { useState } from \"react\";\n\nimport Navigator from \"./src/Navigator\";\n\nexport default function App(): JSX.Element | null {\n  const [darkMode, setDarkMode] = useState<boolean>(true);\n\n  const theme = createTheme({\n    palette: { type: darkMode ? \"dark\" : \"light\" },\n  });\n\n  const [loaded] = useFonts({\n    NotoSansRegular: NotoSans_400Regular,\n    NotoSansBold: NotoSans_700Bold,\n    Inconsolata: Inconsolata_500Medium,\n  });\n\n  if (!loaded) {\n    return null;\n  }\n\n  return (\n    <MinimalProvider theme={theme}>\n      <Navigator darkMode={darkMode} setDarkMode={setDarkMode} />\n    </MinimalProvider>\n  );\n}\n"],"sourceRoot":""}