(this.webpackJsonp=this.webpackJsonp||[]).push([[0],{187:function(e,t,n){"use strict";n.r(t),n.d(t,"SwitchExample",(function(){return l}));var i=n(10),r=n.n(i),a=n(5),s=n(0),l=function(){var e=s.useState(!1),t=r()(e,2),n=t[0],i=t[1];return s.createElement(a.Switch,{onValueChange:function(){return i(!n)},value:n})};t.default=l},188:function(e,t,n){"use strict";n.r(t),n.d(t,"AvatarExample",(function(){return a}));var i=n(5),r=n(0),a=function(){return r.createElement(i.Avatar,{source:{uri:"https://i.pravatar.cc/300"}})};t.default=a},189:function(e,t,n){"use strict";n.r(t),n.d(t,"ButtonExample",(function(){return s}));var i=n(5),r=n(0),a=n(2),s=function(){var e=["default","primary","secondary","error","info","success","warning"];return r.createElement(a.a,{style:{flex:1}},["flat","contained","outlined","gradient"].map((function(t){return r.createElement(a.a,{key:""+t},r.createElement(i.Title,null,t),r.createElement(a.a,{style:{flex:1,flexDirection:"row",flexWrap:"wrap"}},e.map((function(e){return r.createElement(i.Button,{key:t+"."+e,color:e,onPress:function(){return null},style:{marginVertical:8,marginLeft:0,marginRight:16},variant:t},""+e)}))),r.createElement(i.Spacer,{spacing:2}))})))};t.default=s},190:function(e,t,n){"use strict";n.r(t),n.d(t,"CardExample",(function(){return a}));var i=n(5),r=n(0),a=function(){return r.createElement(i.ScrollView,{style:{width:"100%"}},r.createElement(i.Container,{xs:8},r.createElement(i.Card,null,r.createElement(i.Card.Title,{title:"Hello"}))))};t.default=a},191:function(e,t,n){"use strict";n.r(t),n.d(t,"FabExample",(function(){return l}));var i=n(251),r=n(5),a=n(0),s=n(2),l=function(){var e=["default","primary","secondary","error","info","success","warning"];return a.createElement(r.Container,{flex:!0},["flat","contained","outlined","gradient"].map((function(t){return a.createElement(s.a,{key:""+t},a.createElement(r.Title,null,t),a.createElement(r.Container,{style:{flex:1,flexDirection:"row",flexWrap:"wrap"}},e.map((function(e){return a.createElement(r.Fab,{key:t+"."+e,color:e,onPress:function(){return null},style:{margin:8,position:"relative"},variant:t},a.createElement(i.a,{name:"plus"}))}))),a.createElement(r.Spacer,{spacing:2}))})))};t.default=l},192:function(e,t,n){"use strict";n.r(t),n.d(t,"IconButtonExample",(function(){return l}));var i=n(251),r=n(5),a=n(0),s=n(2),l=function(){var e=["default","primary","secondary","error","info","success","warning"];return a.createElement(r.Container,{flex:!0},["flat","contained","outlined","gradient"].map((function(t){return a.createElement(s.a,{key:""+t},a.createElement(r.Title,null,t),a.createElement(r.Container,{style:{flex:1,flexDirection:"row",flexWrap:"wrap"}},e.map((function(e){return a.createElement(r.IconButton,{key:t+"."+e,color:e,onPress:function(){return null},style:{margin:8},variant:t},a.createElement(i.a,{name:"home"}))}))),a.createElement(r.Spacer,{spacing:2}))})))};t.default=l},193:function(e,t,n){"use strict";n.r(t),n.d(t,"InputExample",(function(){return a}));var i=n(5),r=n(0),a=function(){return r.createElement(i.Input,null)};t.default=a},194:function(e,t,n){"use strict";n.r(t),n.d(t,"SwitchExample",(function(){return l}));var i=n(10),r=n.n(i),a=n(5),s=n(0),l=function(){var e=s.useState(!1),t=r()(e,2),n=t[0],i=t[1];return s.createElement(a.Switch,{onValueChange:function(){return i(!n)},value:n})};t.default=l},195:function(e,t,n){"use strict";n.r(t),n.d(t,"SwitchExample",(function(){return l}));var i=n(10),r=n.n(i),a=n(5),s=n(0),l=function(){var e=s.useState(!1),t=r()(e,2),n=t[0],i=t[1];return s.createElement(a.Switch,{onValueChange:function(){return i(!n)},value:n})};t.default=l},196:function(e,t,n){"use strict";n.r(t),n.d(t,"SwitchExample",(function(){return l}));var i=n(10),r=n.n(i),a=n(5),s=n(0),l=function(){var e=s.useState(!1),t=r()(e,2),n=t[0],i=t[1];return s.createElement(a.Switch,{onValueChange:function(){return i(!n)},value:n})};t.default=l},197:function(e,t,n){"use strict";n.r(t),n.d(t,"TextExample",(function(){return a}));var i=n(5),r=n(0),a=function(){return r.createElement(i.View,{style:{flexDirection:"column"}},r.createElement(i.Headline,null,"Headline"),r.createElement(i.Title,null,"Title"),r.createElement(i.Subheading,null,"Subheading"),r.createElement(i.Paragraph,null,"Paragraph"),r.createElement(i.Caption,null,"Caption"))};t.default=a},198:function(e){e.exports=JSON.parse('{"id":0,"name":"@minimalui/core","kind":0,"flags":{},"originalName":"","children":[{"id":1,"name":"AppBar","kind":1,"kindString":"Module","flags":{},"children":[{"id":3,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":2},{"id":2,"name":"AppBar","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/AppBar.tsx","line":19,"character":19}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppBarProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[3]},{"title":"Variables","kind":32,"children":[2]}],"sources":[{"fileName":"src/AppBar.tsx","line":1,"character":0}]},{"id":4,"name":"Avatar","kind":1,"kindString":"Module","flags":{},"children":[{"id":6,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":5},{"id":5,"name":"Avatar","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Avatar.tsx","line":18,"character":19}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AvatarProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[6]},{"title":"Variables","kind":32,"children":[5]}],"sources":[{"fileName":"src/Avatar.tsx","line":1,"character":0}]},{"id":7,"name":"Button","kind":1,"kindString":"Module","flags":{},"comment":{},"children":[{"id":11,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":8},{"id":9,"name":"Button","kind":2,"kindString":"Namespace","flags":{},"children":[{"id":10,"name":"defaultProps","kind":32,"kindString":"Variable","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"PressableProps"},{"type":"union","types":[{"type":"literal","value":"hitSlop"},{"type":"literal","value":"onLayout"},{"type":"literal","value":"pointerEvents"},{"type":"literal","value":"removeClippedSubviews"},{"type":"literal","value":"testID"},{"type":"literal","value":"nativeID"},{"type":"literal","value":"collapsable"},{"type":"literal","value":"needsOffscreenAlphaCompositing"},{"type":"literal","value":"renderToHardwareTextureAndroid"},{"type":"literal","value":"focusable"},{"type":"literal","value":"shouldRasterizeIOS"},{"type":"literal","value":"isTVSelectable"},{"type":"literal","value":"hasTVPreferredFocus"},{"type":"literal","value":"tvParallaxProperties"},{"type":"literal","value":"tvParallaxShiftDistanceX"},{"type":"literal","value":"tvParallaxShiftDistanceY"},{"type":"literal","value":"tvParallaxTiltAngle"},{"type":"literal","value":"tvParallaxMagnification"},{"type":"literal","value":"onStartShouldSetResponder"},{"type":"literal","value":"onMoveShouldSetResponder"},{"type":"literal","value":"onResponderEnd"},{"type":"literal","value":"onResponderGrant"},{"type":"literal","value":"onResponderReject"},{"type":"literal","value":"onResponderMove"},{"type":"literal","value":"onResponderRelease"},{"type":"literal","value":"onResponderStart"},{"type":"literal","value":"onResponderTerminationRequest"},{"type":"literal","value":"onResponderTerminate"},{"type":"literal","value":"onStartShouldSetResponderCapture"},{"type":"literal","value":"onMoveShouldSetResponderCapture"},{"type":"literal","value":"onTouchStart"},{"type":"literal","value":"onTouchMove"},{"type":"literal","value":"onTouchEnd"},{"type":"literal","value":"onTouchCancel"},{"type":"literal","value":"onTouchEndCapture"},{"type":"literal","value":"accessible"},{"type":"literal","value":"accessibilityActions"},{"type":"literal","value":"accessibilityLabel"},{"type":"literal","value":"accessibilityRole"},{"type":"literal","value":"accessibilityState"},{"type":"literal","value":"accessibilityHint"},{"type":"literal","value":"accessibilityValue"},{"type":"literal","value":"onAccessibilityAction"},{"type":"literal","value":"accessibilityLiveRegion"},{"type":"literal","value":"importantForAccessibility"},{"type":"literal","value":"accessibilityElementsHidden"},{"type":"literal","value":"accessibilityViewIsModal"},{"type":"literal","value":"onAccessibilityEscape"},{"type":"literal","value":"onAccessibilityTap"},{"type":"literal","value":"onMagicTap"},{"type":"literal","value":"accessibilityIgnoresInvertColors"},{"type":"literal","value":"onPress"},{"type":"literal","value":"onPressIn"},{"type":"literal","value":"onPressOut"},{"type":"literal","value":"onLongPress"},{"type":"literal","value":"delayLongPress"},{"type":"literal","value":"disabled"},{"type":"literal","value":"pressRetentionOffset"},{"type":"literal","value":"android_disableSound"},{"type":"literal","value":"android_ripple"},{"type":"literal","value":"testOnly_pressed"}]}],"name":"Pick"},{"type":"reference","id":12,"name":"ButtonProps"}]}],"name":"Partial"}]}}],"groups":[{"title":"Variables","kind":32,"children":[10]}]},{"id":12,"name":"ButtonProps","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"tags":[{"tag":"defaultvalue?","text":"ButtonProps.color default"},{"tag":"defaultvalue?","text":"ButtonProps.color default"},{"tag":"template","text":"default","param":"ButtonProps.color"},{"tag":"template","text":"default\\n\\nAny other props supplied will be provided to the root element [Pressable](https://reactnative.dev/docs/pressable)\\n","param":"ButtonProps[\\"color\\"]"}]},"sources":[{"fileName":"src/Button.tsx","line":219,"character":23}],"type":{"type":"reflection","declaration":{"id":13,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":14,"name":"children","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Button.tsx","line":220,"character":10}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":15,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Button.tsx","line":220,"character":13}],"signatures":[{"id":16,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":17,"name":"textStyle","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TextStyle"}}}],"type":{"type":"reference","name":"React.ReactNode"}}]}},{"type":"reference","name":"React.ReactNode"}]}},{"id":18,"name":"color","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the button, default is \\"default\\" which is the touchable color"},"sources":[{"fileName":"src/Button.tsx","line":222,"character":7}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"primary"},{"type":"literal","value":"secondary"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"success"},{"type":"literal","value":"warning"}]}},{"id":19,"name":"elevation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Elevation (shadow) of the button"},"sources":[{"fileName":"src/Button.tsx","line":231,"character":11}],"type":{"type":"intrinsic","name":"number"}},{"id":20,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the button should take all available horizontal space"},"sources":[{"fileName":"src/Button.tsx","line":233,"character":11}],"type":{"type":"intrinsic","name":"boolean"}},{"id":21,"name":"style","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Styles to be applied to the button. Text related properties will be automatically forwarded to the Text component"},"sources":[{"fileName":"src/Button.tsx","line":235,"character":7}],"type":{"type":"intersection","types":[{"type":"reference","name":"TextStyle"},{"type":"reference","name":"ViewStyle"}]}},{"id":22,"name":"variant","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Variant of the button, default is \\"flat\\""},"sources":[{"fileName":"src/Button.tsx","line":237,"character":9}],"type":{"type":"union","types":[{"type":"literal","value":"flat"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"},{"type":"literal","value":"gradient"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[14,18,19,20,21,22]}],"sources":[{"fileName":"src/Button.tsx","line":219,"character":25}]}}},{"id":8,"name":"Button","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"## Text Button","text":"> ButtonExample\\n\\n```typescript\\nimport { Button } from \\"@minimalui/core\\";\\nimport * as React from \\"react\\";\\n\\nexport const ButtonExample: React.FunctionComponent = () => {\\n  return (\\n    <Button onPress={() => null}>\\n        I am a button\\n    </Button>\\n  );\\n};\\n\\nexport default ButtonExample;\\n```\\n"},"sources":[{"fileName":"src/Button.tsx","line":47,"character":19}],"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"PressableProps"},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"literal","value":"style"}]}],"name":"Omit"},{"type":"reference","id":12,"name":"ButtonProps"}]}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[11]},{"title":"Namespaces","kind":2,"children":[9]},{"title":"Type aliases","kind":4194304,"children":[12]},{"title":"Variables","kind":32,"children":[8]}],"sources":[{"fileName":"src/Button.tsx","line":1,"character":0}]},{"id":55,"name":"Card","kind":1,"kindString":"Module","flags":{},"children":[{"id":573,"name":"Card","kind":2,"kindString":"Namespace","flags":{},"children":[{"id":574,"name":"Media","kind":32,"kindString":"Variable","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageProps"}],"name":"FunctionComponent"}},{"id":575,"name":"Title","kind":32,"kindString":"Variable","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":35,"name":"CardTitleProps"}],"name":"FunctionComponent"}}],"groups":[{"title":"Variables","kind":32,"children":[574,575]}]},{"id":571,"name":"CardProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Card/Card.tsx","line":8,"character":21}],"type":{"type":"reference","name":"ViewProps"}},{"id":572,"name":"Card","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Card/Card.tsx","line":15,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"CardProps"}],"name":"CardComponent"},"defaultValue":"..."}],"groups":[{"title":"Namespaces","kind":2,"children":[573]},{"title":"Type aliases","kind":4194304,"children":[571]},{"title":"Variables","kind":32,"children":[572]}],"sources":[{"fileName":"src/Card/index.ts","line":1,"character":0}]},{"id":23,"name":"Card/Card","kind":1,"kindString":"Module","flags":{},"children":[{"id":29,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":25},{"id":26,"name":"Card","kind":2,"kindString":"Namespace","flags":{},"children":[{"id":27,"name":"Media","kind":32,"kindString":"Variable","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageProps"}],"name":"FunctionComponent"}},{"id":28,"name":"Title","kind":32,"kindString":"Variable","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":35,"name":"CardTitleProps"}],"name":"FunctionComponent"}}],"groups":[{"title":"Variables","kind":32,"children":[27,28]}]},{"id":24,"name":"CardProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Card/Card.tsx","line":8,"character":21}],"type":{"type":"reference","name":"ViewProps"}},{"id":25,"name":"Card","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Card/Card.tsx","line":15,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"CardProps"}],"name":"CardComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[29]},{"title":"Namespaces","kind":2,"children":[26]},{"title":"Type aliases","kind":4194304,"children":[24]},{"title":"Variables","kind":32,"children":[25]}],"sources":[{"fileName":"src/Card/Card.tsx","line":1,"character":0}]},{"id":30,"name":"Card/CardMedia","kind":1,"kindString":"Module","flags":{},"children":[{"id":33,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":32},{"id":31,"name":"CardMediaProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Card/CardMedia.tsx","line":13,"character":26}],"type":{"type":"reference","name":"ImageProps"}},{"id":32,"name":"CardMedia","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Card/CardMedia.tsx","line":15,"character":22}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":31,"name":"CardMediaProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[33]},{"title":"Type aliases","kind":4194304,"children":[31]},{"title":"Variables","kind":32,"children":[32]}],"sources":[{"fileName":"src/Card/CardMedia.tsx","line":1,"character":0}]},{"id":34,"name":"Card/CardTitle","kind":1,"kindString":"Module","flags":{},"children":[{"id":54,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":53},{"id":35,"name":"CardTitleProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Card/CardTitle.tsx","line":13,"character":26}],"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"id":36,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":37,"name":"left","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Card/CardTitle.tsx","line":14,"character":6}],"type":{"type":"reflection","declaration":{"id":38,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Card/CardTitle.tsx","line":14,"character":8}],"signatures":[{"id":39,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":40,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":41,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":42,"name":"size","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Card/CardTitle.tsx","line":14,"character":23}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[42]}],"sources":[{"fileName":"src/Card/CardTitle.tsx","line":14,"character":16}]}}}],"type":{"type":"reference","name":"React.ReactNode"}}]}}},{"id":43,"name":"right","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Card/CardTitle.tsx","line":15,"character":7}],"type":{"type":"reflection","declaration":{"id":44,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Card/CardTitle.tsx","line":15,"character":9}],"signatures":[{"id":45,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":46,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":47,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":48,"name":"size","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Card/CardTitle.tsx","line":15,"character":24}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[48]}],"sources":[{"fileName":"src/Card/CardTitle.tsx","line":15,"character":17}]}}}],"type":{"type":"reference","name":"React.ReactNode"}}]}}},{"id":49,"name":"subtitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Card/CardTitle.tsx","line":16,"character":10}],"type":{"type":"reference","name":"React.ReactNode"}},{"id":50,"name":"subtitleNumberOfLines","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Card/CardTitle.tsx","line":17,"character":23}],"type":{"type":"intrinsic","name":"number"}},{"id":51,"name":"title","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Card/CardTitle.tsx","line":18,"character":7}],"type":{"type":"reference","name":"React.ReactNode"}},{"id":52,"name":"titleNumberOfLines","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Card/CardTitle.tsx","line":19,"character":20}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[37,43,49,50,51,52]}],"sources":[{"fileName":"src/Card/CardTitle.tsx","line":13,"character":40}]}}]}},{"id":53,"name":"CardTitle","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Card/CardTitle.tsx","line":24,"character":22}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":35,"name":"CardTitleProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[54]},{"title":"Type aliases","kind":4194304,"children":[35]},{"title":"Variables","kind":32,"children":[53]}],"sources":[{"fileName":"src/Card/CardTitle.tsx","line":1,"character":0}]},{"id":56,"name":"ConditionalWrapper","kind":1,"kindString":"Module","flags":{},"children":[{"id":66,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":65},{"id":57,"name":"ConditionalWrapperProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":3,"character":35}],"type":{"type":"reflection","declaration":{"id":58,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":59,"name":"children","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":4,"character":10}],"type":{"type":"reference","name":"JSX.Element"}},{"id":60,"name":"condition","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":5,"character":11}],"type":{"type":"intrinsic","name":"boolean"}},{"id":61,"name":"render","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":6,"character":8}],"type":{"type":"reflection","declaration":{"id":62,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":6,"character":9}],"signatures":[{"id":63,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":64,"name":"children","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSX.Element"}}],"type":{"type":"reference","name":"JSX.Element"}}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[59,60,61]}],"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":3,"character":37}]}}},{"id":65,"name":"ConditionalWrapper","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":9,"character":31}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":57,"name":"ConditionalWrapperProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[66]},{"title":"Type aliases","kind":4194304,"children":[57]},{"title":"Variables","kind":32,"children":[65]}],"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":1,"character":0}]},{"id":67,"name":"Container","kind":1,"kindString":"Module","flags":{},"children":[{"id":76,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":75},{"id":68,"name":"ContainerProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Container.tsx","line":8,"character":26}],"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reference","id":460,"name":"BreakpointProps"},{"type":"reflection","declaration":{"id":69,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":70,"name":"align","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Container.tsx","line":10,"character":9}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"alignItems"},"objectType":{"type":"reference","name":"ViewStyle"}}},{"id":71,"name":"direction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Container.tsx","line":11,"character":13}],"type":{"type":"union","types":[{"type":"literal","value":"column"},{"type":"literal","value":"row"}]}},{"id":72,"name":"flex","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Container.tsx","line":12,"character":8}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":true}]}},{"id":73,"name":"justify","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Container.tsx","line":13,"character":11}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"justifyContent"},"objectType":{"type":"reference","name":"ViewStyle"}}},{"id":74,"name":"spacing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Container.tsx","line":14,"character":11}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[70,71,72,73,74]}],"sources":[{"fileName":"src/Container.tsx","line":9,"character":19}]}}]}},{"id":75,"name":"Container","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Container.tsx","line":17,"character":22}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":68,"name":"ContainerProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[76]},{"title":"Type aliases","kind":4194304,"children":[68]},{"title":"Variables","kind":32,"children":[75]}],"sources":[{"fileName":"src/Container.tsx","line":1,"character":0}]},{"id":77,"name":"Fab","kind":1,"kindString":"Module","flags":{},"children":[{"id":82,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":81},{"id":78,"name":"FabProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Fab.tsx","line":7,"character":20}],"type":{"type":"intersection","types":[{"type":"reference","id":90,"name":"IconButtonProps"},{"type":"reflection","declaration":{"id":79,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":80,"name":"align","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Fab.tsx","line":8,"character":7}],"type":{"type":"union","types":[{"type":"literal","value":"center"},{"type":"literal","value":"left"},{"type":"literal","value":"right"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[80]}],"sources":[{"fileName":"src/Fab.tsx","line":7,"character":40}]}}]}},{"id":81,"name":"Fab","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Fab.tsx","line":11,"character":16}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":78,"name":"FabProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[82]},{"title":"Type aliases","kind":4194304,"children":[78]},{"title":"Variables","kind":32,"children":[81]}],"sources":[{"fileName":"src/Fab.tsx","line":1,"character":0}]},{"id":83,"name":"Frame","kind":1,"kindString":"Module","flags":{},"children":[{"id":88,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":87},{"id":84,"name":"FrameProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Frame.tsx","line":6,"character":22}],"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"id":85,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":86,"name":"maxWidth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Frame.tsx","line":7,"character":10}],"type":{"type":"union","types":[{"type":"literal","value":"xs"},{"type":"literal","value":"sm"},{"type":"literal","value":"md"},{"type":"literal","value":"lg"},{"type":"literal","value":"xl"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[86]}],"sources":[{"fileName":"src/Frame.tsx","line":6,"character":36}]}}]}},{"id":87,"name":"Frame","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Frame.tsx","line":10,"character":18}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":84,"name":"FrameProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[88]},{"title":"Type aliases","kind":4194304,"children":[84]},{"title":"Variables","kind":32,"children":[87]}],"sources":[{"fileName":"src/Frame.tsx","line":1,"character":0}]},{"id":89,"name":"IconButton","kind":1,"kindString":"Module","flags":{},"children":[{"id":96,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":95},{"id":90,"name":"IconButtonProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/IconButton.tsx","line":13,"character":27}],"type":{"type":"intersection","types":[{"type":"reference","id":12,"name":"ButtonProps"},{"type":"reflection","declaration":{"id":91,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":92,"name":"children","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/IconButton.tsx","line":14,"character":10}],"type":{"type":"reference","name":"JSX.Element"}},{"id":93,"name":"color","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/IconButton.tsx","line":15,"character":7}],"type":{"type":"intrinsic","name":"string"}},{"id":94,"name":"size","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/IconButton.tsx","line":16,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[92,93,94]}],"sources":[{"fileName":"src/IconButton.tsx","line":13,"character":43}]}}]}},{"id":95,"name":"IconButton","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/IconButton.tsx","line":19,"character":23}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":90,"name":"IconButtonProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[96]},{"title":"Type aliases","kind":4194304,"children":[90]},{"title":"Variables","kind":32,"children":[95]}],"sources":[{"fileName":"src/IconButton.tsx","line":1,"character":0}]},{"id":97,"name":"Input","kind":1,"kindString":"Module","flags":{},"children":[{"id":99,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":98},{"id":98,"name":"Input","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Input.tsx","line":6,"character":18}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TextInputProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[99]},{"title":"Variables","kind":32,"children":[98]}],"sources":[{"fileName":"src/Input.tsx","line":1,"character":0}]},{"id":100,"name":"Link","kind":1,"kindString":"Module","flags":{},"children":[{"id":105,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":104},{"id":101,"name":"LinkProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Link.tsx","line":14,"character":21}],"type":{"type":"intersection","types":[{"type":"reference","name":"PressableProps"},{"type":"reflection","declaration":{"id":102,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":103,"name":"href","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Link.tsx","line":15,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[103]}],"sources":[{"fileName":"src/Link.tsx","line":14,"character":40}]}}]}},{"id":104,"name":"Link","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Link.tsx","line":18,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":101,"name":"LinkProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[105]},{"title":"Type aliases","kind":4194304,"children":[101]},{"title":"Variables","kind":32,"children":[104]}],"sources":[{"fileName":"src/Link.tsx","line":1,"character":0}]},{"id":133,"name":"List","kind":1,"kindString":"Module","flags":{},"children":[{"id":578,"name":"List","kind":2,"kindString":"Namespace","flags":{},"children":[{"id":579,"name":"Item","kind":32,"kindString":"Variable","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":113,"name":"ListTitleProps"}],"name":"FunctionComponent"}}],"groups":[{"title":"Variables","kind":32,"children":[579]}]},{"id":576,"name":"ListProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/List/List.tsx","line":6,"character":21}],"type":{"type":"reference","name":"ViewProps"}},{"id":580,"name":"ListTitleProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":13,"character":26}],"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"id":581,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":582,"name":"left","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":14,"character":6}],"type":{"type":"reflection","declaration":{"id":583,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":14,"character":8}],"signatures":[{"id":584,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":585,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":586,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":587,"name":"size","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":14,"character":23}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[587]}],"sources":[{"fileName":"src/List/ListItem.tsx","line":14,"character":16}]}}}],"type":{"type":"reference","name":"React.ReactNode"}}]}}},{"id":588,"name":"right","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":15,"character":7}],"type":{"type":"reflection","declaration":{"id":589,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":15,"character":9}],"signatures":[{"id":590,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":591,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":592,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":593,"name":"size","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":15,"character":24}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[593]}],"sources":[{"fileName":"src/List/ListItem.tsx","line":15,"character":17}]}}}],"type":{"type":"reference","name":"React.ReactNode"}}]}}},{"id":594,"name":"subtitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":16,"character":10}],"type":{"type":"reference","name":"React.ReactNode"}},{"id":595,"name":"subtitleNumberOfLines","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":17,"character":23}],"type":{"type":"intrinsic","name":"number"}},{"id":596,"name":"title","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":18,"character":7}],"type":{"type":"reference","name":"React.ReactNode"}},{"id":597,"name":"titleNumberOfLines","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":19,"character":20}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[582,588,594,595,596,597]}],"sources":[{"fileName":"src/List/ListItem.tsx","line":13,"character":40}]}}]}},{"id":577,"name":"List","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/List/List.tsx","line":12,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":107,"name":"ListProps"}],"name":"ListComponent"},"defaultValue":"..."},{"id":598,"name":"ListTitle","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":24,"character":22}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":113,"name":"ListTitleProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"Namespaces","kind":2,"children":[578]},{"title":"Type aliases","kind":4194304,"children":[576,580]},{"title":"Variables","kind":32,"children":[577,598]}],"sources":[{"fileName":"src/List/index.ts","line":1,"character":0}]},{"id":106,"name":"List/List","kind":1,"kindString":"Module","flags":{},"children":[{"id":111,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":108},{"id":109,"name":"List","kind":2,"kindString":"Namespace","flags":{},"children":[{"id":110,"name":"Item","kind":32,"kindString":"Variable","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":113,"name":"ListTitleProps"}],"name":"FunctionComponent"}}],"groups":[{"title":"Variables","kind":32,"children":[110]}]},{"id":107,"name":"ListProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/List/List.tsx","line":6,"character":21}],"type":{"type":"reference","name":"ViewProps"}},{"id":108,"name":"List","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/List/List.tsx","line":12,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":107,"name":"ListProps"}],"name":"ListComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[111]},{"title":"Namespaces","kind":2,"children":[109]},{"title":"Type aliases","kind":4194304,"children":[107]},{"title":"Variables","kind":32,"children":[108]}],"sources":[{"fileName":"src/List/List.tsx","line":1,"character":0}]},{"id":112,"name":"List/ListItem","kind":1,"kindString":"Module","flags":{},"children":[{"id":132,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":131},{"id":113,"name":"ListTitleProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":13,"character":26}],"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"id":114,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":115,"name":"left","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":14,"character":6}],"type":{"type":"reflection","declaration":{"id":116,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":14,"character":8}],"signatures":[{"id":117,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":118,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":119,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":120,"name":"size","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":14,"character":23}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[120]}],"sources":[{"fileName":"src/List/ListItem.tsx","line":14,"character":16}]}}}],"type":{"type":"reference","name":"React.ReactNode"}}]}}},{"id":121,"name":"right","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":15,"character":7}],"type":{"type":"reflection","declaration":{"id":122,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":15,"character":9}],"signatures":[{"id":123,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":124,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":125,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":126,"name":"size","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":15,"character":24}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[126]}],"sources":[{"fileName":"src/List/ListItem.tsx","line":15,"character":17}]}}}],"type":{"type":"reference","name":"React.ReactNode"}}]}}},{"id":127,"name":"subtitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":16,"character":10}],"type":{"type":"reference","name":"React.ReactNode"}},{"id":128,"name":"subtitleNumberOfLines","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":17,"character":23}],"type":{"type":"intrinsic","name":"number"}},{"id":129,"name":"title","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":18,"character":7}],"type":{"type":"reference","name":"React.ReactNode"}},{"id":130,"name":"titleNumberOfLines","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":19,"character":20}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[115,121,127,128,129,130]}],"sources":[{"fileName":"src/List/ListItem.tsx","line":13,"character":40}]}}]}},{"id":131,"name":"ListTitle","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":24,"character":22}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":113,"name":"ListTitleProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[132]},{"title":"Type aliases","kind":4194304,"children":[113]},{"title":"Variables","kind":32,"children":[131]}],"sources":[{"fileName":"src/List/ListItem.tsx","line":1,"character":0}]},{"id":134,"name":"MinimalProvider","kind":1,"kindString":"Module","flags":{},"children":[{"id":139,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":138},{"id":135,"name":"MinimalProviderProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/MinimalProvider.tsx","line":10,"character":32}],"type":{"type":"reflection","declaration":{"id":136,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":137,"name":"theme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/MinimalProvider.tsx","line":11,"character":7}],"type":{"type":"reference","id":462,"name":"Theme"}}],"groups":[{"title":"Properties","kind":1024,"children":[137]}],"sources":[{"fileName":"src/MinimalProvider.tsx","line":10,"character":34}]}}},{"id":138,"name":"MinimalProvider","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/MinimalProvider.tsx","line":14,"character":28}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":135,"name":"MinimalProviderProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[139]},{"title":"Type aliases","kind":4194304,"children":[135]},{"title":"Variables","kind":32,"children":[138]}],"sources":[{"fileName":"src/MinimalProvider.tsx","line":1,"character":0}]},{"id":140,"name":"Modal","kind":1,"kindString":"Module","flags":{},"children":[{"id":141,"name":"ModalProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Modal.tsx","line":16,"character":22}],"type":{"type":"intersection","types":[{"type":"reference","name":"LegacyModalProps"},{"type":"reflection","declaration":{"id":142,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":143,"name":"onClose","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Modal.tsx","line":17,"character":9}],"type":{"type":"reflection","declaration":{"id":144,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Modal.tsx","line":17,"character":10}],"signatures":[{"id":145,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}},{"id":146,"name":"variant","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Modal.tsx","line":18,"character":9}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"bottomSheet"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[143,146]}],"sources":[{"fileName":"src/Modal.tsx","line":16,"character":43}]}}]}},{"id":147,"name":"Modal","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Modal.tsx","line":21,"character":18}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":141,"name":"ModalProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"Type aliases","kind":4194304,"children":[141]},{"title":"Variables","kind":32,"children":[147]}],"sources":[{"fileName":"src/Modal.tsx","line":1,"character":0}]},{"id":382,"name":"Portal","kind":1,"kindString":"Module","flags":{},"children":[{"id":601,"name":"PortalMethods","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":16,"character":25}],"type":{"type":"reflection","declaration":{"id":602,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":603,"name":"mount","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":17,"character":7}],"type":{"type":"reflection","declaration":{"id":604,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":17,"character":8}],"signatures":[{"id":605,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":606,"name":"children","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"React.ReactNode"}}],"type":{"type":"intrinsic","name":"number"}}]}}},{"id":612,"name":"unmount","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":19,"character":9}],"type":{"type":"reflection","declaration":{"id":613,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":19,"character":10}],"signatures":[{"id":614,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":615,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":607,"name":"update","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":18,"character":8}],"type":{"type":"reflection","declaration":{"id":608,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":18,"character":9}],"signatures":[{"id":609,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":610,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":611,"name":"children","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"React.ReactNode"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[603,612,607]}],"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":16,"character":27}]}}},{"id":599,"name":"PortalProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Portal/Portal.tsx","line":7,"character":23}],"type":{"type":"reference","name":"ViewProps"}},{"id":600,"name":"PortalConsumer","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Portal/PortalConsumer.tsx","line":10,"character":27}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PortalConsumerProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":616,"name":"PortalContext","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":22,"character":26}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":155,"name":"PortalMethods"}],"name":"Context"},"defaultValue":"..."}],"groups":[{"title":"Type aliases","kind":4194304,"children":[601,599]},{"title":"Variables","kind":32,"children":[600,616]}],"sources":[{"fileName":"src/Portal/index.ts","line":1,"character":0}]},{"id":148,"name":"Portal/Portal","kind":1,"kindString":"Module","flags":{},"children":[{"id":149,"name":"PortalProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Portal/Portal.tsx","line":7,"character":23}],"type":{"type":"reference","name":"ViewProps"}},{"id":150,"name":"default","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Portal/Portal.tsx","line":9,"character":12}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":149,"name":"PortalProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"Type aliases","kind":4194304,"children":[149]},{"title":"Variables","kind":32,"children":[150]}],"sources":[{"fileName":"src/Portal/Portal.tsx","line":1,"character":0}]},{"id":151,"name":"Portal/PortalConsumer","kind":1,"kindString":"Module","flags":{},"children":[{"id":153,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":152},{"id":152,"name":"PortalConsumer","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Portal/PortalConsumer.tsx","line":10,"character":27}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PortalConsumerProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[153]},{"title":"Variables","kind":32,"children":[152]}],"sources":[{"fileName":"src/Portal/PortalConsumer.tsx","line":1,"character":0}]},{"id":154,"name":"Portal/PortalHost","kind":1,"kindString":"Module","flags":{},"children":[{"id":171,"name":"default","kind":128,"kindString":"Class","flags":{},"children":[{"id":174,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":175,"name":"new default","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":176,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Props"},{"type":"reference","typeArguments":[{"type":"reference","name":"Props"}],"name":"Readonly"}]}}],"type":{"type":"reference","id":171,"name":"default"}},{"id":177,"name":"new default","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"id":178,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Props"}},{"id":179,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","id":171,"name":"default"}}]},{"id":200,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":473,"character":15}],"type":{"type":"intrinsic","name":"any"}},{"id":197,"name":"manager","kind":1024,"kindString":"Property","flags":{"isPrivate":true},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":96,"character":17}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"reference","id":279,"name":"default"}]}},{"id":195,"name":"nextKey","kind":1024,"kindString":"Property","flags":{"isPrivate":true},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":92,"character":17}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"0"},{"id":222,"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":498,"character":22}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"Props"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":223,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":224,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":498,"character":57}],"type":{"type":"reference","name":"ReactNode"}}],"groups":[{"title":"Properties","kind":1024,"children":[224]}]}}],"name":"Readonly"}]}},{"id":196,"name":"queue","kind":1024,"kindString":"Property","flags":{"isPrivate":true},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":94,"character":15}],"type":{"type":"array","elementType":{"type":"reference","name":"Operation"}},"defaultValue":"..."},{"id":227,"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":504,"character":12}],"type":{"type":"reflection","declaration":{"id":228,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":{"id":229,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":230,"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}}},{"id":225,"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":499,"character":13}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":226,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}],"name":"Readonly"}},{"id":173,"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":455,"character":26}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"}]}},{"id":172,"name":"displayName","kind":1024,"kindString":"Property","flags":{"isStatic":true},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":25,"character":20}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\\"Portal.Host\\""},{"id":256,"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":257,"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":262,"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":263,"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":264,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Props"}],"name":"Readonly"}},{"id":265,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":272,"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":273,"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":274,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Props"}],"name":"Readonly"}},{"id":275,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":276,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":277,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":239,"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":240,"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"id":241,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"id":242,"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":180,"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":27,"character":19}],"signatures":[{"id":181,"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]},{"id":248,"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":249,"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"id":250,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Props"}],"name":"Readonly"}},{"id":251,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":252,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":253,"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":254,"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":255,"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":258,"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":259,"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":260,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Props"}],"name":"Readonly"}},{"id":261,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":237,"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":238,"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"}}]},{"id":266,"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":267,"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":268,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Props"}],"name":"Readonly"}},{"id":269,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":270,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":271,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":217,"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":490,"character":19}],"signatures":[{"id":218,"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":219,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":220,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":221,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":243,"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":244,"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"id":245,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Props"}],"name":"Readonly"}},{"id":246,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":247,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"}}]},{"id":185,"name":"mount","kind":2048,"kindString":"Method","flags":{"isPrivate":true},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":54,"character":15}],"signatures":[{"id":186,"name":"mount","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":187,"name":"children","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ReactNode"}}],"type":{"type":"intrinsic","name":"number"}}]},{"id":198,"name":"render","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":98,"character":8}],"signatures":[{"id":199,"name":"render","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Element"}}]},{"id":182,"name":"setManager","kind":2048,"kindString":"Method","flags":{"isPrivate":true},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":50,"character":20}],"signatures":[{"id":183,"name":"setManager","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":184,"name":"manager","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"reference","id":279,"name":"default"}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":201,"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":485,"character":16}],"signatures":[{"id":202,"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"id":203,"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":204,"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":205,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":206,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":207,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":208,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":209,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":210,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Props"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":211,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":212,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":213,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"id":214,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":215,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":216,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":231,"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":232,"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"id":233,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Props"}],"name":"Readonly"}},{"id":234,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":235,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":236,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":192,"name":"unmount","kind":2048,"kindString":"Method","flags":{"isPrivate":true},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":84,"character":17}],"signatures":[{"id":193,"name":"unmount","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":194,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":188,"name":"update","kind":2048,"kindString":"Method","flags":{"isPrivate":true},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":66,"character":16}],"signatures":[{"id":189,"name":"update","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":190,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":191,"name":"children","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ReactNode"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[174]},{"title":"Properties","kind":1024,"children":[200,197,195,222,196,227,225,173,172]},{"title":"Methods","kind":2048,"children":[256,262,272,239,180,248,254,258,237,266,217,243,185,198,182,201,231,192,188]}],"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":24,"character":31}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"Props"}],"name":"Component"}]},{"id":155,"name":"PortalMethods","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":16,"character":25}],"type":{"type":"reflection","declaration":{"id":156,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":157,"name":"mount","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":17,"character":7}],"type":{"type":"reflection","declaration":{"id":158,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":17,"character":8}],"signatures":[{"id":159,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":160,"name":"children","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"React.ReactNode"}}],"type":{"type":"intrinsic","name":"number"}}]}}},{"id":166,"name":"unmount","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":19,"character":9}],"type":{"type":"reflection","declaration":{"id":167,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":19,"character":10}],"signatures":[{"id":168,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":169,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":161,"name":"update","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":18,"character":8}],"type":{"type":"reflection","declaration":{"id":162,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":18,"character":9}],"signatures":[{"id":163,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":164,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":165,"name":"children","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"React.ReactNode"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[157,166,161]}],"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":16,"character":27}]}}},{"id":170,"name":"PortalContext","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":22,"character":26}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":155,"name":"PortalMethods"}],"name":"Context"},"defaultValue":"..."}],"groups":[{"title":"Classes","kind":128,"children":[171]},{"title":"Type aliases","kind":4194304,"children":[155]},{"title":"Variables","kind":32,"children":[170]}],"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":1,"character":0}]},{"id":278,"name":"Portal/PortalManager","kind":1,"kindString":"Module","flags":{},"children":[{"id":279,"name":"default","kind":128,"kindString":"Class","flags":{},"comment":{"shortText":"Portal host is the component which actually renders all Portals."},"children":[{"id":281,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":282,"name":"new default","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":283,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":284,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":285,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}],"name":"Readonly"}]}}],"type":{"type":"reference","id":279,"name":"default"}},{"id":286,"name":"new default","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"id":287,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":288,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}},{"id":289,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","id":279,"name":"default"}}]},{"id":304,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":473,"character":15}],"type":{"type":"intrinsic","name":"any"}},{"id":322,"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":498,"character":22}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":323,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":324,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":325,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":498,"character":57}],"type":{"type":"reference","name":"ReactNode"}}],"groups":[{"title":"Properties","kind":1024,"children":[325]}]}}],"name":"Readonly"}]}},{"id":326,"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":504,"character":12}],"type":{"type":"reflection","declaration":{"id":327,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":{"id":328,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":329,"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}}},{"id":290,"name":"state","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Portal/PortalManager.tsx","line":16,"character":7}],"type":{"type":"reference","name":"State"},"defaultValue":"..."},{"id":280,"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":455,"character":26}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"}]}},{"id":357,"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":358,"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":364,"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":365,"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":366,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":367,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":368,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":375,"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":376,"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":377,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":378,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":379,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"State"}],"name":"Readonly"}},{"id":380,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":340,"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":341,"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"id":342,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"id":343,"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":330,"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":331,"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"}}]},{"id":349,"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":350,"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"id":351,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":352,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":353,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"State"}],"name":"Readonly"}},{"id":354,"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":355,"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":356,"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":359,"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":360,"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":361,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":362,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":363,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":338,"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":339,"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"}}]},{"id":369,"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":370,"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":371,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":372,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":373,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"State"}],"name":"Readonly"}},{"id":374,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":317,"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":490,"character":19}],"signatures":[{"id":318,"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":319,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":320,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":321,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":344,"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":345,"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"id":346,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":347,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":348,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"State"}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"}}]},{"id":291,"name":"mount","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/Portal/PortalManager.tsx","line":20,"character":7}],"signatures":[{"id":292,"name":"mount","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":293,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":294,"name":"children","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ReactNode"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":302,"name":"render","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/Portal/PortalManager.tsx","line":41,"character":8}],"signatures":[{"id":303,"name":"render","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Element"}}}]},{"id":305,"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":485,"character":16}],"signatures":[{"id":306,"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"id":307,"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"literal","value":"portals"}}],"parameters":[{"id":308,"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"State"},{"type":"reflection","declaration":{"id":309,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":310,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":311,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"State"}],"name":"Readonly"}},{"id":312,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":313,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"State"},{"type":"reference","typeArguments":[{"type":"reference","name":"State"},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"State"},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"id":314,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":315,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":316,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":332,"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":333,"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"id":334,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":335,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":336,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"State"}],"name":"Readonly"}},{"id":337,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":299,"name":"unmount","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/Portal/PortalManager.tsx","line":36,"character":9}],"signatures":[{"id":300,"name":"unmount","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":301,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":295,"name":"update","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/Portal/PortalManager.tsx","line":26,"character":8}],"signatures":[{"id":296,"name":"update","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":297,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":298,"name":"children","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ReactNode"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[281]},{"title":"Properties","kind":1024,"children":[304,322,326,290,280]},{"title":"Methods","kind":2048,"children":[357,364,375,340,330,349,355,359,338,369,317,344,291,302,305,332,299,295]}],"sources":[{"fileName":"src/Portal/PortalManager.tsx","line":15,"character":34}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":381,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Portal/PortalManager.tsx","line":15,"character":63}]}},{"type":"reference","name":"State"}],"name":"PureComponent"}]}],"groups":[{"title":"Classes","kind":128,"children":[279]}],"sources":[{"fileName":"src/Portal/PortalManager.tsx","line":1,"character":0}]},{"id":383,"name":"ReactNative","kind":1,"kindString":"Module","flags":{},"children":[{"id":648,"name":"FlatList","kind":128,"kindString":"Class","flags":{"isExternal":true},"children":[{"id":650,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExternal":true},"signatures":[{"id":651,"name":"new FlatList","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"typeParameter":[{"id":652,"name":"ItemT","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":653,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatListProps"},{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatListProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","id":648,"typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatList"}},{"id":654,"name":"new FlatList","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"typeParameter":[{"id":655,"name":"ItemT","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":656,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatListProps"}},{"id":657,"name":"context","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","id":648,"typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatList"}}]},{"id":710,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":477,"character":15}],"type":{"type":"intrinsic","name":"any"}},{"id":691,"name":"flashScrollIndicators","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Displays the scroll indicators momentarily."},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4322,"character":25}],"type":{"type":"reflection","declaration":{"id":692,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":693,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}},{"id":697,"name":"getNativeScrollRef","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Provides a reference to the underlying host component"},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4332,"character":22}],"type":{"type":"reflection","declaration":{"id":698,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":699,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"reference","typeArguments":[{"type":"reference","id":1167,"name":"View"}],"name":"RefObject"},{"type":"reference","typeArguments":[{"type":"reference","name":"ScrollViewComponent"}],"name":"RefObject"}]}}]}}},{"id":694,"name":"getScrollResponder","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Provides a handle to the underlying scroll responder."},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4327,"character":22}],"type":{"type":"reflection","declaration":{"id":695,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":696,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"reference","name":"Element"}]}}]}}},{"id":700,"name":"getScrollableNode","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4334,"character":21}],"type":{"type":"reflection","declaration":{"id":701,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":702,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}]}}},{"id":734,"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":502,"character":22}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatListProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":735,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":736,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":502,"character":57}],"type":{"type":"reference","name":"ReactNode"}}],"groups":[{"title":"Properties","kind":1024,"children":[736]}]}}],"name":"Readonly"}]}},{"id":688,"name":"recordInteraction","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Tells the list an interaction has occurred, which should trigger viewability calculations,\\ne.g. if waitForInteractions is true and the user has not scrolled. This is typically called\\nby taps on items or by navigation actions."},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4317,"character":21}],"type":{"type":"reflection","declaration":{"id":689,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":690,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}},{"id":739,"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":508,"character":12}],"type":{"type":"reflection","declaration":{"id":740,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"indexSignature":{"id":741,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":742,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}}},{"id":658,"name":"scrollToEnd","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Scrolls to the end of the content. May be janky without `getItemLayout` prop."},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4287,"character":15}],"type":{"type":"reflection","declaration":{"id":659,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":660,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":661,"name":"params","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":662,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":663,"name":"animated","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4287,"character":37}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"intrinsic","name":"boolean"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[663]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":664,"name":"scrollToIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Scrolls to the item at the specified index such that it is positioned in the viewable area\\nsuch that viewPosition 0 places it at the top, 1 at the bottom, and 0.5 centered in the middle.\\nCannot scroll to locations outside the render window without specifying the getItemLayout prop."},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4294,"character":17}],"type":{"type":"reflection","declaration":{"id":665,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":666,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":667,"name":"params","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":668,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":669,"name":"animated","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4295,"character":16}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"intrinsic","name":"boolean"}]}},{"id":670,"name":"index","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4296,"character":13}],"type":{"type":"intrinsic","name":"number"}},{"id":671,"name":"viewOffset","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4297,"character":18}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}},{"id":672,"name":"viewPosition","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4298,"character":20}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[669,670,671,672]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":673,"name":"scrollToItem","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Requires linear scan through data - use `scrollToIndex` instead if possible.\\nMay be janky without `getItemLayout` prop."},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4305,"character":16}],"type":{"type":"reflection","declaration":{"id":674,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":675,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":676,"name":"params","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":677,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":678,"name":"animated","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4305,"character":37}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"intrinsic","name":"boolean"}]}},{"id":679,"name":"item","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4305,"character":60}],"type":{"type":"reference","name":"ItemT"}},{"id":680,"name":"viewPosition","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4305,"character":81}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[678,679,680]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":681,"name":"scrollToOffset","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"Scroll to a specific content pixel offset, like a normal `ScrollView`."},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4310,"character":18}],"type":{"type":"reflection","declaration":{"id":682,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":683,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":684,"name":"params","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":685,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":686,"name":"animated","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4310,"character":39}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"intrinsic","name":"boolean"}]}},{"id":687,"name":"offset","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4310,"character":64}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[686,687]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":703,"name":"setNativeProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4337,"character":18}],"type":{"type":"reflection","declaration":{"id":704,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":705,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":706,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":707,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"indexSignature":{"id":708,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":709,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":737,"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":503,"character":13}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":738,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":649,"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":459,"character":26}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"}]}},{"id":770,"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":771,"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":776,"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":777,"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":778,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatListProps"}],"name":"Readonly"}},{"id":779,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":786,"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":787,"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":788,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatListProps"}],"name":"Readonly"}},{"id":789,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":790,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":791,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":753,"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":754,"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"id":755,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"id":756,"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":743,"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":744,"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"}}]},{"id":762,"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":763,"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"id":764,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatListProps"}],"name":"Readonly"}},{"id":765,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":766,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":767,"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":768,"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":769,"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":772,"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":773,"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":774,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatListProps"}],"name":"Readonly"}},{"id":775,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":751,"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":752,"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"}}]},{"id":780,"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":781,"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":782,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatListProps"}],"name":"Readonly"}},{"id":783,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":784,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":785,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":727,"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":494,"character":19}],"signatures":[{"id":728,"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":729,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":730,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":731,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":757,"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":758,"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"id":759,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatListProps"}],"name":"Readonly"}},{"id":760,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":761,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"}}]},{"id":732,"name":"render","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":495,"character":14}],"signatures":[{"id":733,"name":"render","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"reference","name":"ReactNode"}}]},{"id":711,"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":489,"character":16}],"signatures":[{"id":712,"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"id":713,"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":714,"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":715,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":716,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":717,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":718,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":719,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":720,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatListProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":721,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":722,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":723,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"id":724,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":725,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":726,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":745,"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":746,"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"id":747,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatListProps"}],"name":"Readonly"}},{"id":748,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":749,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":750,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[650]},{"title":"Properties","kind":1024,"children":[710,691,697,694,700,734,688,739,658,664,673,681,703,737,649]},{"title":"Methods","kind":2048,"children":[770,776,786,753,743,762,768,772,751,780,727,757,732,711,745]}],"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4283,"character":21}],"typeParameter":[{"id":792,"name":"ItemT","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ItemT"}],"name":"FlatListProps"}],"name":"Component"}]},{"id":793,"name":"Image","kind":128,"kindString":"Class","flags":{"isExternal":true},"children":[{"id":838,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExternal":true},"signatures":[{"id":839,"name":"new Image","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"parameters":[{"id":840,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","name":"ImageProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"ImageProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","id":793,"name":"Image"}},{"id":841,"name":"new Image","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"id":842,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ImageProps"}},{"id":843,"name":"context","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","id":793,"name":"Image"}}]},{"id":871,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":477,"character":15}],"type":{"type":"intrinsic","name":"any"}},{"id":895,"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":502,"character":22}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"ImageProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":896,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":897,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":502,"character":57}],"type":{"type":"reference","name":"ReactNode"}}],"groups":[{"title":"Properties","kind":1024,"children":[897]}]}}],"name":"Readonly"}]}},{"id":864,"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":368,"character":8}],"type":{"type":"intersection","types":[{"type":"reflection","declaration":{"id":865,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"indexSignature":{"id":866,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":867,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"React.Component"}}}},{"type":"reflection","declaration":{"id":868,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"indexSignature":{"id":869,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":870,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}}]}},{"id":898,"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":503,"character":13}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":899,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":837,"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":459,"character":26}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"}]}},{"id":927,"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":928,"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":933,"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":934,"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":935,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageProps"}],"name":"Readonly"}},{"id":936,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":943,"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":944,"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":945,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageProps"}],"name":"Readonly"}},{"id":946,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":947,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":948,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":862,"name":"blur","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":863,"name":"blur","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Removes focus from an input or view. This is the opposite of `focus()`."},"type":{"type":"intrinsic","name":"void"}}]},{"id":910,"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":911,"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"id":912,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"id":913,"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":900,"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":901,"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"}}]},{"id":919,"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":920,"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"id":921,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageProps"}],"name":"Readonly"}},{"id":922,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":923,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":924,"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":925,"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":926,"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":929,"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":930,"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":931,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageProps"}],"name":"Readonly"}},{"id":932,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":908,"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":909,"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"}}]},{"id":937,"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":938,"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":939,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageProps"}],"name":"Readonly"}},{"id":940,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":941,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":942,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":860,"name":"focus","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":861,"name":"focus","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Requests focus for the given input or view. The exact behavior triggered\\nwill depend on the platform and type of view."},"type":{"type":"intrinsic","name":"void"}}]},{"id":888,"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":494,"character":19}],"signatures":[{"id":889,"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":890,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":891,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":892,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":914,"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":915,"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"id":916,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageProps"}],"name":"Readonly"}},{"id":917,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":918,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"}}]},{"id":844,"name":"measure","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":845,"name":"measure","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Determines the location on screen, width, and height of the given view and\\nreturns the values via an async callback. If successful, the callback will\\nbe called with the following arguments:","text":" - x\\n - y\\n - width\\n - height\\n - pageX\\n - pageY\\n\\nNote that these measurements are not available until after the rendering\\nhas been completed in native. If you need the measurements as soon as\\npossible, consider using the [`onLayout`\\nprop](docs/view.html#onlayout) instead.\\n"},"parameters":[{"id":846,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"MeasureOnSuccessCallback"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":847,"name":"measureInWindow","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":848,"name":"measureInWindow","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Determines the location of the given view in the window and returns the\\nvalues via an async callback. If the React root view is embedded in\\nanother native view, this will give you the absolute coordinates. If\\nsuccessful, the callback will be called with the following\\narguments:","text":" - x\\n - y\\n - width\\n - height\\n\\nNote that these measurements are not available until after the rendering\\nhas been completed in native.\\n"},"parameters":[{"id":849,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"MeasureInWindowOnSuccessCallback"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":850,"name":"measureLayout","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":851,"name":"measureLayout","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Like [`measure()`](#measure), but measures the view relative an ancestor,\\nspecified as `relativeToNativeComponentRef`. This means that the returned x, y\\nare relative to the origin x, y of the ancestor view.\\n_Can also be called with a relativeNativeNodeHandle but is deprecated._"},"parameters":[{"id":852,"name":"relativeToNativeComponentRef","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"HostComponent"}]}},{"id":853,"name":"onSuccess","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"MeasureLayoutOnSuccessCallback"}},{"id":854,"name":"onFail","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":855,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":856,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":893,"name":"render","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":495,"character":14}],"signatures":[{"id":894,"name":"render","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"reference","name":"ReactNode"}}]},{"id":857,"name":"setNativeProps","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":858,"name":"setNativeProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"This function sends props straight to native. They will not participate in\\nfuture diff process - this means that if you do not include them in the\\nnext render, they will remain active (see [Direct\\nManipulation](https://reactnative.dev/docs/direct-manipulation))."},"parameters":[{"id":859,"name":"nativeProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":872,"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":489,"character":16}],"signatures":[{"id":873,"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"id":874,"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":875,"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":876,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":877,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":878,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":879,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":880,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":881,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":882,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":883,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":884,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"id":885,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":886,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":887,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":902,"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":903,"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"id":904,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageProps"}],"name":"Readonly"}},{"id":905,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":906,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":907,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":825,"name":"abortPrefetch","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4018,"character":24}],"signatures":[{"id":826,"name":"abortPrefetch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":827,"name":"requestId","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":794,"name":"getSize","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4010,"character":18}],"signatures":[{"id":795,"name":"getSize","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":796,"name":"uri","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":797,"name":"success","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":798,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":799,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":800,"name":"width","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":801,"name":"height","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":802,"name":"failure","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":803,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":804,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":805,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"any"}}]},{"id":806,"name":"getSizeWithHeaders","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4011,"character":29}],"signatures":[{"id":807,"name":"getSizeWithHeaders","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":808,"name":"uri","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":809,"name":"headers","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":810,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"indexSignature":{"id":811,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":812,"name":"index","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}}},{"id":813,"name":"success","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":814,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":815,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":816,"name":"width","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":817,"name":"height","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":818,"name":"failure","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":819,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":820,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":821,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"any"}}]},{"id":822,"name":"prefetch","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4017,"character":19}],"signatures":[{"id":823,"name":"prefetch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":824,"name":"url","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"id":828,"name":"queryCache","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4019,"character":21}],"signatures":[{"id":829,"name":"queryCache","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":830,"name":"urls","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":831,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"indexSignature":{"id":832,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":833,"name":"url","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"literal","value":"memory"},{"type":"literal","value":"disk"},{"type":"literal","value":"disk/memory"}]}}}}],"name":"Promise"}}]},{"id":834,"name":"resolveAssetSource","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4024,"character":29}],"signatures":[{"id":835,"name":"resolveAssetSource","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"tags":[{"tag":"see","text":"https://reactnative.dev/docs/image#resolveassetsource\\n"}]},"parameters":[{"id":836,"name":"source","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ImageSourcePropType"}}],"type":{"type":"reference","name":"ImageResolvedAssetSource"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[838]},{"title":"Properties","kind":1024,"children":[871,895,864,898,837]},{"title":"Methods","kind":2048,"children":[927,933,943,862,910,900,919,925,929,908,937,860,888,914,844,847,850,893,857,872,902,825,794,806,822,828,834]}],"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":4009,"character":18}],"extendedTypes":[{"type":"reference","name":"ImageBase"}]},{"id":949,"name":"ScrollView","kind":128,"kindString":"Class","flags":{"isExternal":true},"children":[{"id":951,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExternal":true},"signatures":[{"id":952,"name":"new ScrollView","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"parameters":[{"id":953,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","name":"ScrollViewProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"ScrollViewProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","id":949,"name":"ScrollView"}},{"id":954,"name":"new ScrollView","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"id":955,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollViewProps"}},{"id":956,"name":"context","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","id":949,"name":"ScrollView"}}]},{"id":1087,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":477,"character":15}],"type":{"type":"intrinsic","name":"any"}},{"id":1111,"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":502,"character":22}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"ScrollViewProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1112,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":1113,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":502,"character":57}],"type":{"type":"reference","name":"ReactNode"}}],"groups":[{"title":"Properties","kind":1024,"children":[1113]}]}}],"name":"Readonly"}]}},{"id":1116,"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\\n"}]},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":508,"character":12}],"type":{"type":"reflection","declaration":{"id":1117,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"indexSignature":{"id":1118,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":1119,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}}},{"id":979,"name":"scrollWithoutAnimationTo","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"tags":[{"tag":"deprecated","text":"Use scrollTo instead\\n"}]},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6913,"character":28}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":980,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":981,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":982,"name":"y","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":983,"name":"x","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":1114,"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":503,"character":13}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1115,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":950,"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":459,"character":26}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"}]}},{"id":1145,"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1146,"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":1151,"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1152,"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":1153,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ScrollViewProps"}],"name":"Readonly"}},{"id":1154,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1161,"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1162,"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":1163,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ScrollViewProps"}],"name":"Readonly"}},{"id":1164,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1165,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":1166,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1079,"name":"addListenerOn","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1080,"name":"addListenerOn","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Special form of calling `addListener` that *guarantees* that a\\nsubscription *must* be tied to a component instance, and therefore will\\nbe cleaned up when the component is unmounted. It is impossible to create\\nthe subscription and pass it in - this method must be the one to create\\nthe subscription and therefore can guarantee it is retained in a way that\\nwill be cleaned up."},"parameters":[{"id":1081,"name":"eventEmitter","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"emitter to subscribe to."},"type":{"type":"intrinsic","name":"any"}},{"id":1082,"name":"eventType","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"Type of event to listen to."},"type":{"type":"intrinsic","name":"string"}},{"id":1083,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"Function to invoke when event occurs."},"type":{"type":"reflection","declaration":{"id":1084,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":1085,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}]}}},{"id":1086,"name":"context","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"Object to use as listener context.\\n"},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1130,"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1131,"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"id":1132,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"id":1133,"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1120,"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1121,"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"}}]},{"id":1139,"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1140,"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"id":1141,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ScrollViewProps"}],"name":"Readonly"}},{"id":1142,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1143,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":1144,"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1065,"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1066,"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"`componentWillMount` is the closest thing to a  standard \\"constructor\\" for\\nReact components.","text":"The `keyboardWillShow` is called before input focus.\\n"},"type":{"type":"intrinsic","name":"void"}}]},{"id":1147,"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1148,"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":1149,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ScrollViewProps"}],"name":"Readonly"}},{"id":1150,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1128,"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1129,"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"}}]},{"id":1155,"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1156,"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":1157,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ScrollViewProps"}],"name":"Readonly"}},{"id":1158,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1159,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":1160,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":971,"name":"flashScrollIndicators","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6895,"character":25}],"signatures":[{"id":972,"name":"flashScrollIndicators","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Displays the scroll indicators momentarily."},"type":{"type":"intrinsic","name":"void"}}]},{"id":1104,"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":494,"character":19}],"signatures":[{"id":1105,"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":1106,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":1107,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":1108,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":977,"name":"getInnerViewNode","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6908,"character":20}],"signatures":[{"id":978,"name":"getInnerViewNode","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}]},{"id":973,"name":"getScrollResponder","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6903,"character":22}],"signatures":[{"id":974,"name":"getScrollResponder","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns a reference to the underlying scroll responder, which supports\\noperations like `scrollTo`. All ScrollView-like components should\\nimplement this method so that they can be composed while providing access\\nto the underlying scroll responder\'s methods."},"type":{"type":"reference","name":"ScrollResponderMixin"}}]},{"id":975,"name":"getScrollableNode","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6905,"character":21}],"signatures":[{"id":976,"name":"getScrollableNode","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}]},{"id":1134,"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1135,"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"id":1136,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ScrollViewProps"}],"name":"Readonly"}},{"id":1137,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1138,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"}}]},{"id":1109,"name":"render","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":495,"character":14}],"signatures":[{"id":1110,"name":"render","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"reference","name":"ReactNode"}}]},{"id":1030,"name":"scrollResponderGetScrollableNode","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1031,"name":"scrollResponderGetScrollableNode","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Returns the node that represents native view that can be scrolled.\\nComponents can pass what node to use by defining a `getScrollableNode`\\nfunction otherwise `this` is used."},"type":{"type":"intrinsic","name":"any"}}]},{"id":1016,"name":"scrollResponderHandleMomentumScrollBegin","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1017,"name":"scrollResponderHandleMomentumScrollBegin","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Invoke this from an `onMomentumScrollBegin` event."},"parameters":[{"id":1018,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1019,"name":"scrollResponderHandleMomentumScrollEnd","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1020,"name":"scrollResponderHandleMomentumScrollEnd","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Invoke this from an `onMomentumScrollEnd` event."},"parameters":[{"id":1021,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1007,"name":"scrollResponderHandleResponderGrant","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1008,"name":"scrollResponderHandleResponderGrant","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Invoke this from an `onResponderGrant` event."},"parameters":[{"id":1009,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":994,"name":"scrollResponderHandleResponderReject","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":995,"name":"scrollResponderHandleResponderReject","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Invoke this from an `onResponderReject` event.","text":"Some other element is not yielding its role as responder. Normally, we\'d\\njust disable the `UIScrollView`, but a touch has already began on it, the\\n`UIScrollView` will not accept being disabled after that. The easiest\\nsolution for now is to accept the limitation of disallowing this\\naltogether. To improve this, find a way to disable the `UIScrollView` after\\na touch has already started.\\n"},"type":{"type":"intrinsic","name":"any"}}]},{"id":1001,"name":"scrollResponderHandleResponderRelease","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1002,"name":"scrollResponderHandleResponderRelease","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Invoke this from an `onResponderRelease` event."},"parameters":[{"id":1003,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1004,"name":"scrollResponderHandleScroll","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1005,"name":"scrollResponderHandleScroll","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":1006,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1010,"name":"scrollResponderHandleScrollBeginDrag","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1011,"name":"scrollResponderHandleScrollBeginDrag","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Unfortunately, `onScrollBeginDrag` also fires when *stopping* the scroll\\nanimation, and there\'s not an easy way to distinguish a drag vs. stopping\\nmomentum.","text":"Invoke this from an `onScrollBeginDrag` event.\\n"},"parameters":[{"id":1012,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1013,"name":"scrollResponderHandleScrollEndDrag","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1014,"name":"scrollResponderHandleScrollEndDrag","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Invoke this from an `onScrollEndDrag` event."},"parameters":[{"id":1015,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":987,"name":"scrollResponderHandleScrollShouldSetResponder","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":988,"name":"scrollResponderHandleScrollShouldSetResponder","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Invoke this from an `onScroll` event."},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":989,"name":"scrollResponderHandleStartShouldSetResponder","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":990,"name":"scrollResponderHandleStartShouldSetResponder","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Merely touch starting is not sufficient for a scroll view to become the\\nresponder. Being the \\"responder\\" means that the very next touch move/end\\nevent will result in an action/movement.","text":"Invoke this from an `onStartShouldSetResponder` event.\\n\\n`onStartShouldSetResponder` is used when the next move/end will trigger\\nsome UI movement/action, but when you want to yield priority to views\\nnested inside of the view.\\n\\nThere may be some cases where scroll views actually should return `true`\\nfrom `onStartShouldSetResponder`: Any time we are detecting a standard tap\\nthat gives priority to nested views.\\n\\n- If a single tap on the scroll view triggers an action such as\\n  recentering a map style view yet wants to give priority to interaction\\n  views inside (such as dropped pins or labels), then we would return true\\n  from this method when there is a single touch.\\n\\n- Similar to the previous case, if a two finger \\"tap\\" should trigger a\\n  zoom, we would check the `touches` count, and if `>= 2`, we would return\\n  true.\\n\\n"},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":991,"name":"scrollResponderHandleStartShouldSetResponderCapture","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":992,"name":"scrollResponderHandleStartShouldSetResponderCapture","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"There are times when the scroll view wants to become the responder\\n(meaning respond to the next immediate `touchStart/touchEnd`), in a way\\nthat *doesn\'t* give priority to nested views (hence the capture phase):","text":"- Currently animating.\\n- Tapping anywhere that is not the focused input, while the keyboard is\\n  up (which should dismiss the keyboard).\\n\\nInvoke this from an `onStartShouldSetResponderCapture` event.\\n"},"parameters":[{"id":993,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":996,"name":"scrollResponderHandleTerminationRequest","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":997,"name":"scrollResponderHandleTerminationRequest","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"We will allow the scroll view to give up its lock iff it acquired the lock\\nduring an animation. This is a very useful default that happens to satisfy\\nmany common user experiences.","text":"- Stop a scroll on the left edge, then turn that into an outer view\'s\\n  backswipe.\\n- Stop a scroll mid-bounce at the top, continue pulling to have the outer\\n  view dismiss.\\n- However, without catching the scroll view mid-bounce (while it is\\n  motionless), if you drag far enough for the scroll view to become\\n  responder (and therefore drag the scroll view a bit), any backswipe\\n  navigation of a swipe gesture higher in the view hierarchy, should be\\n  rejected.\\n"},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":998,"name":"scrollResponderHandleTouchEnd","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":999,"name":"scrollResponderHandleTouchEnd","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Invoke this from an `onTouchEnd` event."},"parameters":[{"id":1000,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"Event.\\n"},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1025,"name":"scrollResponderHandleTouchMove","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1026,"name":"scrollResponderHandleTouchMove","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Invoke this from an `onTouchMove` event.","text":"Since we know that the `SimpleEventPlugin` occurs later in the plugin\\norder, after `ResponderEventPlugin`, we can detect that we were *not*\\npermitted to be the responder (presumably because a contained view became\\nresponder). The `onResponderReject` won\'t fire in that case - it only\\nfires when a *current* responder rejects our request.\\n"},"parameters":[{"id":1027,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"Touch Start event.\\n"},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1022,"name":"scrollResponderHandleTouchStart","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1023,"name":"scrollResponderHandleTouchStart","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Invoke this from an `onTouchStart` event.","text":"Since we know that the `SimpleEventPlugin` occurs later in the plugin\\norder, after `ResponderEventPlugin`, we can detect that we were *not*\\npermitted to be the responder (presumably because a contained view became\\nresponder). The `onResponderReject` won\'t fire in that case - it only\\nfires when a *current* responder rejects our request.\\n"},"parameters":[{"id":1024,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"Touch Start event.\\n"},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1056,"name":"scrollResponderInputMeasureAndScrollToKeyboard","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1057,"name":"scrollResponderInputMeasureAndScrollToKeyboard","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"The calculations performed here assume the scroll view takes up the entire\\nscreen - even if has some content inset. We then measure the offsets of the\\nkeyboard, and compensate both for the scroll view\'s \\"contentInset\\"."},"parameters":[{"id":1058,"name":"left","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"Position of input w.r.t. table view."},"type":{"type":"intrinsic","name":"number"}},{"id":1059,"name":"top","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"Position of input w.r.t. table view."},"type":{"type":"intrinsic","name":"number"}},{"id":1060,"name":"width","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"Width of the text input."},"type":{"type":"intrinsic","name":"number"}},{"id":1061,"name":"height","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"Height of the text input.\\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1028,"name":"scrollResponderIsAnimating","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1029,"name":"scrollResponderIsAnimating","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"A helper function for this class that lets us quickly determine if the\\nview is currently animating. This is particularly useful to know when\\na touch has just started or ended."},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1076,"name":"scrollResponderKeyboardDidHide","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1077,"name":"scrollResponderKeyboardDidHide","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":1078,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1073,"name":"scrollResponderKeyboardDidShow","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1074,"name":"scrollResponderKeyboardDidShow","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":1075,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1070,"name":"scrollResponderKeyboardWillHide","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1071,"name":"scrollResponderKeyboardWillHide","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":1072,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1067,"name":"scrollResponderKeyboardWillShow","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1068,"name":"scrollResponderKeyboardWillShow","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Warning, this may be called several times for a single keyboard opening.\\nIt\'s best to store the information in this method and then take any action\\nat a later point (either in `keyboardDidShow` or other).","text":"Here\'s the order that events occur in:\\n- focus\\n- willShow {startCoordinates, endCoordinates} several times\\n- didShow several times\\n- blur\\n- willHide {startCoordinates, endCoordinates} several times\\n- didHide several times\\n\\nThe `ScrollResponder` providesModule callbacks for each of these events.\\nEven though any user could have easily listened to keyboard events\\nthemselves, using these `props` callbacks ensures that ordering of events\\nis consistent - and not dependent on the order that the keyboard events are\\nsubscribed to. This matters when telling the scroll view to scroll to where\\nthe keyboard is headed - the scroll responder better have been notified of\\nthe keyboard destination before being instructed to scroll to where the\\nkeyboard will be. Stick to the `ScrollResponder` callbacks, and everything\\nwill work.\\n\\nWARNING: These callbacks will fire even if a keyboard is displayed in a\\ndifferent navigation pane. Filter out the events to determine if they are\\nrelevant to you. (For example, only if you receive these callbacks after\\nyou had explicitly focused a node etc).\\n"},"parameters":[{"id":1069,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1051,"name":"scrollResponderScrollNativeHandleToKeyboard","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1052,"name":"scrollResponderScrollNativeHandleToKeyboard","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"This method should be used as the callback to onFocus in a TextInputs\'\\nparent view. Note that any module using this mixin needs to return\\nthe parent view\'s ref in getScrollViewRef() in order to use this method."},"parameters":[{"id":1053,"name":"nodeHandle","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"The TextInput node handle"},"type":{"type":"intrinsic","name":"any"}},{"id":1054,"name":"additionalOffset","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"comment":{"text":"The scroll view\'s top \\"contentInset\\".\\n       Default is 0."},"type":{"type":"intrinsic","name":"number"}},{"id":1055,"name":"preventNegativeScrollOffset","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1032,"name":"scrollResponderScrollTo","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1033,"name":"scrollResponderScrollTo","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"A helper function to scroll to a specific point  in the scrollview.\\nThis is currently used to help focus on child textviews, but can also\\nbe used to quickly scroll to any element we want to focus. Syntax:","text":"scrollResponderScrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\\n\\nNote: The weird argument signature is due to the fact that, for historical reasons,\\nthe function also accepts separate arguments as an alternative to the options object.\\nThis is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\\n"},"parameters":[{"id":1034,"name":"x","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reflection","declaration":{"id":1035,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":1038,"name":"animated","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6354,"character":55}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]}},{"id":1036,"name":"x","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6354,"character":24}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}},{"id":1037,"name":"y","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6354,"character":36}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[1038,1036,1037]}]}}]}},{"id":1039,"name":"y","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"id":1040,"name":"animated","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1062,"name":"scrollResponderTextInputFocusError","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1063,"name":"scrollResponderTextInputFocusError","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":1064,"name":"e","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ScrollResponderEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1041,"name":"scrollResponderZoomTo","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1042,"name":"scrollResponderZoomTo","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"A helper function to zoom to a specific rect in the scrollview. The argument has the shape\\n{x: number; y: number; width: number; height: number; animated: boolean = true}","tags":[{"tag":"platform","text":"ios\\n"}]},"parameters":[{"id":1043,"name":"rect","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1044,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":1049,"name":"animated","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6366,"character":77}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]}},{"id":1048,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6366,"character":59}],"type":{"type":"intrinsic","name":"number"}},{"id":1047,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6366,"character":43}],"type":{"type":"intrinsic","name":"number"}},{"id":1045,"name":"x","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6366,"character":17}],"type":{"type":"intrinsic","name":"number"}},{"id":1046,"name":"y","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6366,"character":28}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1049,1048,1047,1045,1046]}]}}},{"id":1050,"name":"animated","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":957,"name":"scrollTo","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6880,"character":12}],"signatures":[{"id":958,"name":"scrollTo","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Scrolls to a given x, y offset, either immediately or with a smooth animation.\\nSyntax:","text":"scrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\\n\\nNote: The weird argument signature is due to the fact that, for historical reasons,\\nthe function also accepts separate arguments as an alternative to the options object.\\nThis is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\\n"},"parameters":[{"id":959,"name":"y","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reflection","declaration":{"id":960,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":963,"name":"animated","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6880,"character":60}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"boolean"}]}},{"id":961,"name":"x","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6880,"character":29}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}},{"id":962,"name":"y","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6880,"character":41}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[963,961,962]}]}}]}},{"id":964,"name":"x","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"id":965,"name":"animated","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":966,"name":"scrollToEnd","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6890,"character":15}],"signatures":[{"id":967,"name":"scrollToEnd","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"A helper function that scrolls to the end of the scrollview;\\nIf this is a vertical ScrollView, it scrolls to the bottom.\\nIf this is a horizontal ScrollView scrolls to the right.","text":"The options object has an animated prop, that enables the scrolling animation or not.\\nThe animated prop defaults to true\\n"},"parameters":[{"id":968,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":969,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":970,"name":"animated","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6890,"character":36}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[970]}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":984,"name":"setNativeProps","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6921,"character":18}],"signatures":[{"id":985,"name":"setNativeProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"This function sends props straight to native. They will not participate in\\nfuture diff process - this means that if you do not include them in the\\nnext render, they will remain active (see [Direct\\nManipulation](https://reactnative.dev/docs/direct-manipulation))."},"parameters":[{"id":986,"name":"nativeProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1088,"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":489,"character":16}],"signatures":[{"id":1089,"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"id":1090,"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":1091,"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":1092,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":1093,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":1094,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":1095,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1096,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":1097,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ScrollViewProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":1098,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1099,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1100,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"id":1101,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":1102,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":1103,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1122,"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1123,"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"id":1124,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ScrollViewProps"}],"name":"Readonly"}},{"id":1125,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1126,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":1127,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[951]},{"title":"Properties","kind":1024,"children":[1087,1111,1116,979,1114,950]},{"title":"Methods","kind":2048,"children":[1145,1151,1161,1079,1130,1120,1139,1065,1147,1128,1155,971,1104,977,973,975,1134,1109,1030,1016,1019,1007,994,1001,1004,1010,1013,987,989,991,996,998,1025,1022,1056,1028,1076,1073,1070,1067,1051,1032,1062,1041,957,966,984,1088,1122]}],"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6869,"character":23}],"extendedTypes":[{"type":"reference","name":"ScrollViewBase"}]},{"id":1167,"name":"View","kind":128,"kindString":"Class","flags":{"isExternal":true},"children":[{"id":1170,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExternal":true},"signatures":[{"id":1171,"name":"new View","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"parameters":[{"id":1172,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","name":"ViewProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"ViewProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","id":1167,"name":"View"}},{"id":1173,"name":"new View","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\\n"}]},"parameters":[{"id":1174,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ViewProps"}},{"id":1175,"name":"context","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","id":1167,"name":"View"}}]},{"id":1203,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\\n`React.ContextType` of your `static contextType`.\\nShould be used with type annotation or static contextType.","text":"```ts\\nstatic contextType = MyContext\\n// For TS pre-3.7:\\ncontext!: React.ContextType<typeof MyContext>\\n// For TS 3.7 and above:\\ndeclare context: React.ContextType<typeof MyContext>\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\\n"}]},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":477,"character":15}],"type":{"type":"intrinsic","name":"any"}},{"id":1227,"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":502,"character":22}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"ViewProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1228,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":1229,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":502,"character":57}],"type":{"type":"reference","name":"ReactNode"}}],"groups":[{"title":"Properties","kind":1024,"children":[1229]}]}}],"name":"Readonly"}]}},{"id":1196,"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":368,"character":8}],"type":{"type":"intersection","types":[{"type":"reflection","declaration":{"id":1197,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"indexSignature":{"id":1198,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":1199,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"React.Component"}}}},{"type":"reflection","declaration":{"id":1200,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"indexSignature":{"id":1201,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":1202,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}}]}},{"id":1230,"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":503,"character":13}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1231,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":1169,"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\\n\\n```ts\\ntype MyContext = number\\nconst Ctx = React.createContext<MyContext>(0)\\n\\nclass Foo extends React.Component {\\n  static contextType = Ctx\\n  context!: React.ContextType<typeof Ctx>\\n  render () {\\n    return <>My context\'s value: {this.context}</>;\\n  }\\n}\\n```\\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\\n"}]},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":459,"character":26}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"}]}},{"id":1168,"name":"forceTouchAvailable","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true},"comment":{"shortText":"Is 3D Touch / Force Touch available (i.e. will touch events include `force`)","tags":[{"tag":"platform","text":"ios\\n"}]},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":2522,"character":30}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1259,"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1260,"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":1265,"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1266,"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":1267,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ViewProps"}],"name":"Readonly"}},{"id":1268,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1275,"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1276,"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nThis method will not stop working in React 17.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":1277,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ViewProps"}],"name":"Readonly"}},{"id":1278,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1279,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":1280,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1194,"name":"blur","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1195,"name":"blur","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Removes focus from an input or view. This is the opposite of `focus()`."},"type":{"type":"intrinsic","name":"void"}}]},{"id":1242,"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1243,"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\\nthe entire component tree to unmount."},"parameters":[{"id":1244,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"id":1245,"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1232,"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1233,"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"}}]},{"id":1251,"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1252,"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\\n"},"parameters":[{"id":1253,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ViewProps"}],"name":"Readonly"}},{"id":1254,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1255,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":1256,"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1257,"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1258,"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":1261,"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1262,"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\\nReact may call this even if props have not changed, so be sure to compare new and existing\\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":1263,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ViewProps"}],"name":"Readonly"}},{"id":1264,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1240,"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1241,"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"}}]},{"id":1269,"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1270,"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\\n\\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\\nprevents this from being invoked.\\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\\n"}]},"parameters":[{"id":1271,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ViewProps"}],"name":"Readonly"}},{"id":1272,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1273,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":1274,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1192,"name":"focus","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1193,"name":"focus","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Requests focus for the given input or view. The exact behavior triggered\\nwill depend on the platform and type of view."},"type":{"type":"intrinsic","name":"void"}}]},{"id":1220,"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":494,"character":19}],"signatures":[{"id":1221,"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":1222,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":1223,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":1224,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1246,"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1247,"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\\nreturns an object to be given to componentDidUpdate. Useful for saving\\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\\nlifecycle events from running.\\n"},"parameters":[{"id":1248,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ViewProps"}],"name":"Readonly"}},{"id":1249,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1250,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"}}]},{"id":1176,"name":"measure","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1177,"name":"measure","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Determines the location on screen, width, and height of the given view and\\nreturns the values via an async callback. If successful, the callback will\\nbe called with the following arguments:","text":" - x\\n - y\\n - width\\n - height\\n - pageX\\n - pageY\\n\\nNote that these measurements are not available until after the rendering\\nhas been completed in native. If you need the measurements as soon as\\npossible, consider using the [`onLayout`\\nprop](docs/view.html#onlayout) instead.\\n"},"parameters":[{"id":1178,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"MeasureOnSuccessCallback"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1179,"name":"measureInWindow","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1180,"name":"measureInWindow","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Determines the location of the given view in the window and returns the\\nvalues via an async callback. If the React root view is embedded in\\nanother native view, this will give you the absolute coordinates. If\\nsuccessful, the callback will be called with the following\\narguments:","text":" - x\\n - y\\n - width\\n - height\\n\\nNote that these measurements are not available until after the rendering\\nhas been completed in native.\\n"},"parameters":[{"id":1181,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"MeasureInWindowOnSuccessCallback"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1182,"name":"measureLayout","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1183,"name":"measureLayout","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Like [`measure()`](#measure), but measures the view relative an ancestor,\\nspecified as `relativeToNativeComponentRef`. This means that the returned x, y\\nare relative to the origin x, y of the ancestor view.\\n_Can also be called with a relativeNativeNodeHandle but is deprecated._"},"parameters":[{"id":1184,"name":"relativeToNativeComponentRef","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"HostComponent"}]}},{"id":1185,"name":"onSuccess","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"MeasureLayoutOnSuccessCallback"}},{"id":1186,"name":"onFail","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1187,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":1188,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1225,"name":"render","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":495,"character":14}],"signatures":[{"id":1226,"name":"render","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"reference","name":"ReactNode"}}]},{"id":1189,"name":"setNativeProps","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":1190,"name":"setNativeProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"This function sends props straight to native. They will not participate in\\nfuture diff process - this means that if you do not include them in the\\nnext render, they will remain active (see [Direct\\nManipulation](https://reactnative.dev/docs/direct-manipulation))."},"parameters":[{"id":1191,"name":"nativeProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1204,"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/node_modules/@types/react/index.d.ts","line":489,"character":16}],"signatures":[{"id":1205,"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"id":1206,"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":1207,"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":1208,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":1209,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":1210,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":1211,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1212,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":1213,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ViewProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":1214,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1215,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1216,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"id":1217,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":1218,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":1219,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1234,"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"id":1235,"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\\n`PureComponent` implements a shallow comparison on props and state and returns true if any\\nprops or states have changed.\\n\\nIf false is returned, `Component#render`, `componentWillUpdate`\\nand `componentDidUpdate` will not be called.\\n"},"parameters":[{"id":1236,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ViewProps"}],"name":"Readonly"}},{"id":1237,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1238,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"id":1239,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Constructors","kind":512,"children":[1170]},{"title":"Properties","kind":1024,"children":[1203,1227,1196,1230,1169,1168]},{"title":"Methods","kind":2048,"children":[1259,1265,1275,1194,1242,1232,1251,1257,1261,1240,1269,1192,1220,1246,1176,1179,1182,1225,1189,1204,1234]}],"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":2517,"character":17}],"extendedTypes":[{"type":"reference","name":"ViewBase"}]},{"id":618,"name":"Dimensions","kind":256,"kindString":"Interface","flags":{"isExternal":true},"comment":{"shortText":"Initial dimensions are set before `runApplication` is called so they should\\nbe available before any other require\'s are run, but may be updated later.","text":"Note: Although dimensions are available immediately, they may change (e.g\\ndue to device rotation) so any rendering logic or styles that depend on\\nthese constants should try to call this function on every render, rather\\nthan caching the value (for example, using inline styles rather than\\nsetting a value in a `StyleSheet`).\\n\\nExample: `const {height, width} = Dimensions.get(\'window\');`\\n","tags":[{"tag":"param","text":"Name of dimension as defined when calling `set`.","param":"dim"},{"tag":"returns","text":"Value for the dimension."},{"tag":"see","text":"https://reactnative.dev/docs/dimensions#content\\n"}]},"children":[{"id":628,"name":"addEventListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":629,"name":"addEventListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Add an event listener for dimension changes"},"parameters":[{"id":630,"name":"type","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"the type of event to listen to"},"type":{"type":"literal","value":"change"}},{"id":631,"name":"handler","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"the event handler\\n"},"type":{"type":"reflection","declaration":{"id":632,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":633,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":634,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":635,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":637,"name":"screen","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6105,"character":66}],"type":{"type":"reference","name":"ScaledSize"}},{"id":636,"name":"window","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6105,"character":46}],"type":{"type":"reference","name":"ScaledSize"}}],"groups":[{"title":"Properties","kind":1024,"children":[637,636]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":619,"name":"get","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":620,"name":"get","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Initial dimensions are set before runApplication is called so they\\nshould be available before any other require\'s are run, but may be\\nupdated later.\\nNote: Although dimensions are available immediately, they may\\nchange (e.g due to device rotation) so any rendering logic or\\nstyles that depend on these constants should try to call this\\nfunction on every render, rather than caching the value (for\\nexample, using inline styles rather than setting a value in a\\nStyleSheet).\\nExample: const {height, width} = Dimensions.get(\'window\');","returns":"Value for the dimension.\\n"},"parameters":[{"id":621,"name":"dim","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"Name of dimension as defined when calling set."},"type":{"type":"union","types":[{"type":"literal","value":"window"},{"type":"literal","value":"screen"}]}}],"type":{"type":"reference","name":"ScaledSize"}}]},{"id":638,"name":"removeEventListener","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":639,"name":"removeEventListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Remove an event listener"},"parameters":[{"id":640,"name":"type","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"the type of event"},"type":{"type":"literal","value":"change"}},{"id":641,"name":"handler","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"the event handler\\n"},"type":{"type":"reflection","declaration":{"id":642,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":643,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":644,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":645,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":647,"name":"screen","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6116,"character":66}],"type":{"type":"reference","name":"ScaledSize"}},{"id":646,"name":"window","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6116,"character":46}],"type":{"type":"reference","name":"ScaledSize"}}],"groups":[{"title":"Properties","kind":1024,"children":[647,646]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":622,"name":"set","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"id":623,"name":"set","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"This should only be called from native code by sending the didUpdateDimensions event."},"parameters":[{"id":624,"name":"dims","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"text":"Simple string-keyed object of dimensions to set\\n"},"type":{"type":"reflection","declaration":{"id":625,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"indexSignature":{"id":626,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":627,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","kind":2048,"children":[628,619,638,622]}],"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":6074,"character":27}]},{"id":617,"name":"Dimensions","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react-native/index.d.ts","line":9566,"character":23}],"type":{"type":"reference","id":617,"name":"Dimensions"}}],"groups":[{"title":"Classes","kind":128,"children":[648,793,949,1167]},{"title":"Interfaces","kind":256,"children":[618]},{"title":"Variables","kind":32,"children":[617]}],"sources":[{"fileName":"src/ReactNative.tsx","line":1,"character":0}]},{"id":384,"name":"ResponsiveList","kind":1,"kindString":"Module","flags":{},"children":[{"id":394,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":385},{"id":389,"name":"ResponsiveListProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/ResponsiveList.tsx","line":9,"character":31}],"typeParameter":[{"id":393,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"T"}],"name":"FlatListProps"},{"type":"literal","value":"renderItem"}],"name":"Omit"},{"type":"reflection","declaration":{"id":390,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":391,"name":"breakpoints","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/ResponsiveList.tsx","line":10,"character":13}],"type":{"type":"mapped","parameter":"key","parameterType":{"type":"reference","id":459,"name":"Breakpoint"},"templateType":{"type":"intrinsic","name":"number"},"optionalModifier":"+"}},{"id":392,"name":"renderItem","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/ResponsiveList.tsx","line":13,"character":12}],"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"renderItem"},"objectType":{"type":"reference","typeArguments":[{"type":"reference","name":"T"}],"name":"FlatListProps"}}],"name":"NonNullable"}}],"groups":[{"title":"Properties","kind":1024,"children":[391,392]}],"sources":[{"fileName":"src/ResponsiveList.tsx","line":9,"character":75}]}}]}},{"id":385,"name":"ResponsiveList","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"src/ResponsiveList.tsx","line":16,"character":30}],"signatures":[{"id":386,"name":"ResponsiveList","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":387,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":388,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":389,"typeArguments":[{"type":"reference","name":"T"}],"name":"ResponsiveListProps"}],"name":"React.PropsWithChildren"}}],"type":{"type":"reference","name":"JSX.Element"}}]}],"groups":[{"title":"References","kind":16777216,"children":[394]},{"title":"Type aliases","kind":4194304,"children":[389]},{"title":"Functions","kind":64,"children":[385]}],"sources":[{"fileName":"src/ResponsiveList.tsx","line":1,"character":0}]},{"id":395,"name":"ScrollProvider","kind":1,"kindString":"Module","flags":{},"children":[{"id":402,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":401},{"id":396,"name":"ScrollContextType","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/ScrollProvider.tsx","line":4,"character":29}],"type":{"type":"reflection","declaration":{"id":397,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":398,"name":"x","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/ScrollProvider.tsx","line":5,"character":3}],"type":{"type":"reference","name":"Animated.Value"}},{"id":399,"name":"y","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/ScrollProvider.tsx","line":6,"character":3}],"type":{"type":"reference","name":"Animated.Value"}}],"groups":[{"title":"Properties","kind":1024,"children":[398,399]}],"sources":[{"fileName":"src/ScrollProvider.tsx","line":4,"character":31}]}}},{"id":400,"name":"ScrollContext","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/ScrollProvider.tsx","line":9,"character":26}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":396,"name":"ScrollContextType"}],"name":"Context"},"defaultValue":"..."},{"id":401,"name":"ScrollProvider","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/ScrollProvider.tsx","line":14,"character":27}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":396,"name":"ScrollContextType"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[402]},{"title":"Type aliases","kind":4194304,"children":[396]},{"title":"Variables","kind":32,"children":[400,401]}],"sources":[{"fileName":"src/ScrollProvider.tsx","line":1,"character":0}]},{"id":403,"name":"Spacer","kind":1,"kindString":"Module","flags":{},"children":[{"id":408,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":407},{"id":404,"name":"SpacerProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Spacer.tsx","line":6,"character":23}],"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"id":405,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":406,"name":"spacing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Spacer.tsx","line":7,"character":9}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[406]}],"sources":[{"fileName":"src/Spacer.tsx","line":6,"character":37}]}}]}},{"id":407,"name":"Spacer","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Spacer.tsx","line":10,"character":19}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":404,"name":"SpacerProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[408]},{"title":"Type aliases","kind":4194304,"children":[404]},{"title":"Variables","kind":32,"children":[407]}],"sources":[{"fileName":"src/Spacer.tsx","line":1,"character":0}]},{"id":409,"name":"Switch","kind":1,"kindString":"Module","flags":{},"children":[{"id":414,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":413},{"id":410,"name":"SwitchProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Switch.tsx","line":11,"character":23}],"type":{"type":"intersection","types":[{"type":"reference","name":"LegacySwitchProps"},{"type":"reflection","declaration":{"id":411,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":412,"name":"activeThumbColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Switch.tsx","line":12,"character":18}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[412]}],"sources":[{"fileName":"src/Switch.tsx","line":11,"character":45}]}}]}},{"id":413,"name":"Switch","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Switch.tsx","line":15,"character":19}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":410,"name":"SwitchProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[414]},{"title":"Type aliases","kind":4194304,"children":[410]},{"title":"Variables","kind":32,"children":[413]}],"sources":[{"fileName":"src/Switch.tsx","line":1,"character":0}]},{"id":427,"name":"Table","kind":1,"kindString":"Module","flags":{},"children":[{"id":1281,"name":"CellProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Table/Cell.tsx","line":6,"character":21}],"type":{"type":"reference","name":"ViewProps"}},{"id":1283,"name":"RowProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Table/Row.tsx","line":6,"character":20}],"type":{"type":"reference","name":"ViewProps"}},{"id":1285,"name":"TableProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Table/Table.tsx","line":6,"character":22}],"type":{"type":"reference","name":"ViewProps"}},{"id":1282,"name":"Cell","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Table/Cell.tsx","line":8,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":416,"name":"CellProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1284,"name":"Row","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Table/Row.tsx","line":8,"character":16}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":420,"name":"RowProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1286,"name":"Table","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Table/Table.tsx","line":8,"character":18}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":424,"name":"TableProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"Type aliases","kind":4194304,"children":[1281,1283,1285]},{"title":"Variables","kind":32,"children":[1282,1284,1286]}],"sources":[{"fileName":"src/Table/index.ts","line":1,"character":0}]},{"id":415,"name":"Table/Cell","kind":1,"kindString":"Module","flags":{},"children":[{"id":418,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":417},{"id":416,"name":"CellProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Table/Cell.tsx","line":6,"character":21}],"type":{"type":"reference","name":"ViewProps"}},{"id":417,"name":"Cell","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Table/Cell.tsx","line":8,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":416,"name":"CellProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[418]},{"title":"Type aliases","kind":4194304,"children":[416]},{"title":"Variables","kind":32,"children":[417]}],"sources":[{"fileName":"src/Table/Cell.tsx","line":1,"character":0}]},{"id":419,"name":"Table/Row","kind":1,"kindString":"Module","flags":{},"children":[{"id":422,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":421},{"id":420,"name":"RowProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Table/Row.tsx","line":6,"character":20}],"type":{"type":"reference","name":"ViewProps"}},{"id":421,"name":"Row","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Table/Row.tsx","line":8,"character":16}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":420,"name":"RowProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[422]},{"title":"Type aliases","kind":4194304,"children":[420]},{"title":"Variables","kind":32,"children":[421]}],"sources":[{"fileName":"src/Table/Row.tsx","line":1,"character":0}]},{"id":423,"name":"Table/Table","kind":1,"kindString":"Module","flags":{},"children":[{"id":426,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":425},{"id":424,"name":"TableProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Table/Table.tsx","line":6,"character":22}],"type":{"type":"reference","name":"ViewProps"}},{"id":425,"name":"Table","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Table/Table.tsx","line":8,"character":18}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":424,"name":"TableProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[426]},{"title":"Type aliases","kind":4194304,"children":[424]},{"title":"Variables","kind":32,"children":[425]}],"sources":[{"fileName":"src/Table/Table.tsx","line":1,"character":0}]},{"id":457,"name":"Text","kind":1,"kindString":"Module","flags":{},"children":[{"id":1287,"name":"CaptionProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Caption.tsx","line":7,"character":24}],"type":{"type":"reference","id":445,"name":"TextProps"}},{"id":1289,"name":"HeadlineProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Headline.tsx","line":7,"character":25}],"type":{"type":"reference","id":445,"name":"TextProps"}},{"id":1291,"name":"ParagraphProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Paragraph.tsx","line":7,"character":26}],"type":{"type":"reference","id":445,"name":"TextProps"}},{"id":1293,"name":"SubheadingProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Subheading.tsx","line":7,"character":27}],"type":{"type":"reference","id":445,"name":"TextProps"}},{"id":1295,"name":"TextProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Text.tsx","line":12,"character":21}],"type":{"type":"intersection","types":[{"type":"reference","name":"LegacyTextProps"},{"type":"reflection","declaration":{"id":1296,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1297,"name":"color","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Text/Text.tsx","line":13,"character":7}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"primary"},{"type":"literal","value":"secondary"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"success"},{"type":"literal","value":"warning"}]}},{"id":1298,"name":"gutter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Text/Text.tsx","line":21,"character":8}],"type":{"type":"union","types":[{"type":"literal","value":true},{"type":"intrinsic","name":"number"}]}},{"id":1299,"name":"gutterBottom","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Text/Text.tsx","line":22,"character":14}],"type":{"type":"union","types":[{"type":"literal","value":true},{"type":"intrinsic","name":"number"}]}},{"id":1300,"name":"gutterTop","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Text/Text.tsx","line":23,"character":11}],"type":{"type":"union","types":[{"type":"literal","value":true},{"type":"intrinsic","name":"number"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[1297,1298,1299,1300]}],"sources":[{"fileName":"src/Text/Text.tsx","line":12,"character":41}]}}]}},{"id":1302,"name":"TitleProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Title.tsx","line":6,"character":22}],"type":{"type":"reference","name":"TextProps"}},{"id":1288,"name":"Caption","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Caption.tsx","line":9,"character":20}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":429,"name":"CaptionProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1290,"name":"Headline","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Headline.tsx","line":9,"character":21}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":433,"name":"HeadlineProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1292,"name":"Paragraph","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Paragraph.tsx","line":9,"character":22}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":437,"name":"ParagraphProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1294,"name":"Subheading","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Subheading.tsx","line":9,"character":23}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":441,"name":"SubheadingProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1301,"name":"Text","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Text.tsx","line":26,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":445,"name":"TextProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1303,"name":"Title","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Title.tsx","line":8,"character":18}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":454,"name":"TitleProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"Type aliases","kind":4194304,"children":[1287,1289,1291,1293,1295,1302]},{"title":"Variables","kind":32,"children":[1288,1290,1292,1294,1301,1303]}],"sources":[{"fileName":"src/Text/index.ts","line":1,"character":0}]},{"id":428,"name":"Text/Caption","kind":1,"kindString":"Module","flags":{},"children":[{"id":431,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":430},{"id":429,"name":"CaptionProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Caption.tsx","line":7,"character":24}],"type":{"type":"reference","id":445,"name":"TextProps"}},{"id":430,"name":"Caption","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Caption.tsx","line":9,"character":20}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":429,"name":"CaptionProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[431]},{"title":"Type aliases","kind":4194304,"children":[429]},{"title":"Variables","kind":32,"children":[430]}],"sources":[{"fileName":"src/Text/Caption.tsx","line":1,"character":0}]},{"id":432,"name":"Text/Headline","kind":1,"kindString":"Module","flags":{},"children":[{"id":435,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":434},{"id":433,"name":"HeadlineProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Headline.tsx","line":7,"character":25}],"type":{"type":"reference","id":445,"name":"TextProps"}},{"id":434,"name":"Headline","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Headline.tsx","line":9,"character":21}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":433,"name":"HeadlineProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[435]},{"title":"Type aliases","kind":4194304,"children":[433]},{"title":"Variables","kind":32,"children":[434]}],"sources":[{"fileName":"src/Text/Headline.tsx","line":1,"character":0}]},{"id":436,"name":"Text/Paragraph","kind":1,"kindString":"Module","flags":{},"children":[{"id":439,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":438},{"id":437,"name":"ParagraphProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Paragraph.tsx","line":7,"character":26}],"type":{"type":"reference","id":445,"name":"TextProps"}},{"id":438,"name":"Paragraph","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Paragraph.tsx","line":9,"character":22}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":437,"name":"ParagraphProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[439]},{"title":"Type aliases","kind":4194304,"children":[437]},{"title":"Variables","kind":32,"children":[438]}],"sources":[{"fileName":"src/Text/Paragraph.tsx","line":1,"character":0}]},{"id":440,"name":"Text/Subheading","kind":1,"kindString":"Module","flags":{},"children":[{"id":443,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":442},{"id":441,"name":"SubheadingProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Subheading.tsx","line":7,"character":27}],"type":{"type":"reference","id":445,"name":"TextProps"}},{"id":442,"name":"Subheading","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Subheading.tsx","line":9,"character":23}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":441,"name":"SubheadingProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[443]},{"title":"Type aliases","kind":4194304,"children":[441]},{"title":"Variables","kind":32,"children":[442]}],"sources":[{"fileName":"src/Text/Subheading.tsx","line":1,"character":0}]},{"id":444,"name":"Text/Text","kind":1,"kindString":"Module","flags":{},"children":[{"id":452,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":451},{"id":445,"name":"TextProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Text.tsx","line":12,"character":21}],"type":{"type":"intersection","types":[{"type":"reference","name":"LegacyTextProps"},{"type":"reflection","declaration":{"id":446,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":447,"name":"color","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Text/Text.tsx","line":13,"character":7}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"primary"},{"type":"literal","value":"secondary"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"success"},{"type":"literal","value":"warning"}]}},{"id":448,"name":"gutter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Text/Text.tsx","line":21,"character":8}],"type":{"type":"union","types":[{"type":"literal","value":true},{"type":"intrinsic","name":"number"}]}},{"id":449,"name":"gutterBottom","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Text/Text.tsx","line":22,"character":14}],"type":{"type":"union","types":[{"type":"literal","value":true},{"type":"intrinsic","name":"number"}]}},{"id":450,"name":"gutterTop","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Text/Text.tsx","line":23,"character":11}],"type":{"type":"union","types":[{"type":"literal","value":true},{"type":"intrinsic","name":"number"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[447,448,449,450]}],"sources":[{"fileName":"src/Text/Text.tsx","line":12,"character":41}]}}]}},{"id":451,"name":"Text","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Text.tsx","line":26,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":445,"name":"TextProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[452]},{"title":"Type aliases","kind":4194304,"children":[445]},{"title":"Variables","kind":32,"children":[451]}],"sources":[{"fileName":"src/Text/Text.tsx","line":1,"character":0}]},{"id":453,"name":"Text/Title","kind":1,"kindString":"Module","flags":{},"children":[{"id":456,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":455},{"id":454,"name":"TitleProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Title.tsx","line":6,"character":22}],"type":{"type":"reference","name":"TextProps"}},{"id":455,"name":"Title","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Title.tsx","line":8,"character":18}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":454,"name":"TitleProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[456]},{"title":"Type aliases","kind":4194304,"children":[454]},{"title":"Variables","kind":32,"children":[455]}],"sources":[{"fileName":"src/Text/Title.tsx","line":1,"character":0}]},{"id":458,"name":"Theme","kind":1,"kindString":"Module","flags":{},"children":[{"id":509,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":462},{"id":459,"name":"Breakpoint","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":3,"character":22}],"type":{"type":"union","types":[{"type":"literal","value":"xs"},{"type":"literal","value":"sm"},{"type":"literal","value":"md"},{"type":"literal","value":"lg"},{"type":"literal","value":"xl"}]}},{"id":460,"name":"BreakpointProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":5,"character":27}],"typeParameter":[{"id":461,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"number"}}],"type":{"type":"mapped","parameter":"key","parameterType":{"type":"reference","id":459,"name":"Breakpoint"},"templateType":{"type":"reference","name":"T"},"optionalModifier":"+"}},{"id":462,"name":"Theme","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":9,"character":17}],"type":{"type":"reflection","declaration":{"id":463,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":464,"name":"breakpoint","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":10,"character":12}],"type":{"type":"mapped","parameter":"key","parameterType":{"type":"reference","id":459,"name":"Breakpoint"},"templateType":{"type":"intrinsic","name":"number"}}},{"id":465,"name":"elevation","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":11,"character":11}],"type":{"type":"reflection","declaration":{"id":466,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":11,"character":12}],"signatures":[{"id":467,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":468,"name":"depth","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"ViewStyle"}}]}}},{"id":469,"name":"palette","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":12,"character":9}],"type":{"type":"reflection","declaration":{"id":470,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":471,"name":"background","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":13,"character":14}],"type":{"type":"reflection","declaration":{"id":472,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":473,"name":"default","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":14,"character":13}],"type":{"type":"intrinsic","name":"string"}},{"id":474,"name":"paper","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":15,"character":11}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[473,474]}],"sources":[{"fileName":"src/Theme.tsx","line":13,"character":15}]}}},{"id":475,"name":"divider","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":17,"character":11}],"type":{"type":"intrinsic","name":"string"}},{"id":476,"name":"error","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":18,"character":9}],"type":{"type":"intrinsic","name":"string"}},{"id":477,"name":"info","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":19,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":478,"name":"primary","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":20,"character":11}],"type":{"type":"intrinsic","name":"string"}},{"id":479,"name":"secondary","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":21,"character":13}],"type":{"type":"intrinsic","name":"string"}},{"id":480,"name":"success","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":22,"character":11}],"type":{"type":"intrinsic","name":"string"}},{"id":481,"name":"text","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":23,"character":8}],"type":{"type":"reflection","declaration":{"id":482,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":483,"name":"disabled","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":24,"character":14}],"type":{"type":"intrinsic","name":"string"}},{"id":484,"name":"primary","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":25,"character":13}],"type":{"type":"intrinsic","name":"string"}},{"id":485,"name":"secondary","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":26,"character":15}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[483,484,485]}],"sources":[{"fileName":"src/Theme.tsx","line":23,"character":9}]}}},{"id":486,"name":"touchable","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":28,"character":13}],"type":{"type":"intrinsic","name":"string"}},{"id":487,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":29,"character":8}],"type":{"type":"union","types":[{"type":"literal","value":"dark"},{"type":"literal","value":"light"}]}},{"id":488,"name":"warning","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":30,"character":11}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[471,475,476,477,478,479,480,481,486,487,488]}],"sources":[{"fileName":"src/Theme.tsx","line":12,"character":10}]}}},{"id":489,"name":"shape","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":32,"character":7}],"type":{"type":"reflection","declaration":{"id":490,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":491,"name":"borderRadius","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":33,"character":16}],"type":{"type":"intrinsic","name":"number"}},{"id":492,"name":"spacing","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":34,"character":11}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[491,492]}],"sources":[{"fileName":"src/Theme.tsx","line":32,"character":8}]}}},{"id":493,"name":"spacing","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":36,"character":9}],"type":{"type":"reflection","declaration":{"id":494,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":36,"character":10}],"signatures":[{"id":495,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":496,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}]}}},{"id":497,"name":"typography","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":37,"character":12}],"type":{"type":"reflection","declaration":{"id":498,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":503,"name":"button","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":43,"character":10}],"type":{"type":"reference","name":"TextStyle"}},{"id":504,"name":"caption","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":44,"character":11}],"type":{"type":"reference","name":"TextStyle"}},{"id":499,"name":"fontBold","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":38,"character":12}],"type":{"type":"intrinsic","name":"string"}},{"id":500,"name":"fontMedium","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":39,"character":14}],"type":{"type":"intrinsic","name":"string"}},{"id":501,"name":"fontRegular","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":40,"character":15}],"type":{"type":"intrinsic","name":"string"}},{"id":502,"name":"fontSize","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":41,"character":12}],"type":{"type":"intrinsic","name":"number"}},{"id":505,"name":"headline","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":45,"character":12}],"type":{"type":"reference","name":"TextStyle"}},{"id":506,"name":"paragraph","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":46,"character":13}],"type":{"type":"reference","name":"TextStyle"}},{"id":507,"name":"subheading","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":47,"character":14}],"type":{"type":"reference","name":"TextStyle"}},{"id":508,"name":"title","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":48,"character":9}],"type":{"type":"reference","name":"TextStyle"}}],"groups":[{"title":"Properties","kind":1024,"children":[503,504,499,500,501,502,505,506,507,508]}],"sources":[{"fileName":"src/Theme.tsx","line":37,"character":13}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[464,465,469,489,493,497]}],"sources":[{"fileName":"src/Theme.tsx","line":9,"character":19}]}}}],"groups":[{"title":"References","kind":16777216,"children":[509]},{"title":"Type aliases","kind":4194304,"children":[459,460,462]}],"sources":[{"fileName":"src/Theme.tsx","line":1,"character":0}]},{"id":510,"name":"ThemeProvider","kind":1,"kindString":"Module","flags":{},"children":[{"id":516,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":515},{"id":511,"name":"ThemeContextType","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/ThemeProvider.tsx","line":4,"character":28}],"type":{"type":"reflection","declaration":{"id":512,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":513,"name":"theme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/ThemeProvider.tsx","line":5,"character":7}],"type":{"type":"reference","id":462,"name":"Theme"}}],"groups":[{"title":"Properties","kind":1024,"children":[513]}],"sources":[{"fileName":"src/ThemeProvider.tsx","line":4,"character":30}]}}},{"id":514,"name":"ThemeContext","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/ThemeProvider.tsx","line":8,"character":25}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":511,"name":"ThemeContextType"}],"name":"Context"},"defaultValue":"..."},{"id":515,"name":"ThemeProvider","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/ThemeProvider.tsx","line":12,"character":26}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":511,"name":"ThemeContextType"}],"name":"React.FunctionComponent"},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[516]},{"title":"Type aliases","kind":4194304,"children":[511]},{"title":"Variables","kind":32,"children":[514,515]}],"sources":[{"fileName":"src/ThemeProvider.tsx","line":1,"character":0}]},{"id":517,"name":"createTheme","kind":1,"kindString":"Module","flags":{},"children":[{"id":521,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":518},{"id":518,"name":"createTheme","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"src/createTheme.tsx","line":10,"character":24}],"signatures":[{"id":519,"name":"createTheme","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":520,"name":"userTheme","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":462,"name":"Theme"}],"name":"DeepPartial"},"defaultValue":"..."}],"type":{"type":"reference","id":462,"name":"Theme"}}]}],"groups":[{"title":"References","kind":16777216,"children":[521]},{"title":"Functions","kind":64,"children":[518]}],"sources":[{"fileName":"src/createTheme.tsx","line":1,"character":0}]},{"id":522,"name":"index","kind":1,"kindString":"Module","flags":{},"children":[{"id":1447,"name":"Dimensions","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"src/ReactNative.tsx","line":1,"character":19}],"target":617},{"id":1448,"name":"FlatList","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"src/ReactNative.tsx","line":1,"character":29}],"target":648},{"id":1449,"name":"Image","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"src/ReactNative.tsx","line":1,"character":36}],"target":793},{"id":1450,"name":"ScrollView","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"src/ReactNative.tsx","line":1,"character":48}],"target":949},{"id":1451,"name":"View","kind":16777216,"kindString":"Reference","flags":{},"sources":[{"fileName":"src/ReactNative.tsx","line":1,"character":54}],"target":1167},{"id":1387,"name":"Button","kind":2,"kindString":"Namespace","flags":{},"children":[{"id":1388,"name":"defaultProps","kind":32,"kindString":"Variable","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"PressableProps"},{"type":"union","types":[{"type":"literal","value":"hitSlop"},{"type":"literal","value":"onLayout"},{"type":"literal","value":"pointerEvents"},{"type":"literal","value":"removeClippedSubviews"},{"type":"literal","value":"testID"},{"type":"literal","value":"nativeID"},{"type":"literal","value":"collapsable"},{"type":"literal","value":"needsOffscreenAlphaCompositing"},{"type":"literal","value":"renderToHardwareTextureAndroid"},{"type":"literal","value":"focusable"},{"type":"literal","value":"shouldRasterizeIOS"},{"type":"literal","value":"isTVSelectable"},{"type":"literal","value":"hasTVPreferredFocus"},{"type":"literal","value":"tvParallaxProperties"},{"type":"literal","value":"tvParallaxShiftDistanceX"},{"type":"literal","value":"tvParallaxShiftDistanceY"},{"type":"literal","value":"tvParallaxTiltAngle"},{"type":"literal","value":"tvParallaxMagnification"},{"type":"literal","value":"onStartShouldSetResponder"},{"type":"literal","value":"onMoveShouldSetResponder"},{"type":"literal","value":"onResponderEnd"},{"type":"literal","value":"onResponderGrant"},{"type":"literal","value":"onResponderReject"},{"type":"literal","value":"onResponderMove"},{"type":"literal","value":"onResponderRelease"},{"type":"literal","value":"onResponderStart"},{"type":"literal","value":"onResponderTerminationRequest"},{"type":"literal","value":"onResponderTerminate"},{"type":"literal","value":"onStartShouldSetResponderCapture"},{"type":"literal","value":"onMoveShouldSetResponderCapture"},{"type":"literal","value":"onTouchStart"},{"type":"literal","value":"onTouchMove"},{"type":"literal","value":"onTouchEnd"},{"type":"literal","value":"onTouchCancel"},{"type":"literal","value":"onTouchEndCapture"},{"type":"literal","value":"accessible"},{"type":"literal","value":"accessibilityActions"},{"type":"literal","value":"accessibilityLabel"},{"type":"literal","value":"accessibilityRole"},{"type":"literal","value":"accessibilityState"},{"type":"literal","value":"accessibilityHint"},{"type":"literal","value":"accessibilityValue"},{"type":"literal","value":"onAccessibilityAction"},{"type":"literal","value":"accessibilityLiveRegion"},{"type":"literal","value":"importantForAccessibility"},{"type":"literal","value":"accessibilityElementsHidden"},{"type":"literal","value":"accessibilityViewIsModal"},{"type":"literal","value":"onAccessibilityEscape"},{"type":"literal","value":"onAccessibilityTap"},{"type":"literal","value":"onMagicTap"},{"type":"literal","value":"accessibilityIgnoresInvertColors"},{"type":"literal","value":"onPress"},{"type":"literal","value":"onPressIn"},{"type":"literal","value":"onPressOut"},{"type":"literal","value":"onLongPress"},{"type":"literal","value":"delayLongPress"},{"type":"literal","value":"disabled"},{"type":"literal","value":"pressRetentionOffset"},{"type":"literal","value":"android_disableSound"},{"type":"literal","value":"android_ripple"},{"type":"literal","value":"testOnly_pressed"}]}],"name":"Pick"},{"type":"reference","id":12,"name":"ButtonProps"}]}],"name":"Partial"}]}}],"groups":[{"title":"Variables","kind":32,"children":[1388]}]},{"id":1306,"name":"Card","kind":2,"kindString":"Namespace","flags":{},"children":[{"id":1307,"name":"Media","kind":32,"kindString":"Variable","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageProps"}],"name":"FunctionComponent"}},{"id":1308,"name":"Title","kind":32,"kindString":"Variable","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":35,"name":"CardTitleProps"}],"name":"FunctionComponent"}}],"groups":[{"title":"Variables","kind":32,"children":[1307,1308]}]},{"id":1311,"name":"List","kind":2,"kindString":"Namespace","flags":{},"children":[{"id":1312,"name":"Item","kind":32,"kindString":"Variable","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":113,"name":"ListTitleProps"}],"name":"FunctionComponent"}}],"groups":[{"title":"Variables","kind":32,"children":[1312]}]},{"id":1475,"name":"Breakpoint","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":3,"character":22}],"type":{"type":"union","types":[{"type":"literal","value":"xs"},{"type":"literal","value":"sm"},{"type":"literal","value":"md"},{"type":"literal","value":"lg"},{"type":"literal","value":"xl"}]}},{"id":1476,"name":"BreakpointProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":5,"character":27}],"typeParameter":[{"id":1477,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"number"}}],"type":{"type":"mapped","parameter":"key","parameterType":{"type":"reference","id":459,"name":"Breakpoint"},"templateType":{"type":"reference","name":"T"},"optionalModifier":"+"}},{"id":1389,"name":"ButtonProps","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"tags":[{"tag":"defaultvalue?","text":"ButtonProps.color default"},{"tag":"defaultvalue?","text":"ButtonProps.color default"},{"tag":"template","text":"default","param":"ButtonProps.color"},{"tag":"template","text":"default\\n\\nAny other props supplied will be provided to the root element [Pressable](https://reactnative.dev/docs/pressable)\\n","param":"ButtonProps[\\"color\\"]"}]},"sources":[{"fileName":"src/Button.tsx","line":219,"character":23}],"type":{"type":"reflection","declaration":{"id":1390,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1391,"name":"children","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Button.tsx","line":220,"character":10}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":1392,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Button.tsx","line":220,"character":13}],"signatures":[{"id":1393,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1394,"name":"textStyle","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TextStyle"}}}],"type":{"type":"reference","name":"React.ReactNode"}}]}},{"type":"reference","name":"React.ReactNode"}]}},{"id":1395,"name":"color","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the button, default is \\"default\\" which is the touchable color"},"sources":[{"fileName":"src/Button.tsx","line":222,"character":7}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"primary"},{"type":"literal","value":"secondary"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"success"},{"type":"literal","value":"warning"}]}},{"id":1396,"name":"elevation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Elevation (shadow) of the button"},"sources":[{"fileName":"src/Button.tsx","line":231,"character":11}],"type":{"type":"intrinsic","name":"number"}},{"id":1397,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the button should take all available horizontal space"},"sources":[{"fileName":"src/Button.tsx","line":233,"character":11}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1398,"name":"style","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Styles to be applied to the button. Text related properties will be automatically forwarded to the Text component"},"sources":[{"fileName":"src/Button.tsx","line":235,"character":7}],"type":{"type":"intersection","types":[{"type":"reference","name":"TextStyle"},{"type":"reference","name":"ViewStyle"}]}},{"id":1399,"name":"variant","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Variant of the button, default is \\"flat\\""},"sources":[{"fileName":"src/Button.tsx","line":237,"character":9}],"type":{"type":"union","types":[{"type":"literal","value":"flat"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"},{"type":"literal","value":"gradient"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[1391,1395,1396,1397,1398,1399]}],"sources":[{"fileName":"src/Button.tsx","line":219,"character":25}]}}},{"id":1356,"name":"CaptionProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Caption.tsx","line":7,"character":24}],"type":{"type":"reference","id":445,"name":"TextProps"}},{"id":1304,"name":"CardProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Card/Card.tsx","line":8,"character":21}],"type":{"type":"reference","name":"ViewProps"}},{"id":1350,"name":"CellProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Table/Cell.tsx","line":6,"character":21}],"type":{"type":"reference","name":"ViewProps"}},{"id":1400,"name":"ConditionalWrapperProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":3,"character":35}],"type":{"type":"reflection","declaration":{"id":1401,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1402,"name":"children","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":4,"character":10}],"type":{"type":"reference","name":"JSX.Element"}},{"id":1403,"name":"condition","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":5,"character":11}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1404,"name":"render","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":6,"character":8}],"type":{"type":"reflection","declaration":{"id":1405,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":6,"character":9}],"signatures":[{"id":1406,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1407,"name":"children","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSX.Element"}}],"type":{"type":"reference","name":"JSX.Element"}}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[1402,1403,1404]}],"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":3,"character":37}]}}},{"id":1409,"name":"ContainerProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Container.tsx","line":8,"character":26}],"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reference","id":460,"name":"BreakpointProps"},{"type":"reflection","declaration":{"id":1410,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1411,"name":"align","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Container.tsx","line":10,"character":9}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"alignItems"},"objectType":{"type":"reference","name":"ViewStyle"}}},{"id":1412,"name":"direction","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Container.tsx","line":11,"character":13}],"type":{"type":"union","types":[{"type":"literal","value":"column"},{"type":"literal","value":"row"}]}},{"id":1413,"name":"flex","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Container.tsx","line":12,"character":8}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":true}]}},{"id":1414,"name":"justify","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Container.tsx","line":13,"character":11}],"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"justifyContent"},"objectType":{"type":"reference","name":"ViewStyle"}}},{"id":1415,"name":"spacing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Container.tsx","line":14,"character":11}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1411,1412,1413,1414,1415]}],"sources":[{"fileName":"src/Container.tsx","line":9,"character":19}]}}]}},{"id":1417,"name":"FabProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Fab.tsx","line":7,"character":20}],"type":{"type":"intersection","types":[{"type":"reference","id":90,"name":"IconButtonProps"},{"type":"reflection","declaration":{"id":1418,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1419,"name":"align","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Fab.tsx","line":8,"character":7}],"type":{"type":"union","types":[{"type":"literal","value":"center"},{"type":"literal","value":"left"},{"type":"literal","value":"right"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[1419]}],"sources":[{"fileName":"src/Fab.tsx","line":7,"character":40}]}}]}},{"id":1421,"name":"FrameProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Frame.tsx","line":6,"character":22}],"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"id":1422,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1423,"name":"maxWidth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Frame.tsx","line":7,"character":10}],"type":{"type":"union","types":[{"type":"literal","value":"xs"},{"type":"literal","value":"sm"},{"type":"literal","value":"md"},{"type":"literal","value":"lg"},{"type":"literal","value":"xl"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[1423]}],"sources":[{"fileName":"src/Frame.tsx","line":6,"character":36}]}}]}},{"id":1358,"name":"HeadlineProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Headline.tsx","line":7,"character":25}],"type":{"type":"reference","id":445,"name":"TextProps"}},{"id":1425,"name":"IconButtonProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/IconButton.tsx","line":13,"character":27}],"type":{"type":"intersection","types":[{"type":"reference","id":12,"name":"ButtonProps"},{"type":"reflection","declaration":{"id":1426,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1427,"name":"children","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/IconButton.tsx","line":14,"character":10}],"type":{"type":"reference","name":"JSX.Element"}},{"id":1428,"name":"color","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/IconButton.tsx","line":15,"character":7}],"type":{"type":"intrinsic","name":"string"}},{"id":1429,"name":"size","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/IconButton.tsx","line":16,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1427,1428,1429]}],"sources":[{"fileName":"src/IconButton.tsx","line":13,"character":43}]}}]}},{"id":1432,"name":"LinkProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Link.tsx","line":14,"character":21}],"type":{"type":"intersection","types":[{"type":"reference","name":"PressableProps"},{"type":"reflection","declaration":{"id":1433,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1434,"name":"href","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Link.tsx","line":15,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1434]}],"sources":[{"fileName":"src/Link.tsx","line":14,"character":40}]}}]}},{"id":1309,"name":"ListProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/List/List.tsx","line":6,"character":21}],"type":{"type":"reference","name":"ViewProps"}},{"id":1313,"name":"ListTitleProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":13,"character":26}],"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"id":1314,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1315,"name":"left","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":14,"character":6}],"type":{"type":"reflection","declaration":{"id":1316,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":14,"character":8}],"signatures":[{"id":1317,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1318,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1319,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1320,"name":"size","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":14,"character":23}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1320]}],"sources":[{"fileName":"src/List/ListItem.tsx","line":14,"character":16}]}}}],"type":{"type":"reference","name":"React.ReactNode"}}]}}},{"id":1321,"name":"right","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":15,"character":7}],"type":{"type":"reflection","declaration":{"id":1322,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":15,"character":9}],"signatures":[{"id":1323,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1324,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1325,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1326,"name":"size","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":15,"character":24}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1326]}],"sources":[{"fileName":"src/List/ListItem.tsx","line":15,"character":17}]}}}],"type":{"type":"reference","name":"React.ReactNode"}}]}}},{"id":1327,"name":"subtitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":16,"character":10}],"type":{"type":"reference","name":"React.ReactNode"}},{"id":1328,"name":"subtitleNumberOfLines","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":17,"character":23}],"type":{"type":"intrinsic","name":"number"}},{"id":1329,"name":"title","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/List/ListItem.tsx","line":18,"character":7}],"type":{"type":"reference","name":"React.ReactNode"}},{"id":1330,"name":"titleNumberOfLines","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":19,"character":20}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1315,1321,1327,1328,1329,1330]}],"sources":[{"fileName":"src/List/ListItem.tsx","line":13,"character":40}]}}]}},{"id":1436,"name":"MinimalProviderProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/MinimalProvider.tsx","line":10,"character":32}],"type":{"type":"reflection","declaration":{"id":1437,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1438,"name":"theme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/MinimalProvider.tsx","line":11,"character":7}],"type":{"type":"reference","id":462,"name":"Theme"}}],"groups":[{"title":"Properties","kind":1024,"children":[1438]}],"sources":[{"fileName":"src/MinimalProvider.tsx","line":10,"character":34}]}}},{"id":1440,"name":"ModalProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Modal.tsx","line":16,"character":22}],"type":{"type":"intersection","types":[{"type":"reference","name":"LegacyModalProps"},{"type":"reflection","declaration":{"id":1441,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1442,"name":"onClose","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Modal.tsx","line":17,"character":9}],"type":{"type":"reflection","declaration":{"id":1443,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Modal.tsx","line":17,"character":10}],"signatures":[{"id":1444,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}},{"id":1445,"name":"variant","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Modal.tsx","line":18,"character":9}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"bottomSheet"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[1442,1445]}],"sources":[{"fileName":"src/Modal.tsx","line":16,"character":43}]}}]}},{"id":1360,"name":"ParagraphProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Paragraph.tsx","line":7,"character":26}],"type":{"type":"reference","id":445,"name":"TextProps"}},{"id":1334,"name":"PortalMethods","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":16,"character":25}],"type":{"type":"reflection","declaration":{"id":1335,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1336,"name":"mount","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":17,"character":7}],"type":{"type":"reflection","declaration":{"id":1337,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":17,"character":8}],"signatures":[{"id":1338,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1339,"name":"children","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"React.ReactNode"}}],"type":{"type":"intrinsic","name":"number"}}]}}},{"id":1345,"name":"unmount","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":19,"character":9}],"type":{"type":"reflection","declaration":{"id":1346,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":19,"character":10}],"signatures":[{"id":1347,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1348,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":1340,"name":"update","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":18,"character":8}],"type":{"type":"reflection","declaration":{"id":1341,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":18,"character":9}],"signatures":[{"id":1342,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1343,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1344,"name":"children","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"React.ReactNode"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[1336,1345,1340]}],"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":16,"character":27}]}}},{"id":1332,"name":"PortalProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Portal/Portal.tsx","line":7,"character":23}],"type":{"type":"reference","name":"ViewProps"}},{"id":1456,"name":"ResponsiveListProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/ResponsiveList.tsx","line":9,"character":31}],"typeParameter":[{"id":1460,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"T"}],"name":"FlatListProps"},{"type":"literal","value":"renderItem"}],"name":"Omit"},{"type":"reflection","declaration":{"id":1457,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1458,"name":"breakpoints","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/ResponsiveList.tsx","line":10,"character":13}],"type":{"type":"mapped","parameter":"key","parameterType":{"type":"reference","id":459,"name":"Breakpoint"},"templateType":{"type":"intrinsic","name":"number"},"optionalModifier":"+"}},{"id":1459,"name":"renderItem","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/ResponsiveList.tsx","line":13,"character":12}],"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"literal","value":"renderItem"},"objectType":{"type":"reference","typeArguments":[{"type":"reference","name":"T"}],"name":"FlatListProps"}}],"name":"NonNullable"}}],"groups":[{"title":"Properties","kind":1024,"children":[1458,1459]}],"sources":[{"fileName":"src/ResponsiveList.tsx","line":9,"character":75}]}}]}},{"id":1352,"name":"RowProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Table/Row.tsx","line":6,"character":20}],"type":{"type":"reference","name":"ViewProps"}},{"id":1461,"name":"ScrollContextType","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/ScrollProvider.tsx","line":4,"character":29}],"type":{"type":"reflection","declaration":{"id":1462,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1463,"name":"x","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/ScrollProvider.tsx","line":5,"character":3}],"type":{"type":"reference","name":"Animated.Value"}},{"id":1464,"name":"y","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/ScrollProvider.tsx","line":6,"character":3}],"type":{"type":"reference","name":"Animated.Value"}}],"groups":[{"title":"Properties","kind":1024,"children":[1463,1464]}],"sources":[{"fileName":"src/ScrollProvider.tsx","line":4,"character":31}]}}},{"id":1467,"name":"SpacerProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Spacer.tsx","line":6,"character":23}],"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"id":1468,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1469,"name":"spacing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Spacer.tsx","line":7,"character":9}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1469]}],"sources":[{"fileName":"src/Spacer.tsx","line":6,"character":37}]}}]}},{"id":1362,"name":"SubheadingProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Subheading.tsx","line":7,"character":27}],"type":{"type":"reference","id":445,"name":"TextProps"}},{"id":1471,"name":"SwitchProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Switch.tsx","line":11,"character":23}],"type":{"type":"intersection","types":[{"type":"reference","name":"LegacySwitchProps"},{"type":"reflection","declaration":{"id":1472,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1473,"name":"activeThumbColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Switch.tsx","line":12,"character":18}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1473]}],"sources":[{"fileName":"src/Switch.tsx","line":11,"character":45}]}}]}},{"id":1354,"name":"TableProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Table/Table.tsx","line":6,"character":22}],"type":{"type":"reference","name":"ViewProps"}},{"id":1364,"name":"TextProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Text.tsx","line":12,"character":21}],"type":{"type":"intersection","types":[{"type":"reference","name":"LegacyTextProps"},{"type":"reflection","declaration":{"id":1365,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1366,"name":"color","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Text/Text.tsx","line":13,"character":7}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"primary"},{"type":"literal","value":"secondary"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"success"},{"type":"literal","value":"warning"}]}},{"id":1367,"name":"gutter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Text/Text.tsx","line":21,"character":8}],"type":{"type":"union","types":[{"type":"literal","value":true},{"type":"intrinsic","name":"number"}]}},{"id":1368,"name":"gutterBottom","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Text/Text.tsx","line":22,"character":14}],"type":{"type":"union","types":[{"type":"literal","value":true},{"type":"intrinsic","name":"number"}]}},{"id":1369,"name":"gutterTop","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/Text/Text.tsx","line":23,"character":11}],"type":{"type":"union","types":[{"type":"literal","value":true},{"type":"intrinsic","name":"number"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[1366,1367,1368,1369]}],"sources":[{"fileName":"src/Text/Text.tsx","line":12,"character":41}]}}]}},{"id":1478,"name":"Theme","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":9,"character":17}],"type":{"type":"reflection","declaration":{"id":1479,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1480,"name":"breakpoint","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":10,"character":12}],"type":{"type":"mapped","parameter":"key","parameterType":{"type":"reference","id":459,"name":"Breakpoint"},"templateType":{"type":"intrinsic","name":"number"}}},{"id":1481,"name":"elevation","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":11,"character":11}],"type":{"type":"reflection","declaration":{"id":1482,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":11,"character":12}],"signatures":[{"id":1483,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1484,"name":"depth","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"ViewStyle"}}]}}},{"id":1485,"name":"palette","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":12,"character":9}],"type":{"type":"reflection","declaration":{"id":1486,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1487,"name":"background","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":13,"character":14}],"type":{"type":"reflection","declaration":{"id":1488,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1489,"name":"default","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":14,"character":13}],"type":{"type":"intrinsic","name":"string"}},{"id":1490,"name":"paper","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":15,"character":11}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1489,1490]}],"sources":[{"fileName":"src/Theme.tsx","line":13,"character":15}]}}},{"id":1491,"name":"divider","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":17,"character":11}],"type":{"type":"intrinsic","name":"string"}},{"id":1492,"name":"error","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":18,"character":9}],"type":{"type":"intrinsic","name":"string"}},{"id":1493,"name":"info","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":19,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":1494,"name":"primary","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":20,"character":11}],"type":{"type":"intrinsic","name":"string"}},{"id":1495,"name":"secondary","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":21,"character":13}],"type":{"type":"intrinsic","name":"string"}},{"id":1496,"name":"success","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":22,"character":11}],"type":{"type":"intrinsic","name":"string"}},{"id":1497,"name":"text","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":23,"character":8}],"type":{"type":"reflection","declaration":{"id":1498,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1499,"name":"disabled","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":24,"character":14}],"type":{"type":"intrinsic","name":"string"}},{"id":1500,"name":"primary","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":25,"character":13}],"type":{"type":"intrinsic","name":"string"}},{"id":1501,"name":"secondary","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":26,"character":15}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1499,1500,1501]}],"sources":[{"fileName":"src/Theme.tsx","line":23,"character":9}]}}},{"id":1502,"name":"touchable","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":28,"character":13}],"type":{"type":"intrinsic","name":"string"}},{"id":1503,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":29,"character":8}],"type":{"type":"union","types":[{"type":"literal","value":"dark"},{"type":"literal","value":"light"}]}},{"id":1504,"name":"warning","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":30,"character":11}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[1487,1491,1492,1493,1494,1495,1496,1497,1502,1503,1504]}],"sources":[{"fileName":"src/Theme.tsx","line":12,"character":10}]}}},{"id":1505,"name":"shape","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":32,"character":7}],"type":{"type":"reflection","declaration":{"id":1506,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1507,"name":"borderRadius","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":33,"character":16}],"type":{"type":"intrinsic","name":"number"}},{"id":1508,"name":"spacing","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":34,"character":11}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1507,1508]}],"sources":[{"fileName":"src/Theme.tsx","line":32,"character":8}]}}},{"id":1509,"name":"spacing","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":36,"character":9}],"type":{"type":"reflection","declaration":{"id":1510,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":36,"character":10}],"signatures":[{"id":1511,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1512,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}]}}},{"id":1513,"name":"typography","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":37,"character":12}],"type":{"type":"reflection","declaration":{"id":1514,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1519,"name":"button","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":43,"character":10}],"type":{"type":"reference","name":"TextStyle"}},{"id":1520,"name":"caption","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":44,"character":11}],"type":{"type":"reference","name":"TextStyle"}},{"id":1515,"name":"fontBold","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":38,"character":12}],"type":{"type":"intrinsic","name":"string"}},{"id":1516,"name":"fontMedium","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":39,"character":14}],"type":{"type":"intrinsic","name":"string"}},{"id":1517,"name":"fontRegular","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":40,"character":15}],"type":{"type":"intrinsic","name":"string"}},{"id":1518,"name":"fontSize","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":41,"character":12}],"type":{"type":"intrinsic","name":"number"}},{"id":1521,"name":"headline","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":45,"character":12}],"type":{"type":"reference","name":"TextStyle"}},{"id":1522,"name":"paragraph","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":46,"character":13}],"type":{"type":"reference","name":"TextStyle"}},{"id":1523,"name":"subheading","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":47,"character":14}],"type":{"type":"reference","name":"TextStyle"}},{"id":1524,"name":"title","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/Theme.tsx","line":48,"character":9}],"type":{"type":"reference","name":"TextStyle"}}],"groups":[{"title":"Properties","kind":1024,"children":[1519,1520,1515,1516,1517,1518,1521,1522,1523,1524]}],"sources":[{"fileName":"src/Theme.tsx","line":37,"character":13}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[1480,1481,1485,1505,1509,1513]}],"sources":[{"fileName":"src/Theme.tsx","line":9,"character":19}]}}},{"id":1525,"name":"ThemeContextType","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/ThemeProvider.tsx","line":4,"character":28}],"type":{"type":"reflection","declaration":{"id":1526,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1527,"name":"theme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/ThemeProvider.tsx","line":5,"character":7}],"type":{"type":"reference","id":462,"name":"Theme"}}],"groups":[{"title":"Properties","kind":1024,"children":[1527]}],"sources":[{"fileName":"src/ThemeProvider.tsx","line":4,"character":30}]}}},{"id":1371,"name":"TitleProps","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/Text/Title.tsx","line":6,"character":22}],"type":{"type":"reference","name":"TextProps"}},{"id":1550,"name":"UseScroll","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/useScroll.ts","line":5,"character":21}],"type":{"type":"reflection","declaration":{"id":1551,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/useScroll.ts","line":5,"character":23}],"signatures":[{"id":1552,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":396,"name":"ScrollContextType"}}]}}},{"id":1384,"name":"AppBar","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/AppBar.tsx","line":19,"character":19}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppBarProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1385,"name":"Avatar","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Avatar.tsx","line":18,"character":19}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AvatarProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1386,"name":"Button","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"## Text Button","text":"> ButtonExample\\n\\n```typescript\\nimport { Button } from \\"@minimalui/core\\";\\nimport * as React from \\"react\\";\\n\\nexport const ButtonExample: React.FunctionComponent = () => {\\n  return (\\n    <Button onPress={() => null}>\\n        I am a button\\n    </Button>\\n  );\\n};\\n\\nexport default ButtonExample;\\n```\\n"},"sources":[{"fileName":"src/Button.tsx","line":47,"character":19}],"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"PressableProps"},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"literal","value":"style"}]}],"name":"Omit"},{"type":"reference","id":12,"name":"ButtonProps"}]}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1357,"name":"Caption","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Caption.tsx","line":9,"character":20}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":429,"name":"CaptionProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1305,"name":"Card","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Card/Card.tsx","line":15,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"CardProps"}],"name":"CardComponent"},"defaultValue":"..."},{"id":1351,"name":"Cell","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Table/Cell.tsx","line":8,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":416,"name":"CellProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1408,"name":"ConditionalWrapper","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/ConditionalWrapper.tsx","line":9,"character":31}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":57,"name":"ConditionalWrapperProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1416,"name":"Container","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Container.tsx","line":17,"character":22}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":68,"name":"ContainerProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1420,"name":"Fab","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Fab.tsx","line":11,"character":16}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":78,"name":"FabProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1424,"name":"Frame","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Frame.tsx","line":10,"character":18}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":84,"name":"FrameProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1359,"name":"Headline","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Headline.tsx","line":9,"character":21}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":433,"name":"HeadlineProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1430,"name":"IconButton","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/IconButton.tsx","line":19,"character":23}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":90,"name":"IconButtonProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1431,"name":"Input","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Input.tsx","line":6,"character":18}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TextInputProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1435,"name":"Link","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Link.tsx","line":18,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":101,"name":"LinkProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1310,"name":"List","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/List/List.tsx","line":12,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":107,"name":"ListProps"}],"name":"ListComponent"},"defaultValue":"..."},{"id":1331,"name":"ListTitle","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/List/ListItem.tsx","line":24,"character":22}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":113,"name":"ListTitleProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1381,"name":"MarginStyleKeys","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/utilities/pick.ts","line":5,"character":28}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"margin"},{"type":"literal","value":"marginTop"},{"type":"literal","value":"marginLeft"},{"type":"literal","value":"marginRight"},{"type":"literal","value":"marginBottom"},{"type":"literal","value":"marginHorizontal"},{"type":"literal","value":"marginVertical"}]}},"defaultValue":"..."},{"id":1439,"name":"MinimalProvider","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/MinimalProvider.tsx","line":14,"character":28}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":135,"name":"MinimalProviderProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1446,"name":"Modal","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Modal.tsx","line":21,"character":18}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":141,"name":"ModalProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1382,"name":"PaddingStyleKeys","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/utilities/pick.ts","line":23,"character":29}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"padding"},{"type":"literal","value":"paddingTop"},{"type":"literal","value":"paddingLeft"},{"type":"literal","value":"paddingRight"},{"type":"literal","value":"paddingBottom"},{"type":"literal","value":"paddingHorizontal"},{"type":"literal","value":"paddingVertical"}]}},"defaultValue":"..."},{"id":1361,"name":"Paragraph","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Paragraph.tsx","line":9,"character":22}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":437,"name":"ParagraphProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1333,"name":"PortalConsumer","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Portal/PortalConsumer.tsx","line":10,"character":27}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PortalConsumerProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1349,"name":"PortalContext","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Portal/PortalHost.tsx","line":22,"character":26}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":155,"name":"PortalMethods"}],"name":"Context"},"defaultValue":"..."},{"id":1353,"name":"Row","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Table/Row.tsx","line":8,"character":16}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":420,"name":"RowProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1465,"name":"ScrollContext","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/ScrollProvider.tsx","line":9,"character":26}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":396,"name":"ScrollContextType"}],"name":"Context"},"defaultValue":"..."},{"id":1466,"name":"ScrollProvider","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/ScrollProvider.tsx","line":14,"character":27}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":396,"name":"ScrollContextType"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1470,"name":"Spacer","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Spacer.tsx","line":10,"character":19}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":404,"name":"SpacerProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1363,"name":"Subheading","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Subheading.tsx","line":9,"character":23}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":441,"name":"SubheadingProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1474,"name":"Switch","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Switch.tsx","line":15,"character":19}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":410,"name":"SwitchProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1355,"name":"Table","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Table/Table.tsx","line":8,"character":18}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":424,"name":"TableProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1370,"name":"Text","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Text.tsx","line":26,"character":17}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":445,"name":"TextProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1383,"name":"TextStyleKeys","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/utilities/pick.ts","line":41,"character":26}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"color"},{"type":"literal","value":"fontFamily"},{"type":"literal","value":"fontSize"},{"type":"literal","value":"fontStyle"},{"type":"literal","value":"fontWeight"},{"type":"literal","value":"letterSpacing"},{"type":"literal","value":"lineHeight"},{"type":"literal","value":"textAlign"},{"type":"literal","value":"textDecorationLine"},{"type":"literal","value":"textDecorationStyle"},{"type":"literal","value":"textDecorationColor"},{"type":"literal","value":"textShadowColor"},{"type":"literal","value":"textShadowOffset"},{"type":"literal","value":"textShadowRadius"},{"type":"literal","value":"textTransform"}]}},"defaultValue":"..."},{"id":1528,"name":"ThemeContext","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/ThemeProvider.tsx","line":8,"character":25}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":511,"name":"ThemeContextType"}],"name":"Context"},"defaultValue":"..."},{"id":1529,"name":"ThemeProvider","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/ThemeProvider.tsx","line":12,"character":26}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":511,"name":"ThemeContextType"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1372,"name":"Title","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/Text/Title.tsx","line":8,"character":18}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":454,"name":"TitleProps"}],"name":"React.FunctionComponent"},"defaultValue":"..."},{"id":1373,"name":"elevations","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/utilities/elevations.ts","line":157,"character":23}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":1374,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}},"defaultValue":"..."},{"id":1452,"name":"ResponsiveList","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"src/ResponsiveList.tsx","line":16,"character":30}],"signatures":[{"id":1453,"name":"ResponsiveList","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1454,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1455,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":389,"typeArguments":[{"type":"reference","name":"T"}],"name":"ResponsiveListProps"}],"name":"React.PropsWithChildren"}}],"type":{"type":"reference","name":"JSX.Element"}}]},{"id":1530,"name":"createTheme","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"src/createTheme.tsx","line":10,"character":24}],"signatures":[{"id":1531,"name":"createTheme","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1532,"name":"userTheme","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":462,"name":"Theme"}],"name":"DeepPartial"},"defaultValue":"..."}],"type":{"type":"reference","id":462,"name":"Theme"}}]},{"id":1375,"name":"pick","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"src/utilities/pick.ts","line":75,"character":20}],"signatures":[{"id":1376,"name":"pick","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1377,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","name":"Style"}},{"id":1378,"name":"U","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":1379,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"T"}},{"id":1380,"name":"paths","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"U"}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"T"},{"type":"reference","name":"U"}],"name":"Pick"}}]},{"id":1533,"name":"useDimensions","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"src/useDimensions.ts","line":11,"character":26}],"signatures":[{"id":1534,"name":"useDimensions","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1535,"name":"dim","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":"window"},{"type":"literal","value":"screen"}]}}],"type":{"type":"reflection","declaration":{"id":1536,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1537,"name":"height","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/useDimensions.ts","line":9,"character":13}],"type":{"type":"intrinsic","name":"number"}},{"id":1538,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/useDimensions.ts","line":9,"character":27}],"type":{"type":"reference","id":459,"name":"Breakpoint"}},{"id":1539,"name":"width","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/useDimensions.ts","line":9,"character":46}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[1537,1538,1539]}]}}}]},{"id":1540,"name":"useResponsive","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"src/useResponsive.ts","line":16,"character":26}],"signatures":[{"id":1541,"name":"useResponsive","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1542,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1543,"name":"breakpoints","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":1544,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1548,"name":"lg","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/useResponsive.ts","line":12,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"T"}]}},{"id":1547,"name":"md","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/useResponsive.ts","line":11,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"T"}]}},{"id":1546,"name":"sm","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/useResponsive.ts","line":10,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"T"}]}},{"id":1549,"name":"xl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/useResponsive.ts","line":13,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"T"}]}},{"id":1545,"name":"xs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/useResponsive.ts","line":9,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"T"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[1548,1547,1546,1549,1545]}]}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"T"}]}}]},{"id":1553,"name":"useScroll","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"src/useScroll.ts","line":7,"character":22}],"signatures":[{"id":1554,"name":"useScroll","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":396,"name":"ScrollContextType"}}]},{"id":1555,"name":"useTheme","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"src/useTheme.ts","line":6,"character":21}],"signatures":[{"id":1556,"name":"useTheme","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":462,"name":"Theme"}}]}],"groups":[{"title":"References","kind":16777216,"children":[1447,1448,1449,1450,1451]},{"title":"Namespaces","kind":2,"children":[1387,1306,1311]},{"title":"Type aliases","kind":4194304,"children":[1475,1476,1389,1356,1304,1350,1400,1409,1417,1421,1358,1425,1432,1309,1313,1436,1440,1360,1334,1332,1456,1352,1461,1467,1362,1471,1354,1364,1478,1525,1371,1550]},{"title":"Variables","kind":32,"children":[1384,1385,1386,1357,1305,1351,1408,1416,1420,1424,1359,1430,1431,1435,1310,1331,1381,1439,1446,1382,1361,1333,1349,1353,1465,1466,1470,1363,1474,1355,1370,1383,1528,1529,1372,1373]},{"title":"Functions","kind":64,"children":[1452,1530,1375,1533,1540,1553,1555]}],"sources":[{"fileName":"src/index.ts","line":1,"character":0}]},{"id":523,"name":"useDimensions","kind":1,"kindString":"Module","flags":{},"children":[{"id":531,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":524},{"id":524,"name":"useDimensions","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"src/useDimensions.ts","line":11,"character":26}],"signatures":[{"id":525,"name":"useDimensions","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":526,"name":"dim","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":"window"},{"type":"literal","value":"screen"}]}}],"type":{"type":"reflection","declaration":{"id":527,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":528,"name":"height","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/useDimensions.ts","line":9,"character":13}],"type":{"type":"intrinsic","name":"number"}},{"id":529,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/useDimensions.ts","line":9,"character":27}],"type":{"type":"reference","id":459,"name":"Breakpoint"}},{"id":530,"name":"width","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/useDimensions.ts","line":9,"character":46}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[528,529,530]}]}}}]}],"groups":[{"title":"References","kind":16777216,"children":[531]},{"title":"Functions","kind":64,"children":[524]}],"sources":[{"fileName":"src/useDimensions.ts","line":1,"character":0}]},{"id":532,"name":"useResponsive","kind":1,"kindString":"Module","flags":{},"children":[{"id":543,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":533},{"id":533,"name":"useResponsive","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"src/useResponsive.ts","line":16,"character":26}],"signatures":[{"id":534,"name":"useResponsive","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":535,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":536,"name":"breakpoints","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":537,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":541,"name":"lg","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/useResponsive.ts","line":12,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"T"}]}},{"id":540,"name":"md","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/useResponsive.ts","line":11,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"T"}]}},{"id":539,"name":"sm","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/useResponsive.ts","line":10,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"T"}]}},{"id":542,"name":"xl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/useResponsive.ts","line":13,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"T"}]}},{"id":538,"name":"xs","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/useResponsive.ts","line":9,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"T"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[541,540,539,542,538]}]}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"T"}]}}]}],"groups":[{"title":"References","kind":16777216,"children":[543]},{"title":"Functions","kind":64,"children":[533]}],"sources":[{"fileName":"src/useResponsive.ts","line":1,"character":0}]},{"id":544,"name":"useScroll","kind":1,"kindString":"Module","flags":{},"children":[{"id":550,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":548},{"id":545,"name":"UseScroll","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"src/useScroll.ts","line":5,"character":21}],"type":{"type":"reflection","declaration":{"id":546,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/useScroll.ts","line":5,"character":23}],"signatures":[{"id":547,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":396,"name":"ScrollContextType"}}]}}},{"id":548,"name":"useScroll","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"src/useScroll.ts","line":7,"character":22}],"signatures":[{"id":549,"name":"useScroll","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":396,"name":"ScrollContextType"}}]}],"groups":[{"title":"References","kind":16777216,"children":[550]},{"title":"Type aliases","kind":4194304,"children":[545]},{"title":"Functions","kind":64,"children":[548]}],"sources":[{"fileName":"src/useScroll.ts","line":1,"character":0}]},{"id":551,"name":"useTheme","kind":1,"kindString":"Module","flags":{},"children":[{"id":554,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":552},{"id":552,"name":"useTheme","kind":64,"kindString":"Function","flags":{"isConst":true},"sources":[{"fileName":"src/useTheme.ts","line":6,"character":21}],"signatures":[{"id":553,"name":"useTheme","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":462,"name":"Theme"}}]}],"groups":[{"title":"References","kind":16777216,"children":[554]},{"title":"Functions","kind":64,"children":[552]}],"sources":[{"fileName":"src/useTheme.ts","line":1,"character":0}]},{"id":559,"name":"utilities","kind":1,"kindString":"Module","flags":{},"children":[{"id":1565,"name":"MarginStyleKeys","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/utilities/pick.ts","line":5,"character":28}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"margin"},{"type":"literal","value":"marginTop"},{"type":"literal","value":"marginLeft"},{"type":"literal","value":"marginRight"},{"type":"literal","value":"marginBottom"},{"type":"literal","value":"marginHorizontal"},{"type":"literal","value":"marginVertical"}]}},"defaultValue":"..."},{"id":1566,"name":"PaddingStyleKeys","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/utilities/pick.ts","line":23,"character":29}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"padding"},{"type":"literal","value":"paddingTop"},{"type":"literal","value":"paddingLeft"},{"type":"literal","value":"paddingRight"},{"type":"literal","value":"paddingBottom"},{"type":"literal","value":"paddingHorizontal"},{"type":"literal","value":"paddingVertical"}]}},"defaultValue":"..."},{"id":1567,"name":"TextStyleKeys","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/utilities/pick.ts","line":41,"character":26}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"color"},{"type":"literal","value":"fontFamily"},{"type":"literal","value":"fontSize"},{"type":"literal","value":"fontStyle"},{"type":"literal","value":"fontWeight"},{"type":"literal","value":"letterSpacing"},{"type":"literal","value":"lineHeight"},{"type":"literal","value":"textAlign"},{"type":"literal","value":"textDecorationLine"},{"type":"literal","value":"textDecorationStyle"},{"type":"literal","value":"textDecorationColor"},{"type":"literal","value":"textShadowColor"},{"type":"literal","value":"textShadowOffset"},{"type":"literal","value":"textShadowRadius"},{"type":"literal","value":"textTransform"}]}},"defaultValue":"..."},{"id":1557,"name":"elevations","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/utilities/elevations.ts","line":157,"character":23}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":1558,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}},"defaultValue":"..."},{"id":1559,"name":"pick","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"src/utilities/pick.ts","line":75,"character":20}],"signatures":[{"id":1560,"name":"pick","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1561,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","name":"Style"}},{"id":1562,"name":"U","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":1563,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"T"}},{"id":1564,"name":"paths","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"U"}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"T"},{"type":"reference","name":"U"}],"name":"Pick"}}]}],"groups":[{"title":"Variables","kind":32,"children":[1565,1566,1567,1557]},{"title":"Functions","kind":64,"children":[1559]}],"sources":[{"fileName":"src/utilities/index.ts","line":1,"character":0}]},{"id":555,"name":"utilities/elevations","kind":1,"kindString":"Module","flags":{},"children":[{"id":558,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":556},{"id":556,"name":"elevations","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/utilities/elevations.ts","line":157,"character":23}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":557,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}},"defaultValue":"..."}],"groups":[{"title":"References","kind":16777216,"children":[558]},{"title":"Variables","kind":32,"children":[556]}],"sources":[{"fileName":"src/utilities/elevations.ts","line":1,"character":0}]},{"id":560,"name":"utilities/pick","kind":1,"kindString":"Module","flags":{},"children":[{"id":570,"name":"default","kind":16777216,"kindString":"Reference","flags":{},"target":561},{"id":567,"name":"MarginStyleKeys","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/utilities/pick.ts","line":5,"character":28}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"margin"},{"type":"literal","value":"marginTop"},{"type":"literal","value":"marginLeft"},{"type":"literal","value":"marginRight"},{"type":"literal","value":"marginBottom"},{"type":"literal","value":"marginHorizontal"},{"type":"literal","value":"marginVertical"}]}},"defaultValue":"..."},{"id":568,"name":"PaddingStyleKeys","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/utilities/pick.ts","line":23,"character":29}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"padding"},{"type":"literal","value":"paddingTop"},{"type":"literal","value":"paddingLeft"},{"type":"literal","value":"paddingRight"},{"type":"literal","value":"paddingBottom"},{"type":"literal","value":"paddingHorizontal"},{"type":"literal","value":"paddingVertical"}]}},"defaultValue":"..."},{"id":569,"name":"TextStyleKeys","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"src/utilities/pick.ts","line":41,"character":26}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"color"},{"type":"literal","value":"fontFamily"},{"type":"literal","value":"fontSize"},{"type":"literal","value":"fontStyle"},{"type":"literal","value":"fontWeight"},{"type":"literal","value":"letterSpacing"},{"type":"literal","value":"lineHeight"},{"type":"literal","value":"textAlign"},{"type":"literal","value":"textDecorationLine"},{"type":"literal","value":"textDecorationStyle"},{"type":"literal","value":"textDecorationColor"},{"type":"literal","value":"textShadowColor"},{"type":"literal","value":"textShadowOffset"},{"type":"literal","value":"textShadowRadius"},{"type":"literal","value":"textTransform"}]}},"defaultValue":"..."},{"id":561,"name":"pick","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"src/utilities/pick.ts","line":75,"character":20}],"signatures":[{"id":562,"name":"pick","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":563,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","name":"Style"}},{"id":564,"name":"U","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":565,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"T"}},{"id":566,"name":"paths","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"U"}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"T"},{"type":"reference","name":"U"}],"name":"Pick"}}]}],"groups":[{"title":"References","kind":16777216,"children":[570]},{"title":"Variables","kind":32,"children":[567,568,569]},{"title":"Functions","kind":64,"children":[561]}],"sources":[{"fileName":"src/utilities/pick.ts","line":1,"character":0}]}],"groups":[{"title":"Modules","kind":1,"children":[1,4,7,55,23,30,34,56,67,77,83,89,97,100,133,106,112,134,140,382,148,151,154,278,383,384,395,403,409,427,415,419,423,457,428,432,436,440,444,453,458,510,517,522,523,532,544,551,559,555,560],"categories":[{"title":"Button","children":[7]},{"title":"Other","children":[1,4,55,23,30,34,56,67,77,83,89,97,100,133,106,112,134,140,382,148,151,154,278,383,384,395,403,409,427,415,419,423,457,428,432,436,440,444,453,458,510,517,522,523,532,544,551,559,555,560]}]}]}')},249:function(e,t,n){"use strict";n.d(t,"a",(function(){return H}));var i=n(10),r=n.n(i),a=n(250),s=n(136),l=n(5),d=n(0),o=n.n(d),p=n(15),c=n.n(p),m=n(251),u=n(153),y=n(709),g=n(247),f=n(216),k=n(712),h=n(22),x=n.n(h),S=function(e){var t=e.children,n=Object(l.useTheme)(),i={backgroundColor:n.palette.background.paper,fontFamily:"Inconsolata",fontSize:14,padding:n.spacing(.5)};return d.createElement(l.Text,{style:i},t)},v=function(e){var t=e.children,n={borderColor:Object(l.useTheme)().palette.divider,borderWidth:1,flexDirection:"row",justifyContent:"center"};return d.createElement(l.Container,{style:n,xs:3},t)},P=n(248),T=function(e){var t={blockquote:function(e){return d.createElement(v,{key:e.key},d.createElement(n(396)("./"+e.children[0].children[0].children[0].content).default))},code_inline:function(e){return d.createElement(S,{key:e.key},e.content)},em:function(e,t){return d.createElement(l.Text,{key:e.key,color:"secondary"},t)},fence:function(e){return d.createElement(l.View,{key:e.key},d.createElement(l.Spacer,{spacing:2}),d.createElement(F,{language:e.sourceInfo},e.content.trim()),d.createElement(l.Spacer,{spacing:2}))},hardbreak:function(e,t){return d.createElement(l.View,{key:e.key,style:{height:8,width:"100%"}},t)},heading1:function(e,t){return d.createElement(l.View,{key:e.key},d.createElement(l.Headline,null,t))},heading2:function(e,t){return d.createElement(l.View,{key:e.key},d.createElement(l.Spacer,{spacing:4}),d.createElement(l.Title,{style:{fontFamily:"NotoSansBold"}},t),d.createElement(l.Spacer,{spacing:2}))},heading3:function(e,t){return d.createElement(l.View,{key:e.key},d.createElement(l.Spacer,{spacing:4}),d.createElement(l.Subheading,{style:{fontFamily:"NotoSansBold"}},t),d.createElement(l.Spacer,{spacing:2}))},heading4:function(e,t){return d.createElement(l.View,{key:e.key},d.createElement(l.Spacer,{spacing:4}),d.createElement(l.Subheading,{style:{fontFamily:"NotoSansBold"}},t),d.createElement(l.Spacer,{spacing:2}))},link:function(e,t){return d.createElement(l.Link,{key:e.key,href:e.attributes.href},t)},paragraph:function(e,t){return d.createElement(l.Paragraph,{key:e.key},t)},table:function(e,t){return d.createElement(l.View,{key:e.key},d.createElement(l.Table,null,t),d.createElement(l.Spacer,null))},td:function(e,t){return d.createElement(l.Cell,{key:e.key},d.createElement(l.Text,null,t))},text:function(e){return e.content},th:function(e,t){return d.createElement(l.Cell,{key:e.key},d.createElement(l.Subheading,null,t))},tr:function(e,t){return d.createElement(l.Row,{key:e.key},t)}},i=e.children;return d.createElement(P.a,{rules:t},i)},b=n(24),E=n.n(b),C=n(9),N=n.n(C),_=n(21),R=n(2),w=n(711),M=n(707),A=n(708);function V(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function O(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?V(Object(n),!0).forEach((function(t){N()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):V(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var F=function(e){var t=Object(l.useTheme)(),n=function(e){return O(O({},e),{},{display:void 0})},i=Object.fromEntries(Object.entries("light"===t.palette.type?M.a:A.a).map((function(e){var t=r()(e,2),i=t[0],a=t[1];return[i,n(a)]})));return d.createElement(w.a,E()({},e,{CodeTag:R.a,customStyle:{padding:0},PreTag:R.a,renderer:function(e){var n=e.rows;return d.createElement(R.a,{style:[i.hljs,{backgroundColor:t.palette.background.paper,padding:16}]},function e(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"0";return n.reduce((function(n,a,s){var l;a.children&&n.push(d.createElement(_.a,{key:r+"."+s,style:[{color:i.hljs.color}].concat(x()(((null==(l=a.properties)?void 0:l.className)||[]).map((function(e){return i[e]}))),[{fontSize:t.typography.text.fontSize,fontFamily:"Inconsolata"}])},e(a.children,r+"."+s)));return a.value&&n.push(a.value),n}),[])}(n))},style:i}))},I=[].concat(x()(["get_started","demo","theming","hooks"].map((function(e){return{path:e,title:Object(k.a)(e),files:[e+".md"]}}))),x()(["app_bar","avatar","button","card","fab","icon_button","input","layout","modal","responsive_list","switch","text"].map((function(e){return{path:e,title:Object(k.a)(e),files:["minimalui/variables/"+e.replace("_","")+".md","minimalui/types/"+e.replace("_","")+"props.md"]}})))),L=function(e){var t=e.file,i=d.useState(),a=r()(i,2),s=a[0],l=a[1];return d.useEffect((function(){fetch(n(592)("./"+t)).then((function(e){return e.text()})).then((function(e){return e.replace("# Variable:","# ").replace("# Type alias:","# ").replace(/\u2022 `Const` (.+)\n/,"").replace(/\u01ac (.+)\n/,"")})).then(l)}),[t]),s?d.createElement(T,null,s):null},U=function(e){var t=e.route.params,n=(void 0===t?{}:t).path,i=I.find((function(e){return e.path===n}))||I[0];return d.createElement(l.ScrollView,null,d.createElement(l.Container,{md:8,sm:4,xs:2},i.files.map((function(e){return d.createElement(l.View,{key:e},d.createElement(L,{file:e}),d.createElement(l.Spacer,{spacing:8}))}))))},B=Object(y.a)(),D={enabled:!0,prefixes:["https://minimalui-org.github.io/"],config:{screens:{Page:"minimalui/:path?"}}},j=function(e){return o.a.createElement(g.a,e,I.map((function(t){return o.a.createElement(l.Button,{key:t.path,onPress:function(){return e.navigation.navigate("Page",{path:t.path})},style:{alignItems:"flex-start",backgroundColor:"transparent"}},t.title)})))},W=function(e){var t=e.darkMode,n=e.setDarkMode,i=Object(l.useDimensions)().type,a=Object(d.useState)(!0),s=r()(a,2),p=s[0],y=s[1],g=Object(d.useState)(),h=r()(g,2),x=h[0],S=h[1],v=Object(l.useTheme)();if(Object(d.useEffect)((function(){p||function(){var e,t;c.a.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,c.a.awrap(u.a.getItem("NAVIGATION_STATE"));case 3:e=n.sent,void 0!==(t=e?JSON.parse(e):void 0)&&S(t);case 6:return n.prev=6,y(!0),n.finish(6);case 9:case"end":return n.stop()}}),null,null,[[0,,6,9]],Promise)}()}),[p]),!p)return null;var P={dark:t,colors:{background:v.palette.background.default,border:"transparent",card:v.palette.background.paper,notification:v.palette.secondary,primary:v.palette.primary,text:v.palette.text.primary}},T="lg"===i||"xl"===i;return o.a.createElement(f.a,{initialState:x,linking:D,onStateChange:function(e){return u.a.setItem("NAVIGATION_STATE",JSON.stringify(e))},theme:P},o.a.createElement(B.Navigator,{drawerContent:function(e){return o.a.createElement(j,e)},drawerStyle:{backgroundColor:v.palette.background.default,borderRightColor:v.palette.background.paper,borderRightWidth:1,width:240},drawerType:T?"permanent":"slide",screenOptions:{header:function(e){var i=e.scene,r=i.descriptor,a=r.navigation,s=r.options.title,d=i.route,p=d.name,c=d.params;return o.a.createElement(l.Container,{style:{flexDirection:"row",alignItems:"center"}},!T&&o.a.createElement(l.IconButton,{onPress:a.toggleDrawer},o.a.createElement(m.a,{name:"menu"})),o.a.createElement(l.Spacer,null),o.a.createElement(l.Title,{style:{flex:1}},(null==c?void 0:c.path)&&Object(k.a)(null==c?void 0:c.path)||s||p),o.a.createElement(m.a,{color:v.palette.text.primary,name:"sun",size:18}),o.a.createElement(l.Spacer,null),o.a.createElement(l.Switch,{onValueChange:function(){return n(!t)},value:t}),o.a.createElement(l.Spacer,null),o.a.createElement(m.a,{color:v.palette.text.primary,name:"moon",size:18}))},headerShown:!0}},o.a.createElement(B.Screen,{component:U,name:"Page"})))};function H(){var e=Object(d.useState)(!0),t=r()(e,2),n=t[0],i=t[1],p=Object(l.createTheme)({palette:{type:n?"dark":"light"},typography:{text:{fontSize:16}}}),c=Object(s.c)({NotoSansRegular:s.a,NotoSansBold:s.b,Inconsolata:a.a});return r()(c,1)[0]?o.a.createElement(l.MinimalProvider,{theme:p},o.a.createElement(W,{darkMode:n,setDarkMode:i})):null}},257:function(e,t,n){e.exports=n(699)},396:function(e,t,n){var i={"./AppBarExample":187,"./AppBarExample.tsx":187,"./AvatarExample":188,"./AvatarExample.tsx":188,"./ButtonExample":189,"./ButtonExample.tsx":189,"./CardExample":190,"./CardExample.tsx":190,"./FabExample":191,"./FabExample.tsx":191,"./IconButtonExample":192,"./IconButtonExample.tsx":192,"./InputExample":193,"./InputExample.tsx":193,"./ModalExample":194,"./ModalExample.tsx":194,"./ResponsiveListExample":195,"./ResponsiveListExample.tsx":195,"./SwitchExample":196,"./SwitchExample.tsx":196,"./TextExample":197,"./TextExample.tsx":197};function r(e){var t=a(e);return n(t)}function a(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}r.keys=function(){return Object.keys(i)},r.resolve=a,e.exports=r,r.id=396},592:function(e,t,n){var i={"./demo.md":593,"./get_started.md":594,"./hooks.md":595,"./minimalui":198,"./minimalui.json":198,"./minimalui/README.md":596,"./minimalui/classes/flatlist.md":597,"./minimalui/classes/image.md":598,"./minimalui/classes/scrollview.md":599,"./minimalui/classes/view.md":600,"./minimalui/functions/createtheme.md":601,"./minimalui/functions/pick.md":602,"./minimalui/functions/usedimensions.md":603,"./minimalui/functions/useresponsive.md":604,"./minimalui/functions/usescroll.md":605,"./minimalui/functions/usetheme.md":606,"./minimalui/interfaces/dimensions.md":607,"./minimalui/modules/card.md":608,"./minimalui/modules/list.md":609,"./minimalui/types/appbarprops.md":610,"./minimalui/types/avatarprops.md":611,"./minimalui/types/breakpoint.md":612,"./minimalui/types/breakpointprops.md":613,"./minimalui/types/buttonprops.md":614,"./minimalui/types/captionprops.md":615,"./minimalui/types/cardprops.md":616,"./minimalui/types/cellprops.md":617,"./minimalui/types/conditionalwrapperprops.md":618,"./minimalui/types/containerprops.md":619,"./minimalui/types/fabprops.md":620,"./minimalui/types/frameprops.md":621,"./minimalui/types/headlineprops.md":622,"./minimalui/types/iconbuttonprops.md":623,"./minimalui/types/inputprops.md":624,"./minimalui/types/linkprops.md":625,"./minimalui/types/listprops.md":626,"./minimalui/types/listtitleprops.md":627,"./minimalui/types/minimalproviderprops.md":628,"./minimalui/types/modalprops.md":629,"./minimalui/types/paragraphprops.md":630,"./minimalui/types/portalmethods.md":631,"./minimalui/types/portalprops.md":632,"./minimalui/types/responsivelistprops.md":633,"./minimalui/types/rowprops.md":634,"./minimalui/types/scrollcontexttype.md":635,"./minimalui/types/spacerprops.md":636,"./minimalui/types/subheadingprops.md":637,"./minimalui/types/switchprops.md":638,"./minimalui/types/tableprops.md":639,"./minimalui/types/textprops.md":640,"./minimalui/types/theme.md":641,"./minimalui/types/themecontexttype.md":642,"./minimalui/types/titleprops.md":643,"./minimalui/types/usescroll.md":644,"./minimalui/variables/appbar.md":645,"./minimalui/variables/avatar.md":646,"./minimalui/variables/button.md":647,"./minimalui/variables/caption.md":648,"./minimalui/variables/card.md":649,"./minimalui/variables/card.media.md":650,"./minimalui/variables/card.title.md":651,"./minimalui/variables/cell.md":652,"./minimalui/variables/conditionalwrapper.md":653,"./minimalui/variables/container.md":654,"./minimalui/variables/dimensions.md":655,"./minimalui/variables/elevations.md":656,"./minimalui/variables/fab.md":657,"./minimalui/variables/frame.md":658,"./minimalui/variables/headline.md":659,"./minimalui/variables/iconbutton.md":660,"./minimalui/variables/input.md":661,"./minimalui/variables/link.md":662,"./minimalui/variables/list.item.md":663,"./minimalui/variables/list.md":664,"./minimalui/variables/listtitle.md":665,"./minimalui/variables/marginstylekeys.md":666,"./minimalui/variables/minimalprovider.md":667,"./minimalui/variables/modal.md":668,"./minimalui/variables/paddingstylekeys.md":669,"./minimalui/variables/paragraph.md":670,"./minimalui/variables/portalconsumer.md":671,"./minimalui/variables/portalcontext.md":672,"./minimalui/variables/responsivelist.md":673,"./minimalui/variables/row.md":674,"./minimalui/variables/scrollcontext.md":675,"./minimalui/variables/scrollprovider.md":676,"./minimalui/variables/spacer.md":677,"./minimalui/variables/subheading.md":678,"./minimalui/variables/switch.md":679,"./minimalui/variables/table.md":680,"./minimalui/variables/text.md":681,"./minimalui/variables/textstylekeys.md":682,"./minimalui/variables/themecontext.md":683,"./minimalui/variables/themeprovider.md":684,"./minimalui/variables/title.md":685,"./theming.md":686};function r(e){var t=a(e);return n(t)}function a(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}r.keys=function(){return Object.keys(i)},r.resolve=a,e.exports=r,r.id=592},593:function(e,t,n){e.exports=n.p+"static/media/demo.df7356e7.md"},594:function(e,t,n){e.exports=n.p+"static/media/get_started.82012b7e.md"},595:function(e,t,n){e.exports=n.p+"static/media/hooks.f73cfb42.md"},596:function(e,t,n){e.exports=n.p+"static/media/README.11a05884.md"},597:function(e,t,n){e.exports=n.p+"static/media/flatlist.99f1eab1.md"},598:function(e,t,n){e.exports=n.p+"static/media/image.b5770341.md"},599:function(e,t,n){e.exports=n.p+"static/media/scrollview.e30b72ce.md"},600:function(e,t,n){e.exports=n.p+"static/media/view.32e0dc03.md"},601:function(e,t,n){e.exports=n.p+"static/media/createtheme.156657a4.md"},602:function(e,t,n){e.exports=n.p+"static/media/pick.ab38bdc7.md"},603:function(e,t,n){e.exports=n.p+"static/media/usedimensions.473577e9.md"},604:function(e,t,n){e.exports=n.p+"static/media/useresponsive.1571db4d.md"},605:function(e,t,n){e.exports=n.p+"static/media/usescroll.0baa3f7c.md"},606:function(e,t,n){e.exports=n.p+"static/media/usetheme.fa8a827a.md"},607:function(e,t,n){e.exports=n.p+"static/media/dimensions.53e17143.md"},608:function(e,t,n){e.exports=n.p+"static/media/card.18fe7747.md"},609:function(e,t,n){e.exports=n.p+"static/media/list.0365a51b.md"},610:function(e,t,n){e.exports=n.p+"static/media/appbarprops.da06936b.md"},611:function(e,t,n){e.exports=n.p+"static/media/avatarprops.43364453.md"},612:function(e,t,n){e.exports=n.p+"static/media/breakpoint.d695ee43.md"},613:function(e,t,n){e.exports=n.p+"static/media/breakpointprops.df972cf6.md"},614:function(e,t,n){e.exports=n.p+"static/media/buttonprops.624b59c1.md"},615:function(e,t,n){e.exports=n.p+"static/media/captionprops.25221c64.md"},616:function(e,t,n){e.exports=n.p+"static/media/cardprops.a314a88f.md"},617:function(e,t,n){e.exports=n.p+"static/media/cellprops.5627d718.md"},618:function(e,t,n){e.exports=n.p+"static/media/conditionalwrapperprops.796b36f0.md"},619:function(e,t,n){e.exports=n.p+"static/media/containerprops.274514bc.md"},620:function(e,t,n){e.exports=n.p+"static/media/fabprops.963ec9cb.md"},621:function(e,t,n){e.exports=n.p+"static/media/frameprops.d5c537ce.md"},622:function(e,t,n){e.exports=n.p+"static/media/headlineprops.62136b4b.md"},623:function(e,t,n){e.exports=n.p+"static/media/iconbuttonprops.931cf678.md"},624:function(e,t,n){e.exports=n.p+"static/media/inputprops.5a60b776.md"},625:function(e,t,n){e.exports=n.p+"static/media/linkprops.e97dfb58.md"},626:function(e,t,n){e.exports=n.p+"static/media/listprops.bfbbf280.md"},627:function(e,t,n){e.exports=n.p+"static/media/listtitleprops.114d6f1c.md"},628:function(e,t,n){e.exports=n.p+"static/media/minimalproviderprops.b4418240.md"},629:function(e,t,n){e.exports=n.p+"static/media/modalprops.157d0c69.md"},630:function(e,t,n){e.exports=n.p+"static/media/paragraphprops.8b7d8eed.md"},631:function(e,t,n){e.exports=n.p+"static/media/portalmethods.1e7505b2.md"},632:function(e,t,n){e.exports=n.p+"static/media/portalprops.0df1d469.md"},633:function(e,t,n){e.exports=n.p+"static/media/responsivelistprops.093b7f1a.md"},634:function(e,t,n){e.exports=n.p+"static/media/rowprops.b8feda68.md"},635:function(e,t,n){e.exports=n.p+"static/media/scrollcontexttype.e4a02e95.md"},636:function(e,t,n){e.exports=n.p+"static/media/spacerprops.2baf3fe9.md"},637:function(e,t,n){e.exports=n.p+"static/media/subheadingprops.3fad8329.md"},638:function(e,t,n){e.exports=n.p+"static/media/switchprops.98750501.md"},639:function(e,t,n){e.exports=n.p+"static/media/tableprops.c668c73d.md"},640:function(e,t,n){e.exports=n.p+"static/media/textprops.20fabff4.md"},641:function(e,t,n){e.exports=n.p+"static/media/theme.d0b41433.md"},642:function(e,t,n){e.exports=n.p+"static/media/themecontexttype.660d6099.md"},643:function(e,t,n){e.exports=n.p+"static/media/titleprops.8fc443ab.md"},644:function(e,t,n){e.exports=n.p+"static/media/usescroll.7825d98f.md"},645:function(e,t,n){e.exports=n.p+"static/media/appbar.272bfe8a.md"},646:function(e,t,n){e.exports=n.p+"static/media/avatar.c363aef9.md"},647:function(e,t,n){e.exports=n.p+"static/media/button.2028da48.md"},648:function(e,t,n){e.exports=n.p+"static/media/caption.1fa5550a.md"},649:function(e,t,n){e.exports=n.p+"static/media/card.43109460.md"},650:function(e,t,n){e.exports=n.p+"static/media/card.media.b3c2a5a8.md"},651:function(e,t,n){e.exports=n.p+"static/media/card.title.8bd33721.md"},652:function(e,t,n){e.exports=n.p+"static/media/cell.8fd3cd5b.md"},653:function(e,t,n){e.exports=n.p+"static/media/conditionalwrapper.ac1bfa41.md"},654:function(e,t,n){e.exports=n.p+"static/media/container.d356bf71.md"},655:function(e,t,n){e.exports=n.p+"static/media/dimensions.687f2602.md"},656:function(e,t,n){e.exports=n.p+"static/media/elevations.15632b2f.md"},657:function(e,t,n){e.exports=n.p+"static/media/fab.a4911c60.md"},658:function(e,t,n){e.exports=n.p+"static/media/frame.10a38bea.md"},659:function(e,t,n){e.exports=n.p+"static/media/headline.5d49b577.md"},660:function(e,t,n){e.exports=n.p+"static/media/iconbutton.05c79d0b.md"},661:function(e,t,n){e.exports=n.p+"static/media/input.1519fda9.md"},662:function(e,t,n){e.exports=n.p+"static/media/link.0ae9f639.md"},663:function(e,t,n){e.exports=n.p+"static/media/list.item.858b21db.md"},664:function(e,t,n){e.exports=n.p+"static/media/list.52f9d413.md"},665:function(e,t,n){e.exports=n.p+"static/media/listtitle.fdfa82ba.md"},666:function(e,t,n){e.exports=n.p+"static/media/marginstylekeys.b634bd71.md"},667:function(e,t,n){e.exports=n.p+"static/media/minimalprovider.c95fb0da.md"},668:function(e,t,n){e.exports=n.p+"static/media/modal.d3480d05.md"},669:function(e,t,n){e.exports=n.p+"static/media/paddingstylekeys.c1c190ca.md"},670:function(e,t,n){e.exports=n.p+"static/media/paragraph.2ec3db0e.md"},671:function(e,t,n){e.exports=n.p+"static/media/portalconsumer.07fa0ca9.md"},672:function(e,t,n){e.exports=n.p+"static/media/portalcontext.4221ee5a.md"},673:function(e,t,n){e.exports=n.p+"static/media/responsivelist.5e7670ec.md"},674:function(e,t,n){e.exports=n.p+"static/media/row.f93959f9.md"},675:function(e,t,n){e.exports=n.p+"static/media/scrollcontext.fe63d31b.md"},676:function(e,t,n){e.exports=n.p+"static/media/scrollprovider.1062151e.md"},677:function(e,t,n){e.exports=n.p+"static/media/spacer.607d81ca.md"},678:function(e,t,n){e.exports=n.p+"static/media/subheading.7534cacf.md"},679:function(e,t,n){e.exports=n.p+"static/media/switch.5c68ec14.md"},680:function(e,t,n){e.exports=n.p+"static/media/table.0198edf1.md"},681:function(e,t,n){e.exports=n.p+"static/media/text.0f258bd9.md"},682:function(e,t,n){e.exports=n.p+"static/media/textstylekeys.71690b6c.md"},683:function(e,t,n){e.exports=n.p+"static/media/themecontext.f9719088.md"},684:function(e,t,n){e.exports=n.p+"static/media/themeprovider.45baec9a.md"},685:function(e,t,n){e.exports=n.p+"static/media/title.938cd022.md"},686:function(e,t,n){e.exports=n.p+"static/media/theming.28a7154a.md"}},[[257,1,2]]]);
//# sourceMappingURL=app.6989762c.chunk.js.map